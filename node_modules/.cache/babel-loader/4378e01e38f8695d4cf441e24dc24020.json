{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\n\nfunction getUnitOffset(size) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var offsetStr = \"\".concat(offset);\n  var cells = offsetStr.match(/^(.*)\\%$/);\n\n  if (cells) {\n    return size * (parseFloat(cells[1]) / 100);\n  }\n\n  return parseFloat(offsetStr);\n}\n\nfunction getNumberOffset(rect, offset) {\n  var _ref = offset || [],\n      _ref2 = _slicedToArray(_ref, 2),\n      offsetX = _ref2[0],\n      offsetY = _ref2[1];\n\n  return [getUnitOffset(rect.width, offsetX), getUnitOffset(rect.height, offsetY)];\n}\n\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\n\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y; // Top & Bottom\n\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  } // Left & Right\n\n\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n\n    return point;\n  }).join('');\n}\n\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n    ready: false,\n    offsetX: 0,\n    offsetY: 0,\n    arrowX: 0,\n    arrowY: 0,\n    scaleX: 1,\n    scaleY: 1,\n    align: builtinPlacements[placement] || {}\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      offsetInfo = _React$useState2[0],\n      setOffsetInfo = _React$useState2[1];\n\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n\n    return collectScroller(popupEle);\n  }, [popupEle]); // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n\n  var prevFlipRef = React.useRef({});\n\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n\n  if (!open) {\n    resetFlipCache();\n  } // ========================= Align =========================\n\n\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      var getIntersectionVisibleArea = function getIntersectionVisibleArea(offsetX, offsetY) {\n        var area = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : visibleArea;\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, area.left);\n        var visibleT = Math.max(t, area.top);\n        var visibleR = Math.min(r, area.right);\n        var visibleB = Math.min(b, area.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      };\n\n      var syncNextPopupPosition = function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      };\n\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement); // Placement\n\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign); // Reset first\n\n\n      popupElement.style.left = '0';\n      popupElement.style.top = '0'; // Calculate align style, we should consider `transform` case\n\n      var targetRect;\n\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n\n      var popupRect = popupElement.getBoundingClientRect();\n\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n          width = _win$getComputedStyle.width,\n          height = _win$getComputedStyle.height;\n\n      var _doc$documentElement = doc.documentElement,\n          clientWidth = _doc$documentElement.clientWidth,\n          clientHeight = _doc$documentElement.clientHeight,\n          scrollWidth = _doc$documentElement.scrollWidth,\n          scrollHeight = _doc$documentElement.scrollHeight,\n          scrollTop = _doc$documentElement.scrollTop,\n          scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width; // Get bounding of visible area\n\n      var visibleRegion = {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      var scrollRegion = {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      };\n      var htmlRegion = placementInfo.htmlRegion;\n      var VISIBLE = 'visible';\n      var VISIBLE_FIRST = 'visibleFirst';\n\n      if (htmlRegion !== 'scroll' && htmlRegion !== VISIBLE_FIRST) {\n        htmlRegion = VISIBLE;\n      }\n\n      var isVisibleFirst = htmlRegion === VISIBLE_FIRST;\n      var scrollRegionArea = getVisibleArea(scrollRegion, scrollerList);\n      var visibleRegionArea = getVisibleArea(visibleRegion, scrollerList);\n      var visibleArea = htmlRegion === VISIBLE ? visibleRegionArea : scrollRegionArea; // When set to `visibleFirst`,\n      // the check `adjust` logic will use `visibleRegion` for check first.\n\n      var adjustCheckVisibleArea = isVisibleFirst ? visibleRegionArea : visibleArea; // Reset back\n\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop; // Calculate scale\n\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000); // No need to align since it's not visible in view\n\n\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      } // Offset\n\n\n      var offset = placementInfo.offset,\n          targetOffset = placementInfo.targetOffset;\n\n      var _getNumberOffset = getNumberOffset(popupRect, offset),\n          _getNumberOffset2 = _slicedToArray(_getNumberOffset, 2),\n          popupOffsetX = _getNumberOffset2[0],\n          popupOffsetY = _getNumberOffset2[1];\n\n      var _getNumberOffset3 = getNumberOffset(targetRect, targetOffset),\n          _getNumberOffset4 = _slicedToArray(_getNumberOffset3, 2),\n          targetOffsetX = _getNumberOffset4[0],\n          targetOffsetY = _getNumberOffset4[1];\n\n      targetRect.x -= targetOffsetX;\n      targetRect.y -= targetOffsetY; // Points\n\n      var _ref3 = placementInfo.points || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          popupPoint = _ref4[0],\n          targetPoint = _ref4[1];\n\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints); // Real align info may not same as origin one\n\n      var nextAlignInfo = _objectSpread({}, placementInfo); // Next Offset\n\n\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY); // As `visibleFirst`, we prepare this for check\n\n      var originIntersectionRecommendArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY, visibleRegionArea); // ========================== Overflow ===========================\n\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n          adjustY = overflow.adjustY,\n          shiftX = overflow.shiftX,\n          shiftY = overflow.shiftY;\n\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n\n        return val >= 0;\n      }; // Prepare position\n\n\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      syncNextPopupPosition(); // >>>>>>>>>> Top & Bottom\n\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0]; // Bottom to Top\n\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > adjustCheckVisibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n\n        var newVisibleArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY);\n        var newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        newVisibleArea > originIntersectionVisibleArea || newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      } // Top to Bottom\n\n\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < adjustCheckVisibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n\n        var _newVisibleArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY);\n\n        var _newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        _newVisibleArea > originIntersectionVisibleArea || _newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        _newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      } // >>>>>>>>>> Left & Right\n\n\n      var needAdjustX = supportAdjust(adjustX); // >>>>> Flip\n\n      var sameLR = popupPoints[1] === targetPoints[1]; // Right to Left\n\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > adjustCheckVisibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n\n        var _newVisibleArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY);\n\n        var _newVisibleRecommendArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        _newVisibleArea2 > originIntersectionVisibleArea || _newVisibleArea2 === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        _newVisibleRecommendArea2 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      } // Left to Right\n\n\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < adjustCheckVisibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n\n        var _newVisibleArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY);\n\n        var _newVisibleRecommendArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        _newVisibleArea3 > originIntersectionVisibleArea || _newVisibleArea3 === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        _newVisibleRecommendArea3 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      } // ============================ Shift ============================\n\n\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        } // Right\n\n\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n\n      var numShiftY = shiftY === true ? 0 : shiftY;\n\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        } // Bottom\n\n\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      } // ============================ Arrow ============================\n      // Arrow center align\n\n\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current; // Merge all align requirement into one frame\n\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  }; // Reset ready status when placement & open changed\n\n\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/@rc-component/trigger/es/hooks/useAlign.js"],"names":["_objectSpread","_slicedToArray","isDOM","isVisible","useEvent","useLayoutEffect","React","collectScroller","getVisibleArea","getWin","toNum","getUnitOffset","size","offset","arguments","length","undefined","offsetStr","concat","cells","match","parseFloat","getNumberOffset","rect","_ref","_ref2","offsetX","offsetY","width","height","splitPoints","points","getAlignPoint","topBottom","leftRight","x","y","reversePoints","index","reverseMap","t","b","l","r","map","point","i","join","useAlign","open","popupEle","target","placement","builtinPlacements","popupAlign","onPopupAlign","_React$useState","useState","ready","arrowX","arrowY","scaleX","scaleY","align","_React$useState2","offsetInfo","setOffsetInfo","alignCountRef","useRef","scrollerList","useMemo","prevFlipRef","resetFlipCache","current","onAlign","getIntersectionVisibleArea","area","visibleArea","popupRect","popupWidth","popupHeight","visibleL","Math","max","left","visibleT","top","visibleR","min","right","visibleB","bottom","syncNextPopupPosition","nextPopupY","nextOffsetY","nextPopupBottom","nextPopupX","nextOffsetX","nextPopupRight","popupElement","originLeft","style","originTop","doc","ownerDocument","win","placementInfo","targetRect","Array","isArray","getBoundingClientRect","_win$getComputedStyle","getComputedStyle","_doc$documentElement","documentElement","clientWidth","clientHeight","scrollWidth","scrollHeight","scrollTop","scrollLeft","targetHeight","targetWidth","visibleRegion","scrollRegion","htmlRegion","VISIBLE","VISIBLE_FIRST","isVisibleFirst","scrollRegionArea","visibleRegionArea","adjustCheckVisibleArea","_scaleX","round","_scaleY","targetOffset","_getNumberOffset","_getNumberOffset2","popupOffsetX","popupOffsetY","_getNumberOffset3","_getNumberOffset4","targetOffsetX","targetOffsetY","_ref3","_ref4","popupPoint","targetPoint","targetPoints","popupPoints","targetAlignPoint","popupAlignPoint","nextAlignInfo","originIntersectionVisibleArea","originIntersectionRecommendArea","targetAlignPointTL","popupAlignPointTL","targetAlignPointBR","popupAlignPointBR","overflow","adjustX","adjustY","shiftX","shiftY","supportAdjust","val","needAdjustY","sameTB","bt","tmpNextOffsetY","newVisibleArea","newVisibleRecommendArea","tb","_tmpNextOffsetY","_newVisibleArea","_newVisibleRecommendArea","needAdjustX","sameLR","rl","tmpNextOffsetX","_newVisibleArea2","_newVisibleRecommendArea2","lr","_tmpNextOffsetX","_newVisibleArea3","_newVisibleRecommendArea3","numShiftX","numShiftY","popupLeft","popupRight","popupTop","popupBottom","targetLeft","targetRight","targetTop","targetBottom","maxLeft","minRight","xCenter","nextArrowX","maxTop","minBottom","yCenter","nextArrowY","triggerAlign","id","Promise","resolve","then","resetReady","ori"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction getUnitOffset(size) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var offsetStr = \"\".concat(offset);\n  var cells = offsetStr.match(/^(.*)\\%$/);\n  if (cells) {\n    return size * (parseFloat(cells[1]) / 100);\n  }\n  return parseFloat(offsetStr);\n}\nfunction getNumberOffset(rect, offset) {\n  var _ref = offset || [],\n    _ref2 = _slicedToArray(_ref, 2),\n    offsetX = _ref2[0],\n    offsetY = _ref2[1];\n  return [getUnitOffset(rect.width, offsetX), getUnitOffset(rect.height, offsetY)];\n}\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n  var prevFlipRef = React.useRef({});\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n  if (!open) {\n    resetFlipCache();\n  }\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleRegion = {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      var scrollRegion = {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      };\n      var htmlRegion = placementInfo.htmlRegion;\n      var VISIBLE = 'visible';\n      var VISIBLE_FIRST = 'visibleFirst';\n      if (htmlRegion !== 'scroll' && htmlRegion !== VISIBLE_FIRST) {\n        htmlRegion = VISIBLE;\n      }\n      var isVisibleFirst = htmlRegion === VISIBLE_FIRST;\n      var scrollRegionArea = getVisibleArea(scrollRegion, scrollerList);\n      var visibleRegionArea = getVisibleArea(visibleRegion, scrollerList);\n      var visibleArea = htmlRegion === VISIBLE ? visibleRegionArea : scrollRegionArea;\n\n      // When set to `visibleFirst`,\n      // the check `adjust` logic will use `visibleRegion` for check first.\n      var adjustCheckVisibleArea = isVisibleFirst ? visibleRegionArea : visibleArea;\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _getNumberOffset = getNumberOffset(popupRect, offset),\n        _getNumberOffset2 = _slicedToArray(_getNumberOffset, 2),\n        popupOffsetX = _getNumberOffset2[0],\n        popupOffsetY = _getNumberOffset2[1];\n      var _getNumberOffset3 = getNumberOffset(targetRect, targetOffset),\n        _getNumberOffset4 = _slicedToArray(_getNumberOffset3, 2),\n        targetOffsetX = _getNumberOffset4[0],\n        targetOffsetY = _getNumberOffset4[1];\n      targetRect.x -= targetOffsetX;\n      targetRect.y -= targetOffsetY;\n\n      // Points\n      var _ref3 = placementInfo.points || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        popupPoint = _ref4[0],\n        targetPoint = _ref4[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var area = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : visibleArea;\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, area.left);\n        var visibleT = Math.max(t, area.top);\n        var visibleR = Math.min(r, area.right);\n        var visibleB = Math.min(b, area.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // As `visibleFirst`, we prepare this for check\n      var originIntersectionRecommendArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY, visibleRegionArea);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > adjustCheckVisibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        var newVisibleArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY);\n        var newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        newVisibleArea > originIntersectionVisibleArea || newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < adjustCheckVisibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        var _newVisibleArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY);\n        var _newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea > originIntersectionVisibleArea || _newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > adjustCheckVisibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        var _newVisibleArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea2 > originIntersectionVisibleArea || _newVisibleArea2 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea2 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < adjustCheckVisibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        var _newVisibleArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea3 > originIntersectionVisibleArea || _newVisibleArea3 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea3 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}"]},"metadata":{},"sourceType":"module"}