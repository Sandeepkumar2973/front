{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from \"rc-util/es/omit\";\nimport React, { createRef, forwardRef, useContext } from 'react';\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { getFixedBottom, getFixedTop, getTargetRect } from './utils';\nconst TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\n\nfunction getDefaultTarget() {\n  return typeof window !== 'undefined' ? window : null;\n}\n\nvar AffixStatus;\n\n(function (AffixStatus) {\n  AffixStatus[AffixStatus[\"None\"] = 0] = \"None\";\n  AffixStatus[AffixStatus[\"Prepare\"] = 1] = \"Prepare\";\n})(AffixStatus || (AffixStatus = {}));\n\nlet InternalAffix =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InternalAffix, _React$Component);\n\n  var _super = _createSuper(InternalAffix);\n\n  function InternalAffix() {\n    var _this;\n\n    _classCallCheck(this, InternalAffix);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      status: AffixStatus.None,\n      lastAffix: false,\n      prevTarget: null\n    };\n    _this.placeholderNodeRef =\n    /*#__PURE__*/\n    createRef();\n    _this.fixedNodeRef =\n    /*#__PURE__*/\n    createRef();\n\n    _this.addListeners = () => {\n      const targetFunc = _this.getTargetFunc();\n\n      const target = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      const prevTarget = _this.state.prevTarget;\n\n      if (prevTarget !== target) {\n        TRIGGER_EVENTS.forEach(eventName => {\n          prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n          target === null || target === void 0 ? void 0 : target.addEventListener(eventName, _this.lazyUpdatePosition);\n        });\n\n        _this.updatePosition();\n\n        _this.setState({\n          prevTarget: target\n        });\n      }\n    };\n\n    _this.removeListeners = () => {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n        _this.timer = null;\n      }\n\n      const prevTarget = _this.state.prevTarget;\n\n      const targetFunc = _this.getTargetFunc();\n\n      const newTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      TRIGGER_EVENTS.forEach(eventName => {\n        newTarget === null || newTarget === void 0 ? void 0 : newTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n        prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n      });\n\n      _this.updatePosition.cancel(); // https://github.com/ant-design/ant-design/issues/22683\n\n\n      _this.lazyUpdatePosition.cancel();\n    };\n\n    _this.getOffsetTop = () => {\n      const _this$props = _this.props,\n            offsetBottom = _this$props.offsetBottom,\n            offsetTop = _this$props.offsetTop;\n      return offsetBottom === undefined && offsetTop === undefined ? 0 : offsetTop;\n    };\n\n    _this.getOffsetBottom = () => _this.props.offsetBottom; // =================== Measure ===================\n\n\n    _this.measure = () => {\n      const _this$state = _this.state,\n            status = _this$state.status,\n            lastAffix = _this$state.lastAffix;\n      const onChange = _this.props.onChange;\n\n      const targetFunc = _this.getTargetFunc();\n\n      if (status !== AffixStatus.Prepare || !_this.fixedNodeRef.current || !_this.placeholderNodeRef.current || !targetFunc) {\n        return;\n      }\n\n      const offsetTop = _this.getOffsetTop();\n\n      const offsetBottom = _this.getOffsetBottom();\n\n      const targetNode = targetFunc();\n\n      if (targetNode) {\n        const newState = {\n          status: AffixStatus.None\n        };\n        const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n\n        if (placeholderRect.top === 0 && placeholderRect.left === 0 && placeholderRect.width === 0 && placeholderRect.height === 0) {\n          return;\n        }\n\n        const targetRect = getTargetRect(targetNode);\n        const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n        const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n\n        if (fixedTop !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            top: fixedTop,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        } else if (fixedBottom !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            bottom: fixedBottom,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        }\n\n        newState.lastAffix = !!newState.affixStyle;\n\n        if (onChange && lastAffix !== newState.lastAffix) {\n          onChange(newState.lastAffix);\n        }\n\n        _this.setState(newState);\n      }\n    };\n\n    _this.prepareMeasure = () => {\n      // event param is used before. Keep compatible ts define here.\n      _this.setState({\n        status: AffixStatus.Prepare,\n        affixStyle: undefined,\n        placeholderStyle: undefined\n      }); // Test if `updatePosition` called\n\n\n      if (process.env.NODE_ENV === 'test') {\n        const onTestUpdatePosition = _this.props.onTestUpdatePosition;\n        onTestUpdatePosition === null || onTestUpdatePosition === void 0 ? void 0 : onTestUpdatePosition();\n      }\n    };\n\n    _this.updatePosition = throttleByAnimationFrame(() => {\n      _this.prepareMeasure();\n    });\n    _this.lazyUpdatePosition = throttleByAnimationFrame(() => {\n      const targetFunc = _this.getTargetFunc();\n\n      const affixStyle = _this.state.affixStyle; // Check position change before measure to make Safari smooth\n\n      if (targetFunc && affixStyle) {\n        const offsetTop = _this.getOffsetTop();\n\n        const offsetBottom = _this.getOffsetBottom();\n\n        const targetNode = targetFunc();\n\n        if (targetNode && _this.placeholderNodeRef.current) {\n          const targetRect = getTargetRect(targetNode);\n          const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n          const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n          const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n\n          if (fixedTop !== undefined && affixStyle.top === fixedTop || fixedBottom !== undefined && affixStyle.bottom === fixedBottom) {\n            return;\n          }\n        }\n      } // Directly call prepare measure since it's already throttled.\n\n\n      _this.prepareMeasure();\n    });\n    return _this;\n  }\n\n  _createClass(InternalAffix, [{\n    key: \"getTargetFunc\",\n    value: function getTargetFunc() {\n      const getTargetContainer = this.context.getTargetContainer;\n      const target = this.props.target;\n\n      if (target !== undefined) {\n        return target;\n      }\n\n      return getTargetContainer !== null && getTargetContainer !== void 0 ? getTargetContainer : getDefaultTarget;\n    } // Event handler\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // [Legacy] Wait for parent component ref has its value.\n      // We should use target as directly element instead of function which makes element check hard.\n      this.timer = setTimeout(this.addListeners);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.addListeners();\n\n      if (prevProps.offsetTop !== this.props.offsetTop || prevProps.offsetBottom !== this.props.offsetBottom) {\n        this.updatePosition();\n      }\n\n      this.measure();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    } // =================== Render ===================\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      const _this$state2 = this.state,\n            affixStyle = _this$state2.affixStyle,\n            placeholderStyle = _this$state2.placeholderStyle;\n      const _this$props2 = this.props,\n            affixPrefixCls = _this$props2.affixPrefixCls,\n            rootClassName = _this$props2.rootClassName,\n            children = _this$props2.children;\n      const className = classNames(affixStyle && rootClassName, {\n        [affixPrefixCls]: !!affixStyle\n      });\n      let props = omit(this.props, ['prefixCls', 'offsetTop', 'offsetBottom', 'target', 'onChange', 'affixPrefixCls', 'rootClassName']); // Omit this since `onTestUpdatePosition` only works on test.\n\n      if (process.env.NODE_ENV === 'test') {\n        props = omit(props, ['onTestUpdatePosition']);\n      }\n\n      return (\n        /*#__PURE__*/\n        React.createElement(ResizeObserver, {\n          onResize: this.updatePosition\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", Object.assign({}, props, {\n          ref: this.placeholderNodeRef\n        }), affixStyle &&\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: placeholderStyle,\n          \"aria-hidden\": \"true\"\n        }),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: className,\n          ref: this.fixedNodeRef,\n          style: affixStyle\n        },\n        /*#__PURE__*/\n        React.createElement(ResizeObserver, {\n          onResize: this.updatePosition\n        }, children))))\n      );\n    }\n  }]);\n\n  return InternalAffix;\n}(React.Component);\n\nInternalAffix.contextType = ConfigContext;\nconst Affix =\n/*#__PURE__*/\nforwardRef((props, ref) => {\n  const customizePrefixCls = props.prefixCls,\n        rootClassName = props.rootClassName;\n\n  const _useContext = useContext(ConfigContext),\n        getPrefixCls = _useContext.getPrefixCls;\n\n  const affixPrefixCls = getPrefixCls('affix', customizePrefixCls);\n\n  const _useStyle = useStyle(affixPrefixCls),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1];\n\n  const AffixProps = Object.assign(Object.assign({}, props), {\n    affixPrefixCls,\n    rootClassName: classNames(rootClassName, hashId)\n  });\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(InternalAffix, Object.assign({}, AffixProps, {\n    ref: ref\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Affix.displayName = 'Affix';\n}\n\nexport default Affix;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/affix/index.js"],"names":["_classCallCheck","_createClass","_inherits","_createSuper","classNames","ResizeObserver","omit","React","createRef","forwardRef","useContext","throttleByAnimationFrame","ConfigContext","useStyle","getFixedBottom","getFixedTop","getTargetRect","TRIGGER_EVENTS","getDefaultTarget","window","AffixStatus","InternalAffix","_React$Component","_super","_this","apply","arguments","state","status","None","lastAffix","prevTarget","placeholderNodeRef","fixedNodeRef","addListeners","targetFunc","getTargetFunc","target","forEach","eventName","removeEventListener","lazyUpdatePosition","addEventListener","updatePosition","setState","removeListeners","timer","clearTimeout","newTarget","cancel","getOffsetTop","props","offsetBottom","offsetTop","undefined","getOffsetBottom","measure","onChange","Prepare","current","targetNode","newState","placeholderRect","top","left","width","height","targetRect","fixedTop","fixedBottom","affixStyle","position","placeholderStyle","bottom","prepareMeasure","process","env","NODE_ENV","onTestUpdatePosition","key","value","getTargetContainer","context","componentDidMount","setTimeout","componentDidUpdate","prevProps","componentWillUnmount","render","affixPrefixCls","rootClassName","children","className","createElement","onResize","Object","assign","ref","style","Component","contextType","Affix","customizePrefixCls","prefixCls","getPrefixCls","wrapSSR","hashId","AffixProps","displayName"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from \"rc-util/es/omit\";\nimport React, { createRef, forwardRef, useContext } from 'react';\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { getFixedBottom, getFixedTop, getTargetRect } from './utils';\nconst TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\nfunction getDefaultTarget() {\n  return typeof window !== 'undefined' ? window : null;\n}\nvar AffixStatus;\n(function (AffixStatus) {\n  AffixStatus[AffixStatus[\"None\"] = 0] = \"None\";\n  AffixStatus[AffixStatus[\"Prepare\"] = 1] = \"Prepare\";\n})(AffixStatus || (AffixStatus = {}));\nlet InternalAffix = /*#__PURE__*/function (_React$Component) {\n  _inherits(InternalAffix, _React$Component);\n  var _super = _createSuper(InternalAffix);\n  function InternalAffix() {\n    var _this;\n    _classCallCheck(this, InternalAffix);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      status: AffixStatus.None,\n      lastAffix: false,\n      prevTarget: null\n    };\n    _this.placeholderNodeRef = /*#__PURE__*/createRef();\n    _this.fixedNodeRef = /*#__PURE__*/createRef();\n    _this.addListeners = () => {\n      const targetFunc = _this.getTargetFunc();\n      const target = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      const {\n        prevTarget\n      } = _this.state;\n      if (prevTarget !== target) {\n        TRIGGER_EVENTS.forEach(eventName => {\n          prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n          target === null || target === void 0 ? void 0 : target.addEventListener(eventName, _this.lazyUpdatePosition);\n        });\n        _this.updatePosition();\n        _this.setState({\n          prevTarget: target\n        });\n      }\n    };\n    _this.removeListeners = () => {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n        _this.timer = null;\n      }\n      const {\n        prevTarget\n      } = _this.state;\n      const targetFunc = _this.getTargetFunc();\n      const newTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      TRIGGER_EVENTS.forEach(eventName => {\n        newTarget === null || newTarget === void 0 ? void 0 : newTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n        prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n      });\n      _this.updatePosition.cancel();\n      // https://github.com/ant-design/ant-design/issues/22683\n      _this.lazyUpdatePosition.cancel();\n    };\n    _this.getOffsetTop = () => {\n      const {\n        offsetBottom,\n        offsetTop\n      } = _this.props;\n      return offsetBottom === undefined && offsetTop === undefined ? 0 : offsetTop;\n    };\n    _this.getOffsetBottom = () => _this.props.offsetBottom;\n    // =================== Measure ===================\n    _this.measure = () => {\n      const {\n        status,\n        lastAffix\n      } = _this.state;\n      const {\n        onChange\n      } = _this.props;\n      const targetFunc = _this.getTargetFunc();\n      if (status !== AffixStatus.Prepare || !_this.fixedNodeRef.current || !_this.placeholderNodeRef.current || !targetFunc) {\n        return;\n      }\n      const offsetTop = _this.getOffsetTop();\n      const offsetBottom = _this.getOffsetBottom();\n      const targetNode = targetFunc();\n      if (targetNode) {\n        const newState = {\n          status: AffixStatus.None\n        };\n        const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n        if (placeholderRect.top === 0 && placeholderRect.left === 0 && placeholderRect.width === 0 && placeholderRect.height === 0) {\n          return;\n        }\n        const targetRect = getTargetRect(targetNode);\n        const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n        const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n        if (fixedTop !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            top: fixedTop,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        } else if (fixedBottom !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            bottom: fixedBottom,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        }\n        newState.lastAffix = !!newState.affixStyle;\n        if (onChange && lastAffix !== newState.lastAffix) {\n          onChange(newState.lastAffix);\n        }\n        _this.setState(newState);\n      }\n    };\n    _this.prepareMeasure = () => {\n      // event param is used before. Keep compatible ts define here.\n      _this.setState({\n        status: AffixStatus.Prepare,\n        affixStyle: undefined,\n        placeholderStyle: undefined\n      });\n      // Test if `updatePosition` called\n      if (process.env.NODE_ENV === 'test') {\n        const {\n          onTestUpdatePosition\n        } = _this.props;\n        onTestUpdatePosition === null || onTestUpdatePosition === void 0 ? void 0 : onTestUpdatePosition();\n      }\n    };\n    _this.updatePosition = throttleByAnimationFrame(() => {\n      _this.prepareMeasure();\n    });\n    _this.lazyUpdatePosition = throttleByAnimationFrame(() => {\n      const targetFunc = _this.getTargetFunc();\n      const {\n        affixStyle\n      } = _this.state;\n      // Check position change before measure to make Safari smooth\n      if (targetFunc && affixStyle) {\n        const offsetTop = _this.getOffsetTop();\n        const offsetBottom = _this.getOffsetBottom();\n        const targetNode = targetFunc();\n        if (targetNode && _this.placeholderNodeRef.current) {\n          const targetRect = getTargetRect(targetNode);\n          const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n          const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n          const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n          if (fixedTop !== undefined && affixStyle.top === fixedTop || fixedBottom !== undefined && affixStyle.bottom === fixedBottom) {\n            return;\n          }\n        }\n      }\n      // Directly call prepare measure since it's already throttled.\n      _this.prepareMeasure();\n    });\n    return _this;\n  }\n  _createClass(InternalAffix, [{\n    key: \"getTargetFunc\",\n    value: function getTargetFunc() {\n      const {\n        getTargetContainer\n      } = this.context;\n      const {\n        target\n      } = this.props;\n      if (target !== undefined) {\n        return target;\n      }\n      return getTargetContainer !== null && getTargetContainer !== void 0 ? getTargetContainer : getDefaultTarget;\n    }\n    // Event handler\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // [Legacy] Wait for parent component ref has its value.\n      // We should use target as directly element instead of function which makes element check hard.\n      this.timer = setTimeout(this.addListeners);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.addListeners();\n      if (prevProps.offsetTop !== this.props.offsetTop || prevProps.offsetBottom !== this.props.offsetBottom) {\n        this.updatePosition();\n      }\n      this.measure();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n    // =================== Render ===================\n  }, {\n    key: \"render\",\n    value: function render() {\n      const {\n        affixStyle,\n        placeholderStyle\n      } = this.state;\n      const {\n        affixPrefixCls,\n        rootClassName,\n        children\n      } = this.props;\n      const className = classNames(affixStyle && rootClassName, {\n        [affixPrefixCls]: !!affixStyle\n      });\n      let props = omit(this.props, ['prefixCls', 'offsetTop', 'offsetBottom', 'target', 'onChange', 'affixPrefixCls', 'rootClassName']);\n      // Omit this since `onTestUpdatePosition` only works on test.\n      if (process.env.NODE_ENV === 'test') {\n        props = omit(props, ['onTestUpdatePosition']);\n      }\n      return /*#__PURE__*/React.createElement(ResizeObserver, {\n        onResize: this.updatePosition\n      }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        ref: this.placeholderNodeRef\n      }), affixStyle && /*#__PURE__*/React.createElement(\"div\", {\n        style: placeholderStyle,\n        \"aria-hidden\": \"true\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        ref: this.fixedNodeRef,\n        style: affixStyle\n      }, /*#__PURE__*/React.createElement(ResizeObserver, {\n        onResize: this.updatePosition\n      }, children))));\n    }\n  }]);\n  return InternalAffix;\n}(React.Component);\nInternalAffix.contextType = ConfigContext;\nconst Affix = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const affixPrefixCls = getPrefixCls('affix', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(affixPrefixCls);\n  const AffixProps = Object.assign(Object.assign({}, props), {\n    affixPrefixCls,\n    rootClassName: classNames(rootClassName, hashId)\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(InternalAffix, Object.assign({}, AffixProps, {\n    ref: ref\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Affix.displayName = 'Affix';\n}\nexport default Affix;"]},"metadata":{},"sourceType":"module"}