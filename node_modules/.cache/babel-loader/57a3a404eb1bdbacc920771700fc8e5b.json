{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { isPresetColor } from '../_util/colors';\n\nconst Ribbon = _ref => {\n  let className = _ref.className,\n      customizePrefixCls = _ref.prefixCls,\n      style = _ref.style,\n      color = _ref.color,\n      children = _ref.children,\n      text = _ref.text,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'end' : _ref$placement;\n\n  const _React$useContext = React.useContext(ConfigContext),\n        getPrefixCls = _React$useContext.getPrefixCls,\n        direction = _React$useContext.direction;\n\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n\n  const _useStyle = useStyle(prefixCls),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1];\n\n  const colorStyle = {};\n  const cornerColorStyle = {};\n\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-wrapper`, hashId)\n  }, children,\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  },\n  /*#__PURE__*/\n  React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text),\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\n\nexport default Ribbon;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/badge/Ribbon.js"],"names":["classNames","React","ConfigContext","useStyle","isPresetColor","Ribbon","_ref","className","customizePrefixCls","prefixCls","style","color","children","text","placement","useContext","getPrefixCls","direction","colorInPreset","ribbonCls","wrapSSR","hashId","colorStyle","cornerColorStyle","background","createElement","Object","assign","process","env","NODE_ENV","displayName"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AACA,MAAMC,MAAM,GAAGC,IAAI,IAAI;AAAA,MAEnBC,SAFmB,GASjBD,IATiB,CAEnBC,SAFmB;AAAA,MAGRC,kBAHQ,GASjBF,IATiB,CAGnBG,SAHmB;AAAA,MAInBC,KAJmB,GASjBJ,IATiB,CAInBI,KAJmB;AAAA,MAKnBC,KALmB,GASjBL,IATiB,CAKnBK,KALmB;AAAA,MAMnBC,QANmB,GASjBN,IATiB,CAMnBM,QANmB;AAAA,MAOnBC,IAPmB,GASjBP,IATiB,CAOnBO,IAPmB;AAAA,uBASjBP,IATiB,CAQnBQ,SARmB;AAAA,MAQnBA,SARmB,+BAQP,KARO;;AAAA,4BAajBb,KAAK,CAACc,UAAN,CAAiBb,aAAjB,CAbiB;AAAA,QAWnBc,YAXmB,qBAWnBA,YAXmB;AAAA,QAYnBC,SAZmB,qBAYnBA,SAZmB;;AAcrB,QAAMR,SAAS,GAAGO,YAAY,CAAC,QAAD,EAAWR,kBAAX,CAA9B;AACA,QAAMU,aAAa,GAAGd,aAAa,CAACO,KAAD,EAAQ,KAAR,CAAnC;AACA,QAAMQ,SAAS,GAAGnB,UAAU,CAACS,SAAD,EAAa,GAAEA,SAAU,cAAaK,SAAU,EAAhD,EAAmD;AAC7E,KAAE,GAAEL,SAAU,MAAd,GAAsBQ,SAAS,KAAK,KADyC;AAE7E,KAAE,GAAER,SAAU,UAASE,KAAM,EAA7B,GAAiCO;AAF4C,GAAnD,EAGzBX,SAHyB,CAA5B;;AAhBqB,oBAoBKJ,QAAQ,CAACM,SAAD,CApBb;AAAA;AAAA,QAoBdW,OApBc;AAAA,QAoBLC,MApBK;;AAqBrB,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;;AACA,MAAIZ,KAAK,IAAI,CAACO,aAAd,EAA6B;AAC3BI,IAAAA,UAAU,CAACE,UAAX,GAAwBb,KAAxB;AACAY,IAAAA,gBAAgB,CAACZ,KAAjB,GAAyBA,KAAzB;AACD;;AACD,SAAOS,OAAO;AAAE;AAAanB,EAAAA,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AACtDlB,IAAAA,SAAS,EAAEP,UAAU,CAAE,GAAES,SAAU,UAAd,EAAyBY,MAAzB;AADiC,GAA3B,EAE1BT,QAF0B;AAEhB;AAAaX,EAAAA,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AACnDlB,IAAAA,SAAS,EAAEP,UAAU,CAACmB,SAAD,EAAYE,MAAZ,CAD8B;AAEnDX,IAAAA,KAAK,EAAEgB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,UAAlB,CAAd,EAA6CZ,KAA7C;AAF4C,GAA3B;AAGvB;AAAaT,EAAAA,KAAK,CAACwB,aAAN,CAAoB,MAApB,EAA4B;AAC1ClB,IAAAA,SAAS,EAAG,GAAEE,SAAU;AADkB,GAA5B,EAEbI,IAFa,CAHU;AAKhB;AAAaZ,EAAAA,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AAChDlB,IAAAA,SAAS,EAAG,GAAEE,SAAU,SADwB;AAEhDC,IAAAA,KAAK,EAAEa;AAFyC,GAA3B,CALG,CAFG,CAAf,CAAd;AAWD,CAtCD;;AAuCA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCzB,EAAAA,MAAM,CAAC0B,WAAP,GAAqB,QAArB;AACD;;AACD,eAAe1B,MAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { isPresetColor } from '../_util/colors';\nconst Ribbon = _ref => {\n  let {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end'\n  } = _ref;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-wrapper`, hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;"]},"metadata":{},"sourceType":"module"}