{"ast":null,"code":"import capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\n\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`],\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n};\n\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let textColor = _ref.textColor,\n      lightBorderColor = _ref.lightBorderColor,\n      lightColor = _ref.lightColor,\n      darkColor = _ref.darkColor;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\n\nconst genBaseStyle = token => {\n  const paddingXXS = token.paddingXXS,\n        lineWidth = token.lineWidth,\n        tagPaddingHorizontal = token.tagPaddingHorizontal,\n        componentCls = token.componentCls;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Tag', token => {\n  const lineWidth = token.lineWidth,\n        fontSizeIcon = token.fontSizeIcon;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n}, token => ({\n  defaultBg: token.colorFillQuaternary,\n  defaultColor: token.colorText\n}));","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/tag/style/index.js"],"names":["capitalize","resetComponent","genComponentStyleHook","genPresetColor","mergeToken","genTagStatusStyle","token","status","cssVariableType","capitalizedCssVariableType","componentCls","color","background","borderColor","genPresetStyle","colorKey","_ref","textColor","lightBorderColor","lightColor","darkColor","colorTextLightSolid","genBaseStyle","paddingXXS","lineWidth","tagPaddingHorizontal","paddingInline","iconMarginInline","Object","assign","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","defaultBg","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","direction","defaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","iconCls","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","tagBorderlessBg","fontSizeIcon","fontSizeSM","lineHeightSM","tagToken","colorFillTertiary","colorFillQuaternary","colorText"],"mappings":"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","sourcesContent":["import capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`],\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n}, token => ({\n  defaultBg: token.colorFillQuaternary,\n  defaultColor: token.colorText\n}));"]},"metadata":{},"sourceType":"module"}