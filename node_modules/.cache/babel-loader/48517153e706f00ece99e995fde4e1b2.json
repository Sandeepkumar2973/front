{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\n\nconst CheckableTag = props => {\n  const customizePrefixCls = props.prefixCls,\n        className = props.className,\n        checked = props.checked,\n        onChange = props.onChange,\n        onClick = props.onClick,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  const _React$useContext = React.useContext(ConfigContext),\n        getPrefixCls = _React$useContext.getPrefixCls;\n\n  const handleClick = e => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  const prefixCls = getPrefixCls('tag', customizePrefixCls); // Style\n\n  const _useStyle = useStyle(prefixCls),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1];\n\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-checkable`]: true,\n    [`${prefixCls}-checkable-checked`]: checked\n  }, className, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(\"span\", Object.assign({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  })));\n};\n\nexport default CheckableTag;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/tag/CheckableTag.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","React","ConfigContext","useStyle","CheckableTag","props","customizePrefixCls","prefixCls","className","checked","onChange","onClick","restProps","useContext","getPrefixCls","handleClick","wrapSSR","hashId","cls","createElement","assign"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst CheckableTag = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      checked,\n      onChange,\n      onClick\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const handleClick = e => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  const prefixCls = getPrefixCls('tag', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-checkable`]: true,\n    [`${prefixCls}-checkable-checked`]: checked\n  }, className, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"span\", Object.assign({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  })));\n};\nexport default CheckableTag;"]},"metadata":{},"sourceType":"module"}