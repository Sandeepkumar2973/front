{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal'; // ============================== Shared ==============================\n\nconst genSharedDividerStyle = token => {\n  const componentCls = token.componentCls,\n        sizePaddingEdgeHorizontal = token.sizePaddingEdgeHorizontal,\n        colorSplit = token.colorSplit,\n        lineWidth = token.lineWidth;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${lineWidth}px solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        margin: `0 ${token.dividerVerticalGutterMargin}px`,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${lineWidth}px solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        margin: `${token.dividerHorizontalGutterMargin}px 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${token.dividerHorizontalWithTextGutterMargin}px 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${lineWidth}px solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: '5%'\n        },\n        '&::after': {\n          width: '95%'\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: '95%'\n        },\n        '&::after': {\n          width: '5%'\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        padding: '0 1em'\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${lineWidth}px 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerVerticalGutterMargin: token.marginXS,\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, {\n  sizePaddingEdgeHorizontal: 0\n});","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/divider/style/index.js"],"names":["resetComponent","genComponentStyleHook","mergeToken","genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","Object","assign","borderBlockStart","position","top","display","height","margin","dividerVerticalGutterMargin","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","padding","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","dividerToken","marginXS","marginLG"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AACA,SAASC,qBAAT,EAAgCC,UAAhC,QAAkD,sBAAlD,C,CACA;;AACA,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AAAA,QAEnCC,YAFmC,GAMjCD,KANiC,CAEnCC,YAFmC;AAAA,QAGnCC,yBAHmC,GAMjCF,KANiC,CAGnCE,yBAHmC;AAAA,QAInCC,UAJmC,GAMjCH,KANiC,CAInCG,UAJmC;AAAA,QAKnCC,SALmC,GAMjCJ,KANiC,CAKnCI,SALmC;AAOrC,SAAO;AACL,KAACH,YAAD,GAAgBI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,cAAc,CAACI,KAAD,CAAhC,CAAd,EAAwD;AACtEO,MAAAA,gBAAgB,EAAG,GAAEH,SAAU,YAAWD,UAAW,EADiB;AAEtE;AACA,oBAAc;AACZK,QAAAA,QAAQ,EAAE,UADE;AAEZC,QAAAA,GAAG,EAAE,SAFO;AAGZC,QAAAA,OAAO,EAAE,cAHG;AAIZC,QAAAA,MAAM,EAAE,OAJI;AAKZC,QAAAA,MAAM,EAAG,KAAIZ,KAAK,CAACa,2BAA4B,IALnC;AAMZC,QAAAA,aAAa,EAAE,QANH;AAOZC,QAAAA,SAAS,EAAE,CAPC;AAQZC,QAAAA,iBAAiB,EAAG,GAAEZ,SAAU,YAAWD,UAAW;AAR1C,OAHwD;AAatE,sBAAgB;AACdO,QAAAA,OAAO,EAAE,MADK;AAEdO,QAAAA,KAAK,EAAE,MAFO;AAGdC,QAAAA,KAAK,EAAE,MAHO;AAIdC,QAAAA,QAAQ,EAAE,MAJI;AAKdP,QAAAA,MAAM,EAAG,GAAEZ,KAAK,CAACoB,6BAA8B;AALjC,OAbsD;AAoBtE,OAAE,eAAcnB,YAAa,YAA7B,GAA2C;AACzCS,QAAAA,OAAO,EAAE,MADgC;AAEzCW,QAAAA,UAAU,EAAE,QAF6B;AAGzCT,QAAAA,MAAM,EAAG,GAAEZ,KAAK,CAACsB,qCAAsC,MAHd;AAIzCC,QAAAA,KAAK,EAAEvB,KAAK,CAACwB,gBAJ4B;AAKzCC,QAAAA,UAAU,EAAE,GAL6B;AAMzCC,QAAAA,QAAQ,EAAE1B,KAAK,CAAC2B,UANyB;AAOzCC,QAAAA,UAAU,EAAE,QAP6B;AAQzCC,QAAAA,SAAS,EAAE,QAR8B;AASzCtB,QAAAA,gBAAgB,EAAG,KAAIJ,UAAW,EATO;AAUzC,+BAAuB;AACrBK,UAAAA,QAAQ,EAAE,UADW;AAErBU,UAAAA,KAAK,EAAE,KAFc;AAGrBX,UAAAA,gBAAgB,EAAG,GAAEH,SAAU,sBAHV;AAIrB;AACA0B,UAAAA,qBAAqB,EAAE,SALF;AAMrBC,UAAAA,cAAc,EAAE,CANK;AAOrBC,UAAAA,SAAS,EAAE,iBAPU;AAQrBC,UAAAA,OAAO,EAAE;AARY;AAVkB,OApB2B;AAyCtE,OAAE,eAAchC,YAAa,iBAA7B,GAAgD;AAC9C,qBAAa;AACXiB,UAAAA,KAAK,EAAE;AADI,SADiC;AAI9C,oBAAY;AACVA,UAAAA,KAAK,EAAE;AADG;AAJkC,OAzCsB;AAiDtE,OAAE,eAAcjB,YAAa,kBAA7B,GAAiD;AAC/C,qBAAa;AACXiB,UAAAA,KAAK,EAAE;AADI,SADkC;AAI/C,oBAAY;AACVA,UAAAA,KAAK,EAAE;AADG;AAJmC,OAjDqB;AAyDtE,OAAE,GAAEjB,YAAa,aAAjB,GAAgC;AAC9BS,QAAAA,OAAO,EAAE,cADqB;AAE9BwB,QAAAA,OAAO,EAAE;AAFqB,OAzDsC;AA6DtE,kBAAY;AACVC,QAAAA,UAAU,EAAE,MADF;AAEVC,QAAAA,WAAW,EAAEjC,UAFH;AAGVkC,QAAAA,WAAW,EAAE,QAHH;AAIVC,QAAAA,WAAW,EAAG,GAAElC,SAAU;AAJhB,OA7D0D;AAmEtE,OAAE,eAAcH,YAAa,aAAYA,YAAa,SAAtD,GAAiE;AAC/D,+BAAuB;AACrBoC,UAAAA,WAAW,EAAE;AADQ;AADwC,OAnEK;AAwEtE,OAAE,aAAYpC,YAAa,SAA3B,GAAsC;AACpCsC,QAAAA,sBAAsB,EAAEnC,SADY;AAEpCoC,QAAAA,eAAe,EAAE,CAFmB;AAGpCjC,QAAAA,gBAAgB,EAAE,CAHkB;AAIpCwB,QAAAA,cAAc,EAAE;AAJoB,OAxEgC;AA8EtE,OAAE,UAAS9B,YAAa,YAAxB,GAAsC;AACpCsB,QAAAA,KAAK,EAAEvB,KAAK,CAACyC,SADuB;AAEpChB,QAAAA,UAAU,EAAE,QAFwB;AAGpCC,QAAAA,QAAQ,EAAE1B,KAAK,CAAC0B;AAHoB,OA9EgC;AAmFtE,OAAE,eAAczB,YAAa,kBAAiBA,YAAa,qCAA3D,GAAkG;AAChG,qBAAa;AACXiB,UAAAA,KAAK,EAAE;AADI,SADmF;AAIhG,oBAAY;AACVA,UAAAA,KAAK,EAAE;AADG,SAJoF;AAOhG,SAAE,GAAEjB,YAAa,aAAjB,GAAgC;AAC9ByC,UAAAA,kBAAkB,EAAExC;AADU;AAPgE,OAnF5B;AA8FtE,OAAE,eAAcD,YAAa,mBAAkBA,YAAa,sCAA5D,GAAoG;AAClG,qBAAa;AACXiB,UAAAA,KAAK,EAAE;AADI,SADqF;AAIlG,oBAAY;AACVA,UAAAA,KAAK,EAAE;AADG,SAJsF;AAOlG,SAAE,GAAEjB,YAAa,aAAjB,GAAgC;AAC9B0C,UAAAA,gBAAgB,EAAEzC;AADY;AAPkE;AA9F9B,KAAxD;AADX,GAAP;AA4GD,CAnHD,C,CAoHA;;;AACA,eAAeL,qBAAqB,CAAC,SAAD,EAAYG,KAAK,IAAI;AACvD,QAAM4C,YAAY,GAAG9C,UAAU,CAACE,KAAD,EAAQ;AACrCa,IAAAA,2BAA2B,EAAEb,KAAK,CAAC6C,QADE;AAErCvB,IAAAA,qCAAqC,EAAEtB,KAAK,CAACY,MAFR;AAGrCQ,IAAAA,6BAA6B,EAAEpB,KAAK,CAAC8C;AAHA,GAAR,CAA/B;AAKA,SAAO,CAAC/C,qBAAqB,CAAC6C,YAAD,CAAtB,CAAP;AACD,CAPmC,EAOjC;AACD1C,EAAAA,yBAAyB,EAAE;AAD1B,CAPiC,CAApC","sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${lineWidth}px solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        margin: `0 ${token.dividerVerticalGutterMargin}px`,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${lineWidth}px solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        margin: `${token.dividerHorizontalGutterMargin}px 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${token.dividerHorizontalWithTextGutterMargin}px 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${lineWidth}px solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: '5%'\n        },\n        '&::after': {\n          width: '95%'\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: '95%'\n        },\n        '&::after': {\n          width: '5%'\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        padding: '0 1em'\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${lineWidth}px 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerVerticalGutterMargin: token.marginXS,\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, {\n  sizePaddingEdgeHorizontal: 0\n});"]},"metadata":{},"sourceType":"module"}