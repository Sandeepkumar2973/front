{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport { INTERNAL_HOOKS } from 'rc-table';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport scrollTo from '../_util/scrollTo';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider/context';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport useSize from '../config-provider/hooks/useSize';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport renderExpandIcon from './ExpandIcon';\nimport RcTable from './RcTable';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\n\nconst InternalTable = (props, ref) => {\n  const customizePrefixCls = props.prefixCls,\n        className = props.className,\n        rootClassName = props.rootClassName,\n        style = props.style,\n        customizeSize = props.size,\n        bordered = props.bordered,\n        customizeDropdownPrefixCls = props.dropdownPrefixCls,\n        dataSource = props.dataSource,\n        pagination = props.pagination,\n        rowSelection = props.rowSelection,\n        _props$rowKey = props.rowKey,\n        rowKey = _props$rowKey === void 0 ? 'key' : _props$rowKey,\n        rowClassName = props.rowClassName,\n        columns = props.columns,\n        children = props.children,\n        legacyChildrenColumnName = props.childrenColumnName,\n        onChange = props.onChange,\n        getPopupContainer = props.getPopupContainer,\n        loading = props.loading,\n        expandIcon = props.expandIcon,\n        expandable = props.expandable,\n        expandedRowRender = props.expandedRowRender,\n        expandIconColumnIndex = props.expandIconColumnIndex,\n        indentSize = props.indentSize,\n        scroll = props.scroll,\n        sortDirections = props.sortDirections,\n        locale = props.locale,\n        _props$showSorterTool = props.showSorterTooltip,\n        showSorterTooltip = _props$showSorterTool === void 0 ? true : _props$showSorterTool;\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n\n  const _React$useContext = React.useContext(ConfigContext),\n        _React$useContext$loc = _React$useContext.locale,\n        contextLocale = _React$useContext$loc === void 0 ? defaultLocale : _React$useContext$loc,\n        direction = _React$useContext.direction,\n        renderEmpty = _React$useContext.renderEmpty,\n        getPrefixCls = _React$useContext.getPrefixCls,\n        getContextPopupContainer = _React$useContext.getPopupContainer;\n\n  const mergedSize = useSize(customizeSize);\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const mergedExpandable = Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable);\n  const _mergedExpandable$chi = mergedExpandable.childrenColumnName,\n        childrenColumnName = _mergedExpandable$chi === void 0 ? 'children' : _mergedExpandable$chi;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  }; // ============================ RowKey ============================\n\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n\n  const _useLazyKVMap = useLazyKVMap(rawData, childrenColumnName, getRowKey),\n        _useLazyKVMap2 = _slicedToArray(_useLazyKVMap, 1),\n        getRecordByKey = _useLazyKVMap2[0]; // ============================ Events =============================\n\n\n  const changeEventInfo = {};\n\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var _a, _b, _c;\n\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n\n    if (reset) {\n      (_a = changeEventInfo.resetPagination) === null || _a === void 0 ? void 0 : _a.call(changeEventInfo); // Reset event param\n\n      if ((_b = changeInfo.pagination) === null || _b === void 0 ? void 0 : _b.current) {\n        changeInfo.pagination.current = 1;\n      } // Trigger pagination events\n\n\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, (_c = changeInfo.pagination) === null || _c === void 0 ? void 0 : _c.pageSize);\n      }\n    }\n\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n\n\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n\n  const _useSorter = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  }),\n        _useSorter2 = _slicedToArray(_useSorter, 4),\n        transformSorterColumns = _useSorter2[0],\n        sortStates = _useSorter2[1],\n        sorterTitleProps = _useSorter2[2],\n        getSorters = _useSorter2[3];\n\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates; // ============================ Filter ============================\n\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n\n  const _useFilter = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }),\n        _useFilter2 = _slicedToArray(_useFilter, 3),\n        transformFilterColumns = _useFilter2[0],\n        filterStates = _useFilter2[1],\n        filters = _useFilter2[2];\n\n  const mergedData = getFilterData(sortedData, filterStates);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates; // ============================ Column ============================\n\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n\n  const _useTitleColumns = useTitleColumns(columnTitleProps),\n        _useTitleColumns2 = _slicedToArray(_useTitleColumns, 1),\n        transformTitleColumns = _useTitleColumns2[0]; // ========================== Pagination ==========================\n\n\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n\n  const _usePagination = usePagination(mergedData.length, onPaginationChange, pagination),\n        _usePagination2 = _slicedToArray(_usePagination, 2),\n        mergedPagination = _usePagination2[0],\n        resetPagination = _usePagination2[1];\n\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\n  changeEventInfo.resetPagination = resetPagination; // ============================= Data =============================\n\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n\n    const _mergedPagination$cur = mergedPagination.current,\n          current = _mergedPagination$cur === void 0 ? 1 : _mergedPagination$cur,\n          total = mergedPagination.total,\n          _mergedPagination$pag = mergedPagination.pageSize,\n          pageSize = _mergedPagination$pag === void 0 ? DEFAULT_PAGE_SIZE : _mergedPagination$pag;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'Table', '`current` should be positive number.') : void 0; // Dynamic table data\n\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n\n      return mergedData;\n    }\n\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]); // ========================== Selections ==========================\n\n  const _useSelection = useSelection({\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }, rowSelection),\n        _useSelection2 = _slicedToArray(_useSelection, 2),\n        transformSelectionColumns = _useSelection2[0],\n        selectedKeySet = _useSelection2[1];\n\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  }; // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n\n\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon; // Customize expandable icon\n\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale); // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  } // Indent size\n\n\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  } // ============================ Render ============================\n\n\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n\n    const renderPagination = position =>\n    /*#__PURE__*/\n    React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    }));\n\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const position = mergedPagination.position;\n\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  } // >>>>>>>>> Spinning\n\n\n  let spinProps;\n\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  } // Style\n\n\n  const _useStyle = useStyle(prefixCls),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1];\n\n  const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) ||\n  /*#__PURE__*/\n  React.createElement(DefaultRenderEmpty, {\n    componentName: \"Table\"\n  });\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    ref: ref,\n    className: wrapperClassNames,\n    style: style\n  },\n  /*#__PURE__*/\n  React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode,\n  /*#__PURE__*/\n  React.createElement(RcTable, Object.assign({}, tableProps, {\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: emptyText,\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns\n  })), bottomPaginationNode)));\n};\n\nexport default\n/*#__PURE__*/\nReact.forwardRef(InternalTable);","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/table/InternalTable.js"],"names":["classNames","INTERNAL_HOOKS","convertChildrenToColumns","omit","React","scrollTo","warning","ConfigContext","DefaultRenderEmpty","useSize","useBreakpoint","defaultLocale","Pagination","Spin","renderExpandIcon","RcTable","useFilter","getFilterData","useLazyKVMap","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useSelection","useSorter","getSortData","useTitleColumns","useStyle","EMPTY_LIST","InternalTable","props","ref","customizePrefixCls","prefixCls","className","rootClassName","style","customizeSize","size","bordered","customizeDropdownPrefixCls","dropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","legacyChildrenColumnName","childrenColumnName","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","expandIconColumnIndex","indentSize","scroll","sortDirections","locale","showSorterTooltip","process","env","NODE_ENV","length","baseColumns","useMemo","needResponsive","some","col","responsive","screens","mergedColumns","matched","Set","Object","keys","filter","m","c","r","has","tableProps","useContext","contextLocale","direction","renderEmpty","getPrefixCls","getContextPopupContainer","mergedSize","tableLocale","assign","Table","rawData","mergedExpandable","expandType","item","internalRefs","body","useRef","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","action","reset","arguments","undefined","_a","_b","_c","changeInfo","resetPagination","call","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","mergedData","columnTitleProps","mergedFilters","forEach","filterKey","transformTitleColumns","onPaginationChange","mergedPagination","pageData","total","slice","data","transformSelectionColumns","selectedKeySet","internalRowClassName","index","indent","mergedRowClassName","__PARENT_RENDER_ICON__","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","renderPagination","position","createElement","defaultPosition","Array","isArray","topPos","find","p","includes","bottomPos","isDisable","every","toLowerCase","replace","spinProps","spinning","wrapSSR","hashId","wrapperClassNames","emptyText","componentName","internalHooks","forwardRef"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport { INTERNAL_HOOKS } from 'rc-table';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport scrollTo from '../_util/scrollTo';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider/context';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport useSize from '../config-provider/hooks/useSize';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport renderExpandIcon from './ExpandIcon';\nimport RcTable from './RcTable';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\nconst InternalTable = (props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = true\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const {\n    locale: contextLocale = defaultLocale,\n    direction,\n    renderEmpty,\n    getPrefixCls,\n    getPopupContainer: getContextPopupContainer\n  } = React.useContext(ConfigContext);\n  const mergedSize = useSize(customizeSize);\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const mergedExpandable = Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable);\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  };\n  // ============================ RowKey ============================\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n  // ============================ Events =============================\n  const changeEventInfo = {};\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _a, _b, _c;\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n    if (reset) {\n      (_a = changeEventInfo.resetPagination) === null || _a === void 0 ? void 0 : _a.call(changeEventInfo);\n      // Reset event param\n      if ((_b = changeInfo.pagination) === null || _b === void 0 ? void 0 : _b.current) {\n        changeInfo.pagination.current = 1;\n      }\n      // Trigger pagination events\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, (_c = changeInfo.pagination) === null || _c === void 0 ? void 0 : _c.pageSize);\n      }\n    }\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates;\n  // ============================ Filter ============================\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  });\n  const mergedData = getFilterData(sortedData, filterStates);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates;\n  // ============================ Column ============================\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n  // ========================== Pagination ==========================\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, onPaginationChange, pagination);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\n  changeEventInfo.resetPagination = resetPagination;\n  // ============================= Data =============================\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'Table', '`current` should be positive number.') : void 0;\n    // Dynamic table data\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n      return mergedData;\n    }\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]);\n  // ========================== Selections ==========================\n  const [transformSelectionColumns, selectedKeySet] = useSelection({\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }, rowSelection);\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  };\n  // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n  // Customize expandable icon\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n  // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  }\n  // Indent size\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  }\n  // ============================ Render ============================\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n    const renderPagination = position => /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    }));\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  }\n  // >>>>>>>>> Spinning\n  let spinProps;\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  }\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n    componentName: \"Table\"\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: wrapperClassNames,\n    style: style\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(RcTable, Object.assign({}, tableProps, {\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: emptyText,\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns\n  })), bottomPaginationNode)));\n};\nexport default /*#__PURE__*/React.forwardRef(InternalTable);"]},"metadata":{},"sourceType":"module"}