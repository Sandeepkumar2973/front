{"ast":null,"code":"import React from 'react';\nimport { generateColor } from '../util';\n\nvar ColorClear = function ColorClear(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      colorCleared = _ref.colorCleared,\n      onChange = _ref.onChange;\n\n  var handleClick = function handleClick() {\n    if (value && !colorCleared) {\n      var hsba = value.toHsb();\n      hsba.a = 0;\n      var genColor = generateColor(hsba);\n      onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-clear\"),\n      onClick: handleClick\n    })\n  );\n};\n\nexport default ColorClear;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/color-picker/components/ColorClear.js"],"names":["React","generateColor","ColorClear","_ref","prefixCls","value","colorCleared","onChange","handleClick","hsba","toHsb","a","genColor","createElement","className","onClick"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,SAA9B;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AAAA,MAEvBC,SAFuB,GAMrBD,IANqB,CAEvBC,SAFuB;AAAA,MAGvBC,KAHuB,GAMrBF,IANqB,CAGvBE,KAHuB;AAAA,MAIvBC,YAJuB,GAMrBH,IANqB,CAIvBG,YAJuB;AAAA,MAKvBC,QALuB,GAMrBJ,IANqB,CAKvBI,QALuB;;AAOzB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIH,KAAK,IAAI,CAACC,YAAd,EAA4B;AAC1B,UAAMG,IAAI,GAAGJ,KAAK,CAACK,KAAN,EAAb;AACAD,MAAAA,IAAI,CAACE,CAAL,GAAS,CAAT;AACA,UAAMC,QAAQ,GAAGX,aAAa,CAACQ,IAAD,CAA9B;AACAF,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACK,QAAD,CAA5D;AACD;AACF,GAPD;;AAQA;AAAO;AAAaZ,IAAAA,KAAK,CAACa,aAAN,CAAoB,KAApB,EAA2B;AAC7CC,MAAAA,SAAS,YAAKV,SAAL,WADoC;AAE7CW,MAAAA,OAAO,EAAEP;AAFoC,KAA3B;AAApB;AAID,CAnBD;;AAoBA,eAAeN,UAAf","sourcesContent":["import React from 'react';\nimport { generateColor } from '../util';\nconst ColorClear = _ref => {\n  let {\n    prefixCls,\n    value,\n    colorCleared,\n    onChange\n  } = _ref;\n  const handleClick = () => {\n    if (value && !colorCleared) {\n      const hsba = value.toHsb();\n      hsba.a = 0;\n      const genColor = generateColor(hsba);\n      onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-clear`,\n    onClick: handleClick\n  });\n};\nexport default ColorClear;"]},"metadata":{},"sourceType":"module"}