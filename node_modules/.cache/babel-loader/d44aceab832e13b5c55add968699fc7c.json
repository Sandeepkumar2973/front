{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal'; // ============================== Motion ==============================\n\nconst antCheckboxEffect = new Keyframes('antCheckboxEffect', {\n  '0%': {\n    transform: 'scale(1)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(1.6)',\n    opacity: 0\n  }\n}); // ============================== Styles ==============================\n\nexport const genCheckboxStyle = token => {\n  const checkboxCls = token.checkboxCls;\n  const wrapperCls = `${checkboxCls}-wrapper`;\n  return [// ===================== Basic =====================\n  {\n    // Group\n    [`${checkboxCls}-group`]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      flexWrap: 'wrap',\n      columnGap: token.marginXS,\n      // Group > Grid\n      [`> ${token.antCls}-row`]: {\n        flex: 1\n      }\n    }),\n    // Wrapper\n    [wrapperCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      alignItems: 'baseline',\n      cursor: 'pointer',\n      // Fix checkbox & radio in flex align #30260\n      '&:after': {\n        display: 'inline-block',\n        width: 0,\n        overflow: 'hidden',\n        content: \"'\\\\a0'\"\n      },\n      // Checkbox near checkbox\n      [`& + ${wrapperCls}`]: {\n        marginInlineStart: 0\n      },\n      [`&${wrapperCls}-in-form-item`]: {\n        'input[type=\"checkbox\"]': {\n          width: 14,\n          height: 14 // FIXME: magic\n\n        }\n      }\n    }),\n    // Wrapper > Checkbox\n    [checkboxCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      lineHeight: 1,\n      cursor: 'pointer',\n      // To make alignment right when `controlHeight` is changed\n      // Ref: https://github.com/ant-design/ant-design/issues/41564\n      alignSelf: 'center',\n      // Wrapper > Checkbox > input\n      [`${checkboxCls}-input`]: {\n        position: 'absolute',\n        // Since baseline align will get additional space offset,\n        // we need to move input to top to make it align with text.\n        // Ref: https://github.com/ant-design/ant-design/issues/38926#issuecomment-1486137799\n        inset: 0,\n        zIndex: 1,\n        cursor: 'pointer',\n        opacity: 0,\n        margin: 0,\n        [`&:focus-visible + ${checkboxCls}-inner`]: Object.assign({}, genFocusOutline(token))\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        boxSizing: 'border-box',\n        position: 'relative',\n        top: 0,\n        insetInlineStart: 0,\n        display: 'block',\n        width: token.checkboxSize,\n        height: token.checkboxSize,\n        direction: 'ltr',\n        backgroundColor: token.colorBgContainer,\n        border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n        borderRadius: token.borderRadiusSM,\n        borderCollapse: 'separate',\n        transition: `all ${token.motionDurationSlow}`,\n        '&:after': {\n          boxSizing: 'border-box',\n          position: 'absolute',\n          top: '50%',\n          insetInlineStart: '21.5%',\n          display: 'table',\n          width: token.checkboxSize / 14 * 5,\n          height: token.checkboxSize / 14 * 8,\n          border: `${token.lineWidthBold}px solid ${token.colorWhite}`,\n          borderTop: 0,\n          borderInlineStart: 0,\n          transform: 'rotate(45deg) scale(0) translate(-50%,-50%)',\n          opacity: 0,\n          content: '\"\"',\n          transition: `all ${token.motionDurationFast} ${token.motionEaseInBack}, opacity ${token.motionDurationFast}`\n        }\n      },\n      // Wrapper > Checkbox + Text\n      '& + span': {\n        paddingInlineStart: token.paddingXS,\n        paddingInlineEnd: token.paddingXS\n      }\n    })\n  }, // ================= Indeterminate =================\n  {\n    [checkboxCls]: {\n      '&-indeterminate': {\n        // Wrapper > Checkbox > inner\n        [`${checkboxCls}-inner`]: {\n          '&:after': {\n            top: '50%',\n            insetInlineStart: '50%',\n            width: token.fontSizeLG / 2,\n            height: token.fontSizeLG / 2,\n            backgroundColor: token.colorPrimary,\n            border: 0,\n            transform: 'translate(-50%, -50%) scale(1)',\n            opacity: 1,\n            content: '\"\"'\n          }\n        }\n      }\n    }\n  }, // ===================== Hover =====================\n  {\n    // Wrapper\n    [`${wrapperCls}:hover ${checkboxCls}:after`]: {\n      visibility: 'visible'\n    },\n    // Wrapper & Wrapper > Checkbox\n    [`\n        ${wrapperCls}:not(${wrapperCls}-disabled),\n        ${checkboxCls}:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        borderColor: token.colorPrimary\n      }\n    },\n    [`${wrapperCls}:not(${wrapperCls}-disabled)`]: {\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled) ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      },\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled):after`]: {\n        borderColor: token.colorPrimaryHover\n      }\n    }\n  }, // ==================== Checked ====================\n  {\n    // Wrapper > Checkbox\n    [`${checkboxCls}-checked`]: {\n      [`${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimary,\n        borderColor: token.colorPrimary,\n        '&:after': {\n          opacity: 1,\n          transform: 'rotate(45deg) scale(1) translate(-50%,-50%)',\n          transition: `all ${token.motionDurationMid} ${token.motionEaseOutBack} ${token.motionDurationFast}`\n        }\n      },\n      // Checked Effect\n      '&:after': {\n        position: 'absolute',\n        top: 0,\n        insetInlineStart: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: token.borderRadiusSM,\n        visibility: 'hidden',\n        border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n        animationName: antCheckboxEffect,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: 'ease-in-out',\n        animationFillMode: 'backwards',\n        content: '\"\"',\n        transition: `all ${token.motionDurationSlow}`\n      }\n    },\n    [`\n        ${wrapperCls}-checked:not(${wrapperCls}-disabled),\n        ${checkboxCls}-checked:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      },\n      [`&:hover ${checkboxCls}:after`]: {\n        borderColor: token.colorPrimaryHover\n      }\n    }\n  }, // ==================== Disable ====================\n  {\n    // Wrapper\n    [`${wrapperCls}-disabled`]: {\n      cursor: 'not-allowed'\n    },\n    // Wrapper > Checkbox\n    [`${checkboxCls}-disabled`]: {\n      // Wrapper > Checkbox > input\n      [`&, ${checkboxCls}-input`]: {\n        cursor: 'not-allowed',\n        // Disabled for native input to enable Tooltip event handler\n        // ref: https://github.com/ant-design/ant-design/issues/39822#issuecomment-1365075901\n        pointerEvents: 'none'\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        background: token.colorBgContainerDisabled,\n        borderColor: token.colorBorder,\n        '&:after': {\n          borderColor: token.colorTextDisabled\n        }\n      },\n      '&:after': {\n        display: 'none'\n      },\n      '& + span': {\n        color: token.colorTextDisabled\n      },\n      [`&${checkboxCls}-indeterminate ${checkboxCls}-inner::after`]: {\n        background: token.colorTextDisabled\n      }\n    }\n  }];\n}; // ============================== Export ==============================\n\nexport function getStyle(prefixCls, token) {\n  const checkboxToken = mergeToken(token, {\n    checkboxCls: `.${prefixCls}`,\n    checkboxSize: token.controlInteractiveSize\n  });\n  return [genCheckboxStyle(checkboxToken)];\n}\nexport default genComponentStyleHook('Checkbox', (token, _ref) => {\n  let prefixCls = _ref.prefixCls;\n  return [getStyle(prefixCls, token)];\n});","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/checkbox/style/index.js"],"names":["Keyframes","genFocusOutline","resetComponent","genComponentStyleHook","mergeToken","antCheckboxEffect","transform","opacity","genCheckboxStyle","token","checkboxCls","wrapperCls","Object","assign","display","flexWrap","columnGap","marginXS","antCls","flex","alignItems","cursor","width","overflow","content","marginInlineStart","height","position","whiteSpace","lineHeight","alignSelf","inset","zIndex","margin","boxSizing","top","insetInlineStart","checkboxSize","direction","backgroundColor","colorBgContainer","border","lineWidth","lineType","colorBorder","borderRadius","borderRadiusSM","borderCollapse","transition","motionDurationSlow","lineWidthBold","colorWhite","borderTop","borderInlineStart","motionDurationFast","motionEaseInBack","paddingInlineStart","paddingXS","paddingInlineEnd","fontSizeLG","colorPrimary","visibility","borderColor","colorPrimaryHover","motionDurationMid","motionEaseOutBack","animationName","animationDuration","animationTimingFunction","animationFillMode","pointerEvents","background","colorBgContainerDisabled","colorTextDisabled","color","getStyle","prefixCls","checkboxToken","controlInteractiveSize","_ref"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Motion ==============================\nconst antCheckboxEffect = new Keyframes('antCheckboxEffect', {\n  '0%': {\n    transform: 'scale(1)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(1.6)',\n    opacity: 0\n  }\n});\n// ============================== Styles ==============================\nexport const genCheckboxStyle = token => {\n  const {\n    checkboxCls\n  } = token;\n  const wrapperCls = `${checkboxCls}-wrapper`;\n  return [\n  // ===================== Basic =====================\n  {\n    // Group\n    [`${checkboxCls}-group`]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      flexWrap: 'wrap',\n      columnGap: token.marginXS,\n      // Group > Grid\n      [`> ${token.antCls}-row`]: {\n        flex: 1\n      }\n    }),\n    // Wrapper\n    [wrapperCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      alignItems: 'baseline',\n      cursor: 'pointer',\n      // Fix checkbox & radio in flex align #30260\n      '&:after': {\n        display: 'inline-block',\n        width: 0,\n        overflow: 'hidden',\n        content: \"'\\\\a0'\"\n      },\n      // Checkbox near checkbox\n      [`& + ${wrapperCls}`]: {\n        marginInlineStart: 0\n      },\n      [`&${wrapperCls}-in-form-item`]: {\n        'input[type=\"checkbox\"]': {\n          width: 14,\n          height: 14 // FIXME: magic\n        }\n      }\n    }),\n\n    // Wrapper > Checkbox\n    [checkboxCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      lineHeight: 1,\n      cursor: 'pointer',\n      // To make alignment right when `controlHeight` is changed\n      // Ref: https://github.com/ant-design/ant-design/issues/41564\n      alignSelf: 'center',\n      // Wrapper > Checkbox > input\n      [`${checkboxCls}-input`]: {\n        position: 'absolute',\n        // Since baseline align will get additional space offset,\n        // we need to move input to top to make it align with text.\n        // Ref: https://github.com/ant-design/ant-design/issues/38926#issuecomment-1486137799\n        inset: 0,\n        zIndex: 1,\n        cursor: 'pointer',\n        opacity: 0,\n        margin: 0,\n        [`&:focus-visible + ${checkboxCls}-inner`]: Object.assign({}, genFocusOutline(token))\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        boxSizing: 'border-box',\n        position: 'relative',\n        top: 0,\n        insetInlineStart: 0,\n        display: 'block',\n        width: token.checkboxSize,\n        height: token.checkboxSize,\n        direction: 'ltr',\n        backgroundColor: token.colorBgContainer,\n        border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n        borderRadius: token.borderRadiusSM,\n        borderCollapse: 'separate',\n        transition: `all ${token.motionDurationSlow}`,\n        '&:after': {\n          boxSizing: 'border-box',\n          position: 'absolute',\n          top: '50%',\n          insetInlineStart: '21.5%',\n          display: 'table',\n          width: token.checkboxSize / 14 * 5,\n          height: token.checkboxSize / 14 * 8,\n          border: `${token.lineWidthBold}px solid ${token.colorWhite}`,\n          borderTop: 0,\n          borderInlineStart: 0,\n          transform: 'rotate(45deg) scale(0) translate(-50%,-50%)',\n          opacity: 0,\n          content: '\"\"',\n          transition: `all ${token.motionDurationFast} ${token.motionEaseInBack}, opacity ${token.motionDurationFast}`\n        }\n      },\n      // Wrapper > Checkbox + Text\n      '& + span': {\n        paddingInlineStart: token.paddingXS,\n        paddingInlineEnd: token.paddingXS\n      }\n    })\n  },\n  // ================= Indeterminate =================\n  {\n    [checkboxCls]: {\n      '&-indeterminate': {\n        // Wrapper > Checkbox > inner\n        [`${checkboxCls}-inner`]: {\n          '&:after': {\n            top: '50%',\n            insetInlineStart: '50%',\n            width: token.fontSizeLG / 2,\n            height: token.fontSizeLG / 2,\n            backgroundColor: token.colorPrimary,\n            border: 0,\n            transform: 'translate(-50%, -50%) scale(1)',\n            opacity: 1,\n            content: '\"\"'\n          }\n        }\n      }\n    }\n  },\n  // ===================== Hover =====================\n  {\n    // Wrapper\n    [`${wrapperCls}:hover ${checkboxCls}:after`]: {\n      visibility: 'visible'\n    },\n    // Wrapper & Wrapper > Checkbox\n    [`\n        ${wrapperCls}:not(${wrapperCls}-disabled),\n        ${checkboxCls}:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        borderColor: token.colorPrimary\n      }\n    },\n    [`${wrapperCls}:not(${wrapperCls}-disabled)`]: {\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled) ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      },\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled):after`]: {\n        borderColor: token.colorPrimaryHover\n      }\n    }\n  },\n  // ==================== Checked ====================\n  {\n    // Wrapper > Checkbox\n    [`${checkboxCls}-checked`]: {\n      [`${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimary,\n        borderColor: token.colorPrimary,\n        '&:after': {\n          opacity: 1,\n          transform: 'rotate(45deg) scale(1) translate(-50%,-50%)',\n          transition: `all ${token.motionDurationMid} ${token.motionEaseOutBack} ${token.motionDurationFast}`\n        }\n      },\n      // Checked Effect\n      '&:after': {\n        position: 'absolute',\n        top: 0,\n        insetInlineStart: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: token.borderRadiusSM,\n        visibility: 'hidden',\n        border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n        animationName: antCheckboxEffect,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: 'ease-in-out',\n        animationFillMode: 'backwards',\n        content: '\"\"',\n        transition: `all ${token.motionDurationSlow}`\n      }\n    },\n    [`\n        ${wrapperCls}-checked:not(${wrapperCls}-disabled),\n        ${checkboxCls}-checked:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      },\n      [`&:hover ${checkboxCls}:after`]: {\n        borderColor: token.colorPrimaryHover\n      }\n    }\n  },\n  // ==================== Disable ====================\n  {\n    // Wrapper\n    [`${wrapperCls}-disabled`]: {\n      cursor: 'not-allowed'\n    },\n    // Wrapper > Checkbox\n    [`${checkboxCls}-disabled`]: {\n      // Wrapper > Checkbox > input\n      [`&, ${checkboxCls}-input`]: {\n        cursor: 'not-allowed',\n        // Disabled for native input to enable Tooltip event handler\n        // ref: https://github.com/ant-design/ant-design/issues/39822#issuecomment-1365075901\n        pointerEvents: 'none'\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        background: token.colorBgContainerDisabled,\n        borderColor: token.colorBorder,\n        '&:after': {\n          borderColor: token.colorTextDisabled\n        }\n      },\n      '&:after': {\n        display: 'none'\n      },\n      '& + span': {\n        color: token.colorTextDisabled\n      },\n      [`&${checkboxCls}-indeterminate ${checkboxCls}-inner::after`]: {\n        background: token.colorTextDisabled\n      }\n    }\n  }];\n};\n// ============================== Export ==============================\nexport function getStyle(prefixCls, token) {\n  const checkboxToken = mergeToken(token, {\n    checkboxCls: `.${prefixCls}`,\n    checkboxSize: token.controlInteractiveSize\n  });\n  return [genCheckboxStyle(checkboxToken)];\n}\nexport default genComponentStyleHook('Checkbox', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [getStyle(prefixCls, token)];\n});"]},"metadata":{},"sourceType":"module"}