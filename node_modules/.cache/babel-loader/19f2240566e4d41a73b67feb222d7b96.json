{"ast":null,"code":"import * as React from 'react';\nimport { SpaceContext } from './context';\nexport default function Item(_ref) {\n  let className = _ref.className,\n      direction = _ref.direction,\n      index = _ref.index,\n      marginDirection = _ref.marginDirection,\n      children = _ref.children,\n      split = _ref.split,\n      wrap = _ref.wrap,\n      customStyle = _ref.style;\n\n  const _React$useContext = React.useContext(SpaceContext),\n        horizontalSize = _React$useContext.horizontalSize,\n        verticalSize = _React$useContext.verticalSize,\n        latestIndex = _React$useContext.latestIndex,\n        supportFlexGap = _React$useContext.supportFlexGap;\n\n  let style = {};\n\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = Object.assign(Object.assign({}, index < latestIndex && {\n        [marginDirection]: horizontalSize / (split ? 2 : 1)\n      }), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n\n  if (children === null || children === undefined) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: className,\n      style: Object.assign(Object.assign({}, style), customStyle)\n    }, children), index < latestIndex && split &&\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: `${className}-split`,\n      style: style\n    }, split))\n  );\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/space/Item.js"],"names":["React","SpaceContext","Item","_ref","className","direction","index","marginDirection","children","split","wrap","customStyle","style","useContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","marginBottom","Object","assign","paddingBottom","undefined","createElement","Fragment"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,eAAe,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAAA,MAE/BC,SAF+B,GAU7BD,IAV6B,CAE/BC,SAF+B;AAAA,MAG/BC,SAH+B,GAU7BF,IAV6B,CAG/BE,SAH+B;AAAA,MAI/BC,KAJ+B,GAU7BH,IAV6B,CAI/BG,KAJ+B;AAAA,MAK/BC,eAL+B,GAU7BJ,IAV6B,CAK/BI,eAL+B;AAAA,MAM/BC,QAN+B,GAU7BL,IAV6B,CAM/BK,QAN+B;AAAA,MAO/BC,KAP+B,GAU7BN,IAV6B,CAO/BM,KAP+B;AAAA,MAQ/BC,IAR+B,GAU7BP,IAV6B,CAQ/BO,IAR+B;AAAA,MASxBC,WATwB,GAU7BR,IAV6B,CAS/BS,KAT+B;;AAAA,4BAgB7BZ,KAAK,CAACa,UAAN,CAAiBZ,YAAjB,CAhB6B;AAAA,QAY/Ba,cAZ+B,qBAY/BA,cAZ+B;AAAA,QAa/BC,YAb+B,qBAa/BA,YAb+B;AAAA,QAc/BC,WAd+B,qBAc/BA,WAd+B;AAAA,QAe/BC,cAf+B,qBAe/BA,cAf+B;;AAiBjC,MAAIL,KAAK,GAAG,EAAZ;;AACA,MAAI,CAACK,cAAL,EAAqB;AACnB,QAAIZ,SAAS,KAAK,UAAlB,EAA8B;AAC5B,UAAIC,KAAK,GAAGU,WAAZ,EAAyB;AACvBJ,QAAAA,KAAK,GAAG;AACNM,UAAAA,YAAY,EAAEJ,cAAc,IAAIL,KAAK,GAAG,CAAH,GAAO,CAAhB;AADtB,SAAR;AAGD;AACF,KAND,MAMO;AACLG,MAAAA,KAAK,GAAGO,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,KAAK,GAAGU,WAAR,IAAuB;AAC7D,SAACT,eAAD,GAAmBO,cAAc,IAAIL,KAAK,GAAG,CAAH,GAAO,CAAhB;AAD4B,OAAzC,CAAd,EAEJC,IAAI,IAAI;AACVW,QAAAA,aAAa,EAAEN;AADL,OAFJ,CAAR;AAKD;AACF;;AACD,MAAIP,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKc,SAAtC,EAAiD;AAC/C,WAAO,IAAP;AACD;;AACD;AAAO;AAAatB,IAAAA,KAAK,CAACuB,aAAN,CAAoBvB,KAAK,CAACwB,QAA1B,EAAoC,IAApC;AAA0C;AAAaxB,IAAAA,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2B;AACpGnB,MAAAA,SAAS,EAAEA,SADyF;AAEpGQ,MAAAA,KAAK,EAAEO,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,CAAd,EAAwCD,WAAxC;AAF6F,KAA3B,EAGxEH,QAHwE,CAAvD,EAGNF,KAAK,GAAGU,WAAR,IAAuBP,KAAvB;AAAgC;AAAaT,IAAAA,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AACrFnB,MAAAA,SAAS,EAAG,GAAEA,SAAU,QAD6D;AAErFQ,MAAAA,KAAK,EAAEA;AAF8E,KAA5B,EAGxDH,KAHwD,CAHvC;AAApB;AAOD","sourcesContent":["import * as React from 'react';\nimport { SpaceContext } from './context';\nexport default function Item(_ref) {\n  let {\n    className,\n    direction,\n    index,\n    marginDirection,\n    children,\n    split,\n    wrap,\n    style: customStyle\n  } = _ref;\n  const {\n    horizontalSize,\n    verticalSize,\n    latestIndex,\n    supportFlexGap\n  } = React.useContext(SpaceContext);\n  let style = {};\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = Object.assign(Object.assign({}, index < latestIndex && {\n        [marginDirection]: horizontalSize / (split ? 2 : 1)\n      }), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n  if (children === null || children === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: Object.assign(Object.assign({}, style), customStyle)\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${className}-split`,\n    style: style\n  }, split));\n}"]},"metadata":{},"sourceType":"module"}