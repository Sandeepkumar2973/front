{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable import/prefer-default-export */\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default'; // ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n\n/** Get current context Design Token. Will be different if you are using nest theme config. */\n\nfunction useToken() {\n  var _useInternalToken = useInternalToken(),\n      _useInternalToken2 = _slicedToArray(_useInternalToken, 3),\n      theme = _useInternalToken2[0],\n      token = _useInternalToken2[1],\n      hashId = _useInternalToken2[2];\n\n  return {\n    theme: theme,\n    token: token,\n    hashId: hashId\n  };\n}\n\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig: defaultConfig,\n\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken: useToken,\n  defaultAlgorithm: defaultAlgorithm,\n  darkAlgorithm: darkAlgorithm,\n  compactAlgorithm: compactAlgorithm,\n  getDesignToken: getDesignToken\n};","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/theme/index.js"],"names":["getDesignToken","defaultConfig","useToken","useInternalToken","compactAlgorithm","darkAlgorithm","defaultAlgorithm","theme","token","hashId","defaultSeed"],"mappings":";;AAAA;AACA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,EAAwBC,QAAQ,IAAIC,gBAApC,QAA4D,YAA5D;AACA,OAAOC,gBAAP,MAA6B,kBAA7B;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,gBAAP,MAA6B,kBAA7B,C,CACA;AACA;AACA;;AACA;;AACA,SAASJ,QAAT,GAAoB;AAAA,0BACaC,gBAAgB,EAD7B;AAAA;AAAA,MACXI,KADW;AAAA,MACJC,KADI;AAAA,MACGC,MADH;;AAElB,SAAO;AACLF,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,KAAK,EAALA,KAFK;AAGLC,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD;;AACD,eAAe;AACb;AACAR,EAAAA,aAAa,EAAbA,aAFa;;AAGb;AACAS,EAAAA,WAAW,EAAET,aAAa,CAACO,KAJd;AAKbN,EAAAA,QAAQ,EAARA,QALa;AAMbI,EAAAA,gBAAgB,EAAhBA,gBANa;AAObD,EAAAA,aAAa,EAAbA,aAPa;AAQbD,EAAAA,gBAAgB,EAAhBA,gBARa;AASbJ,EAAAA,cAAc,EAAdA;AATa,CAAf","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  const [theme, token, hashId] = useInternalToken();\n  return {\n    theme,\n    token,\n    hashId\n  };\n}\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken,\n  defaultAlgorithm,\n  darkAlgorithm,\n  compactAlgorithm,\n  getDesignToken\n};"]},"metadata":{},"sourceType":"module"}