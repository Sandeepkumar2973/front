{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport DotChartOutlined from \"@ant-design/icons/es/icons/DotChartOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\n\nvar SkeletonNode = function SkeletonNode(props) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      style = props.style,\n      active = props.active,\n      children = props.children;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), hashId, className, rootClassName);\n  var content = children !== null && children !== void 0 ? children :\n  /*#__PURE__*/\n  React.createElement(DotChartOutlined, null);\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: cls\n  },\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-image\"), className),\n    style: style\n  }, content)));\n};\n\nexport default SkeletonNode;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/skeleton/Node.js"],"names":["DotChartOutlined","classNames","React","ConfigContext","useStyle","SkeletonNode","props","customizePrefixCls","prefixCls","className","rootClassName","style","active","children","useContext","getPrefixCls","wrapSSR","hashId","cls","content","createElement"],"mappings":";;AAAA,OAAOA,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,QAAP,MAAqB,SAArB;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MAEfC,kBAFe,GAQxBD,KARwB,CAE1BE,SAF0B;AAAA,MAG1BC,SAH0B,GAQxBH,KARwB,CAG1BG,SAH0B;AAAA,MAI1BC,aAJ0B,GAQxBJ,KARwB,CAI1BI,aAJ0B;AAAA,MAK1BC,KAL0B,GAQxBL,KARwB,CAK1BK,KAL0B;AAAA,MAM1BC,MAN0B,GAQxBN,KARwB,CAM1BM,MAN0B;AAAA,MAO1BC,QAP0B,GAQxBP,KARwB,CAO1BO,QAP0B;;AAAA,0BAWxBX,KAAK,CAACY,UAAN,CAAiBX,aAAjB,CAXwB;AAAA,MAU1BY,YAV0B,qBAU1BA,YAV0B;;AAY5B,MAAMP,SAAS,GAAGO,YAAY,CAAC,UAAD,EAAaR,kBAAb,CAA9B;;AAZ4B,kBAaFH,QAAQ,CAACI,SAAD,CAbN;AAAA;AAAA,MAarBQ,OAbqB;AAAA,MAaZC,MAbY;;AAc5B,MAAMC,GAAG,GAAGjB,UAAU,CAACO,SAAD,YAAeA,SAAf,6CAChBA,SADgB,cACKI,MADL,GAEnBK,MAFmB,EAEXR,SAFW,EAEAC,aAFA,CAAtB;AAGA,MAAMS,OAAO,GAAGN,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C;AAAsD;AAAaX,EAAAA,KAAK,CAACkB,aAAN,CAAoBpB,gBAApB,EAAsC,IAAtC,CAAnF;AACA,SAAOgB,OAAO;AAAE;AAAad,EAAAA,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2B;AACtDX,IAAAA,SAAS,EAAES;AAD2C,GAA3B;AAE1B;AAAahB,EAAAA,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2B;AACzCX,IAAAA,SAAS,EAAER,UAAU,WAAIO,SAAJ,aAAuBC,SAAvB,CADoB;AAEzCE,IAAAA,KAAK,EAAEA;AAFkC,GAA3B,EAGbQ,OAHa,CAFa,CAAf,CAAd;AAMD,CAxBD;;AAyBA,eAAed,YAAf","sourcesContent":["import DotChartOutlined from \"@ant-design/icons/es/icons/DotChartOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst SkeletonNode = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active,\n    children\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, hashId, className, rootClassName);\n  const content = children !== null && children !== void 0 ? children : /*#__PURE__*/React.createElement(DotChartOutlined, null);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, content)));\n};\nexport default SkeletonNode;"]},"metadata":{},"sourceType":"module"}