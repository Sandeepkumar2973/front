{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\n\nfunction hasValue(value) {\n  return value !== undefined;\n}\n\nconst useColorState = (defaultStateValue, option) => {\n  const defaultValue = option.defaultValue,\n        value = option.value;\n\n  const _useState = useState(() => {\n    let mergeState;\n\n    if (hasValue(value)) {\n      mergeState = value;\n    } else if (hasValue(defaultValue)) {\n      mergeState = defaultValue;\n    } else {\n      mergeState = defaultStateValue;\n    }\n\n    return generateColor(mergeState || '');\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        colorValue = _useState2[0],\n        setColorValue = _useState2[1];\n\n  useEffect(() => {\n    if (value) {\n      setColorValue(generateColor(value));\n    }\n  }, [value]);\n  return [colorValue, setColorValue];\n};\n\nexport default useColorState;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/color-picker/hooks/useColorState.js"],"names":["useEffect","useState","generateColor","hasValue","value","undefined","useColorState","defaultStateValue","option","defaultValue","mergeState","colorValue","setColorValue"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,SAA9B;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAOA,KAAK,KAAKC,SAAjB;AACD;;AACD,MAAMC,aAAa,GAAG,CAACC,iBAAD,EAAoBC,MAApB,KAA+B;AAAA,QAEjDC,YAFiD,GAI/CD,MAJ+C,CAEjDC,YAFiD;AAAA,QAGjDL,KAHiD,GAI/CI,MAJ+C,CAGjDJ,KAHiD;;AAAA,oBAKfH,QAAQ,CAAC,MAAM;AACjD,QAAIS,UAAJ;;AACA,QAAIP,QAAQ,CAACC,KAAD,CAAZ,EAAqB;AACnBM,MAAAA,UAAU,GAAGN,KAAb;AACD,KAFD,MAEO,IAAID,QAAQ,CAACM,YAAD,CAAZ,EAA4B;AACjCC,MAAAA,UAAU,GAAGD,YAAb;AACD,KAFM,MAEA;AACLC,MAAAA,UAAU,GAAGH,iBAAb;AACD;;AACD,WAAOL,aAAa,CAACQ,UAAU,IAAI,EAAf,CAApB;AACD,GAV2C,CALO;AAAA;AAAA,QAK5CC,UAL4C;AAAA,QAKhCC,aALgC;;AAgBnDZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAJ,EAAW;AACTQ,MAAAA,aAAa,CAACV,aAAa,CAACE,KAAD,CAAd,CAAb;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAKA,SAAO,CAACO,UAAD,EAAaC,aAAb,CAAP;AACD,CAtBD;;AAuBA,eAAeN,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nfunction hasValue(value) {\n  return value !== undefined;\n}\nconst useColorState = (defaultStateValue, option) => {\n  const {\n    defaultValue,\n    value\n  } = option;\n  const [colorValue, setColorValue] = useState(() => {\n    let mergeState;\n    if (hasValue(value)) {\n      mergeState = value;\n    } else if (hasValue(defaultValue)) {\n      mergeState = defaultValue;\n    } else {\n      mergeState = defaultStateValue;\n    }\n    return generateColor(mergeState || '');\n  });\n  useEffect(() => {\n    if (value) {\n      setColorValue(generateColor(value));\n    }\n  }, [value]);\n  return [colorValue, setColorValue];\n};\nexport default useColorState;"]},"metadata":{},"sourceType":"module"}