{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\n\nconst parsePagination = pagination => {\n  if (!pagination) {\n    return null;\n  }\n\n  const defaultPagination = {\n    pageSize: 10,\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n\n  if (typeof pagination === 'object') {\n    return Object.assign(Object.assign({}, defaultPagination), pagination);\n  }\n\n  return defaultPagination;\n};\n\nconst TransferListBody = (props, ref) => {\n  const prefixCls = props.prefixCls,\n        filteredRenderItems = props.filteredRenderItems,\n        selectedKeys = props.selectedKeys,\n        globalDisabled = props.disabled,\n        showRemove = props.showRemove,\n        pagination = props.pagination,\n        onScroll = props.onScroll,\n        onItemSelect = props.onItemSelect,\n        onItemRemove = props.onItemRemove;\n\n  const _React$useState = React.useState(1),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        current = _React$useState2[0],\n        setCurrent = _React$useState2[1];\n\n  React.useEffect(() => {\n    const mergedPagination = parsePagination(pagination);\n\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / mergedPagination.pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, pagination]);\n\n  const onClick = item => {\n    onItemSelect === null || onItemSelect === void 0 ? void 0 : onItemSelect(item.key, !selectedKeys.includes(item.key));\n  };\n\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n\n  const memoizedItems = React.useMemo(() => {\n    const mergedPagination = parsePagination(pagination);\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * mergedPagination.pageSize, current * mergedPagination.pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, pagination]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const mergedPagination = parsePagination(pagination);\n  const paginationNode = mergedPagination ?\n  /*#__PURE__*/\n  React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: mergedPagination.pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange\n  }) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(\"ul\", {\n      className: cls,\n      onScroll: onScroll\n    }, (memoizedItems || []).map(_ref => {\n      let renderedEl = _ref.renderedEl,\n          renderedText = _ref.renderedText,\n          item = _ref.item;\n      return (\n        /*#__PURE__*/\n        React.createElement(ListItem, {\n          key: item.key,\n          item: item,\n          renderedText: renderedText,\n          renderedEl: renderedEl,\n          prefixCls: prefixCls,\n          showRemove: showRemove,\n          onClick: onClick,\n          onRemove: onRemove,\n          checked: selectedKeys.includes(item.key),\n          disabled: globalDisabled || item.disabled\n        })\n      );\n    })), paginationNode)\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\n\nexport default\n/*#__PURE__*/\nReact.forwardRef(TransferListBody);","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/transfer/ListBody.js"],"names":["classNames","React","Pagination","ListItem","OmitProps","parsePagination","pagination","defaultPagination","pageSize","simple","showSizeChanger","showLessItems","Object","assign","TransferListBody","props","ref","prefixCls","filteredRenderItems","selectedKeys","globalDisabled","disabled","showRemove","onScroll","onItemSelect","onItemRemove","useState","current","setCurrent","useEffect","mergedPagination","maxPageCount","Math","ceil","length","min","onClick","item","key","includes","onRemove","onPageChange","cur","memoizedItems","useMemo","displayItems","slice","useImperativeHandle","items","paginationNode","createElement","size","className","total","onChange","cls","Fragment","map","_ref","renderedEl","renderedText","checked","process","env","NODE_ENV","displayName","forwardRef"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\nconst parsePagination = pagination => {\n  if (!pagination) {\n    return null;\n  }\n  const defaultPagination = {\n    pageSize: 10,\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n  if (typeof pagination === 'object') {\n    return Object.assign(Object.assign({}, defaultPagination), pagination);\n  }\n  return defaultPagination;\n};\nconst TransferListBody = (props, ref) => {\n  const {\n    prefixCls,\n    filteredRenderItems,\n    selectedKeys,\n    disabled: globalDisabled,\n    showRemove,\n    pagination,\n    onScroll,\n    onItemSelect,\n    onItemRemove\n  } = props;\n  const [current, setCurrent] = React.useState(1);\n  React.useEffect(() => {\n    const mergedPagination = parsePagination(pagination);\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / mergedPagination.pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, pagination]);\n  const onClick = item => {\n    onItemSelect === null || onItemSelect === void 0 ? void 0 : onItemSelect(item.key, !selectedKeys.includes(item.key));\n  };\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n  const memoizedItems = React.useMemo(() => {\n    const mergedPagination = parsePagination(pagination);\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * mergedPagination.pageSize, current * mergedPagination.pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, pagination]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const mergedPagination = parsePagination(pagination);\n  const paginationNode = mergedPagination ? /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: mergedPagination.pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange\n  }) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: cls,\n    onScroll: onScroll\n  }, (memoizedItems || []).map(_ref => {\n    let {\n      renderedEl,\n      renderedText,\n      item\n    } = _ref;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.key,\n      item: item,\n      renderedText: renderedText,\n      renderedEl: renderedEl,\n      prefixCls: prefixCls,\n      showRemove: showRemove,\n      onClick: onClick,\n      onRemove: onRemove,\n      checked: selectedKeys.includes(item.key),\n      disabled: globalDisabled || item.disabled\n    });\n  })), paginationNode);\n};\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\nexport default /*#__PURE__*/React.forwardRef(TransferListBody);"]},"metadata":{},"sourceType":"module"}