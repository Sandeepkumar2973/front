{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport React, { useRef } from 'react';\nimport useColorDrag from \"../hooks/useColorDrag\";\nimport { calculateColor, calculateOffset } from \"../util\";\nimport Palette from \"./Palette\";\nimport Gradient from \"./Gradient\";\nimport Handler from \"./Handler\";\nimport Transform from \"./Transform\";\n\nvar Slider = function Slider(_ref) {\n  var gradientColors = _ref.gradientColors,\n      direction = _ref.direction,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'hue' : _ref$type,\n      color = _ref.color,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onChangeComplete = _ref.onChangeComplete,\n      disabled = _ref.disabled,\n      prefixCls = _ref.prefixCls;\n  var sliderRef = useRef();\n  var transformRef = useRef();\n\n  var _useColorDrag = useColorDrag({\n    color: color,\n    targetRef: transformRef,\n    containerRef: sliderRef,\n    calculate: function calculate(containerRef) {\n      return calculateOffset(containerRef, transformRef, color, type);\n    },\n    onDragChange: function onDragChange(offsetValue) {\n      onChange(calculateColor({\n        offset: offsetValue,\n        targetRef: transformRef,\n        containerRef: sliderRef,\n        color: color,\n        type: type\n      }));\n    },\n    onDragChangeComplete: function onDragChangeComplete() {\n      onChangeComplete === null || onChangeComplete === void 0 ? void 0 : onChangeComplete(type);\n    },\n    direction: 'x',\n    disabledDrag: disabled\n  }),\n      _useColorDrag2 = _slicedToArray(_useColorDrag, 2),\n      offset = _useColorDrag2[0],\n      dragStartHandle = _useColorDrag2[1];\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      ref: sliderRef,\n      className: classNames(\"\".concat(prefixCls, \"-slider\"), \"\".concat(prefixCls, \"-slider-\").concat(type)),\n      onMouseDown: dragStartHandle,\n      onTouchStart: dragStartHandle\n    },\n    /*#__PURE__*/\n    React.createElement(Palette, {\n      prefixCls: prefixCls\n    },\n    /*#__PURE__*/\n    React.createElement(Transform, {\n      offset: offset,\n      ref: transformRef\n    },\n    /*#__PURE__*/\n    React.createElement(Handler, {\n      size: \"small\",\n      color: value,\n      prefixCls: prefixCls\n    })),\n    /*#__PURE__*/\n    React.createElement(Gradient, {\n      colors: gradientColors,\n      direction: direction,\n      type: type,\n      prefixCls: prefixCls\n    })))\n  );\n};\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/@rc-component/color-picker/es/components/Slider.js"],"names":["_slicedToArray","classNames","React","useRef","useColorDrag","calculateColor","calculateOffset","Palette","Gradient","Handler","Transform","Slider","_ref","gradientColors","direction","_ref$type","type","color","value","onChange","onChangeComplete","disabled","prefixCls","sliderRef","transformRef","_useColorDrag","targetRef","containerRef","calculate","onDragChange","offsetValue","offset","onDragChangeComplete","disabledDrag","_useColorDrag2","dragStartHandle","createElement","ref","className","concat","onMouseDown","onTouchStart","size","colors"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport React, { useRef } from 'react';\nimport useColorDrag from \"../hooks/useColorDrag\";\nimport { calculateColor, calculateOffset } from \"../util\";\nimport Palette from \"./Palette\";\nimport Gradient from \"./Gradient\";\nimport Handler from \"./Handler\";\nimport Transform from \"./Transform\";\nvar Slider = function Slider(_ref) {\n  var gradientColors = _ref.gradientColors,\n    direction = _ref.direction,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'hue' : _ref$type,\n    color = _ref.color,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    onChangeComplete = _ref.onChangeComplete,\n    disabled = _ref.disabled,\n    prefixCls = _ref.prefixCls;\n  var sliderRef = useRef();\n  var transformRef = useRef();\n  var _useColorDrag = useColorDrag({\n      color: color,\n      targetRef: transformRef,\n      containerRef: sliderRef,\n      calculate: function calculate(containerRef) {\n        return calculateOffset(containerRef, transformRef, color, type);\n      },\n      onDragChange: function onDragChange(offsetValue) {\n        onChange(calculateColor({\n          offset: offsetValue,\n          targetRef: transformRef,\n          containerRef: sliderRef,\n          color: color,\n          type: type\n        }));\n      },\n      onDragChangeComplete: function onDragChangeComplete() {\n        onChangeComplete === null || onChangeComplete === void 0 ? void 0 : onChangeComplete(type);\n      },\n      direction: 'x',\n      disabledDrag: disabled\n    }),\n    _useColorDrag2 = _slicedToArray(_useColorDrag, 2),\n    offset = _useColorDrag2[0],\n    dragStartHandle = _useColorDrag2[1];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: sliderRef,\n    className: classNames(\"\".concat(prefixCls, \"-slider\"), \"\".concat(prefixCls, \"-slider-\").concat(type)),\n    onMouseDown: dragStartHandle,\n    onTouchStart: dragStartHandle\n  }, /*#__PURE__*/React.createElement(Palette, {\n    prefixCls: prefixCls\n  }, /*#__PURE__*/React.createElement(Transform, {\n    offset: offset,\n    ref: transformRef\n  }, /*#__PURE__*/React.createElement(Handler, {\n    size: \"small\",\n    color: value,\n    prefixCls: prefixCls\n  })), /*#__PURE__*/React.createElement(Gradient, {\n    colors: gradientColors,\n    direction: direction,\n    type: type,\n    prefixCls: prefixCls\n  })));\n};\nexport default Slider;"]},"metadata":{},"sourceType":"module"}