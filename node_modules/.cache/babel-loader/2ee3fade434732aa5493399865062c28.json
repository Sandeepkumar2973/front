{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useStyleRegister } from '@ant-design/cssinjs';\nimport { warning } from 'rc-util';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\n  return function (prefixCls) {\n    var _useToken = useToken(),\n        _useToken2 = _slicedToArray(_useToken, 3),\n        theme = _useToken2[0],\n        token = _useToken2[1],\n        hashId = _useToken2[2];\n\n    var _useContext = useContext(ConfigContext),\n        getPrefixCls = _useContext.getPrefixCls,\n        iconPrefixCls = _useContext.iconPrefixCls,\n        csp = _useContext.csp;\n\n    var rootPrefixCls = getPrefixCls(); // Shared config\n\n    var sharedConfig = {\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      nonce: function nonce() {\n        return csp === null || csp === void 0 ? void 0 : csp.nonce;\n      }\n    }; // Generate style for all a tags in antd component.\n\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: ['Shared', rootPrefixCls]\n    }), function () {\n      return [{\n        // Link\n        '&': genLinkStyle(token)\n      }];\n    });\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [component, prefixCls, iconPrefixCls]\n    }), function () {\n      var _statisticToken = statisticToken(token),\n          proxyToken = _statisticToken.token,\n          flush = _statisticToken.flush;\n\n      var customComponentToken = Object.assign({}, token[component]);\n\n      if (options === null || options === void 0 ? void 0 : options.deprecatedTokens) {\n        var deprecatedTokens = options.deprecatedTokens;\n        deprecatedTokens.forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              oldTokenKey = _ref2[0],\n              newTokenKey = _ref2[1];\n\n          var _a;\n\n          if (process.env.NODE_ENV !== 'production') {\n            process.env.NODE_ENV !== \"production\" ? warning(!(customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]), \"The token '\".concat(String(oldTokenKey), \"' of \").concat(component, \" had deprecated, use '\").concat(String(newTokenKey), \"' instead.\")) : void 0;\n          } // Should wrap with `if` clause, or there will be `undefined` in object.\n\n\n          if ((customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]) || (customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[newTokenKey])) {\n            (_a = customComponentToken[newTokenKey]) !== null && _a !== void 0 ? _a : customComponentToken[newTokenKey] = customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey];\n          }\n        });\n      }\n\n      var defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(mergeToken(proxyToken, customComponentToken !== null && customComponentToken !== void 0 ? customComponentToken : {})) : getDefaultToken;\n      var mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), customComponentToken);\n      var componentCls = \".\".concat(prefixCls);\n      var mergedToken = mergeToken(proxyToken, {\n        componentCls: componentCls,\n        prefixCls: prefixCls,\n        iconCls: \".\".concat(iconPrefixCls),\n        antCls: \".\".concat(rootPrefixCls)\n      }, mergedComponentToken);\n      var styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId,\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        overrideComponentToken: customComponentToken\n      });\n      flush(component, mergedComponentToken);\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/theme/util/genComponentStyleHook.js"],"names":["useStyleRegister","warning","useContext","ConfigContext","genCommonStyle","genLinkStyle","mergeToken","statisticToken","useToken","genComponentStyleHook","component","styleFn","getDefaultToken","options","prefixCls","theme","token","hashId","getPrefixCls","iconPrefixCls","csp","rootPrefixCls","sharedConfig","nonce","Object","assign","path","proxyToken","flush","customComponentToken","deprecatedTokens","forEach","_ref","oldTokenKey","newTokenKey","_a","process","env","NODE_ENV","String","defaultComponentToken","mergedComponentToken","componentCls","mergedToken","iconCls","antCls","styleInterpolation","overrideComponentToken","resetStyle"],"mappings":"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","sourcesContent":["import { useStyleRegister } from '@ant-design/cssinjs';\nimport { warning } from 'rc-util';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\n  return prefixCls => {\n    const [theme, token, hashId] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls,\n      csp\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    // Shared config\n    const sharedConfig = {\n      theme,\n      token,\n      hashId,\n      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce\n    };\n    // Generate style for all a tags in antd component.\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: ['Shared', rootPrefixCls]\n    }), () => [{\n      // Link\n      '&': genLinkStyle(token)\n    }]);\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [component, prefixCls, iconPrefixCls]\n    }), () => {\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token);\n      const customComponentToken = Object.assign({}, token[component]);\n      if (options === null || options === void 0 ? void 0 : options.deprecatedTokens) {\n        const {\n          deprecatedTokens\n        } = options;\n        deprecatedTokens.forEach(_ref => {\n          let [oldTokenKey, newTokenKey] = _ref;\n          var _a;\n          if (process.env.NODE_ENV !== 'production') {\n            process.env.NODE_ENV !== \"production\" ? warning(!(customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]), `The token '${String(oldTokenKey)}' of ${component} had deprecated, use '${String(newTokenKey)}' instead.`) : void 0;\n          }\n          // Should wrap with `if` clause, or there will be `undefined` in object.\n          if ((customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]) || (customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[newTokenKey])) {\n            (_a = customComponentToken[newTokenKey]) !== null && _a !== void 0 ? _a : customComponentToken[newTokenKey] = customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey];\n          }\n        });\n      }\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(mergeToken(proxyToken, customComponentToken !== null && customComponentToken !== void 0 ? customComponentToken : {})) : getDefaultToken;\n      const mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), customComponentToken);\n      const componentCls = `.${prefixCls}`;\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls,\n        iconCls: `.${iconPrefixCls}`,\n        antCls: `.${rootPrefixCls}`\n      }, mergedComponentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId,\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls,\n        overrideComponentToken: customComponentToken\n      });\n      flush(component, mergedComponentToken);\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}"]},"metadata":{},"sourceType":"module"}