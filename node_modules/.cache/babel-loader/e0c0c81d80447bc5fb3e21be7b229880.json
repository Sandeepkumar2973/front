{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMergedState } from 'rc-util';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\n/**\n * 1. Click input to show picker\n * 2. Calculate next open index\n *\n * If click `confirm`:\n * 3. Hide current picker\n * 4. Open next index picker if exist\n *\n * If not `changeOnBlur` and click outside:\n * 3. Hide picker\n *\n * If `changeOnBlur` and click outside:\n * 3. Hide current picker\n * 4. Open next index picker if exist\n */\n\n/**\n * Auto control of open state\n */\n\nexport default function useRangeOpen(defaultOpen, open, activePickerIndex, changeOnBlur, startInputRef, endInputRef, startSelectedValue, endSelectedValue, onOpenChange) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstTimeOpen = _React$useState2[0],\n      setFirstTimeOpen = _React$useState2[1];\n\n  var _useMergedState = useMergedState(defaultOpen || false, {\n    value: open,\n    onChange: function onChange(nextOpen) {\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(nextOpen);\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedOpen = _useMergedState2[0],\n      setMergedOpen = _useMergedState2[1];\n\n  var _useMergedState3 = useMergedState(0, {\n    value: activePickerIndex\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedActivePickerIndex = _useMergedState4[0],\n      setMergedActivePickerIndex = _useMergedState4[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      nextActiveIndex = _React$useState4[0],\n      setNextActiveIndex = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (mergedOpen) {\n      setFirstTimeOpen(true);\n    }\n  }, [mergedOpen]);\n  var triggerOpen = useEvent(function (nextOpen, index, source) {\n    if (index === false) {\n      // Only when `nextOpen` is false and no need open to next index\n      setMergedOpen(nextOpen);\n    } else if (nextOpen) {\n      setMergedActivePickerIndex(index);\n      setMergedOpen(nextOpen);\n      var nextIndex = index === 0 ? 1 : 0; // Record next open index\n\n      if (!mergedOpen || // Also set next index if next is empty\n      ![startSelectedValue, endSelectedValue][nextIndex]) {\n        setNextActiveIndex(nextIndex);\n      } else {\n        setFirstTimeOpen(false);\n\n        if (nextActiveIndex !== null) {\n          setNextActiveIndex(null);\n        }\n      }\n    } else if (source === 'confirm' || source === 'blur' && changeOnBlur) {\n      if (nextActiveIndex !== null) {\n        setFirstTimeOpen(false);\n        setMergedActivePickerIndex(nextActiveIndex);\n      }\n\n      setNextActiveIndex(null); // Focus back\n\n      if (nextActiveIndex !== null) {\n        raf(function () {\n          var _ref$current;\n\n          var ref = [startInputRef, endInputRef][nextActiveIndex];\n          (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus();\n        });\n      } else {\n        setMergedOpen(false);\n      }\n    } else {\n      setMergedOpen(false);\n    }\n  });\n  return [mergedOpen, mergedActivePickerIndex, firstTimeOpen, triggerOpen];\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/rc-picker/es/hooks/useRangeOpen.js"],"names":["_slicedToArray","useMergedState","useEvent","raf","React","useRangeOpen","defaultOpen","open","activePickerIndex","changeOnBlur","startInputRef","endInputRef","startSelectedValue","endSelectedValue","onOpenChange","_React$useState","useState","_React$useState2","firstTimeOpen","setFirstTimeOpen","_useMergedState","value","onChange","nextOpen","_useMergedState2","mergedOpen","setMergedOpen","_useMergedState3","_useMergedState4","mergedActivePickerIndex","setMergedActivePickerIndex","_React$useState3","_React$useState4","nextActiveIndex","setNextActiveIndex","useEffect","triggerOpen","index","source","nextIndex","_ref$current","ref","current","focus"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMergedState } from 'rc-util';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\n\n/**\n * 1. Click input to show picker\n * 2. Calculate next open index\n *\n * If click `confirm`:\n * 3. Hide current picker\n * 4. Open next index picker if exist\n *\n * If not `changeOnBlur` and click outside:\n * 3. Hide picker\n *\n * If `changeOnBlur` and click outside:\n * 3. Hide current picker\n * 4. Open next index picker if exist\n */\n\n/**\n * Auto control of open state\n */\nexport default function useRangeOpen(defaultOpen, open, activePickerIndex, changeOnBlur, startInputRef, endInputRef, startSelectedValue, endSelectedValue, onOpenChange) {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    firstTimeOpen = _React$useState2[0],\n    setFirstTimeOpen = _React$useState2[1];\n  var _useMergedState = useMergedState(defaultOpen || false, {\n      value: open,\n      onChange: function onChange(nextOpen) {\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(nextOpen);\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedOpen = _useMergedState2[0],\n    setMergedOpen = _useMergedState2[1];\n  var _useMergedState3 = useMergedState(0, {\n      value: activePickerIndex\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedActivePickerIndex = _useMergedState4[0],\n    setMergedActivePickerIndex = _useMergedState4[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    nextActiveIndex = _React$useState4[0],\n    setNextActiveIndex = _React$useState4[1];\n  React.useEffect(function () {\n    if (mergedOpen) {\n      setFirstTimeOpen(true);\n    }\n  }, [mergedOpen]);\n  var triggerOpen = useEvent(function (nextOpen, index, source) {\n    if (index === false) {\n      // Only when `nextOpen` is false and no need open to next index\n      setMergedOpen(nextOpen);\n    } else if (nextOpen) {\n      setMergedActivePickerIndex(index);\n      setMergedOpen(nextOpen);\n      var nextIndex = index === 0 ? 1 : 0;\n\n      // Record next open index\n      if (!mergedOpen ||\n      // Also set next index if next is empty\n      ![startSelectedValue, endSelectedValue][nextIndex]) {\n        setNextActiveIndex(nextIndex);\n      } else {\n        setFirstTimeOpen(false);\n        if (nextActiveIndex !== null) {\n          setNextActiveIndex(null);\n        }\n      }\n    } else if (source === 'confirm' || source === 'blur' && changeOnBlur) {\n      if (nextActiveIndex !== null) {\n        setFirstTimeOpen(false);\n        setMergedActivePickerIndex(nextActiveIndex);\n      }\n      setNextActiveIndex(null);\n\n      // Focus back\n      if (nextActiveIndex !== null) {\n        raf(function () {\n          var _ref$current;\n          var ref = [startInputRef, endInputRef][nextActiveIndex];\n          (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus();\n        });\n      } else {\n        setMergedOpen(false);\n      }\n    } else {\n      setMergedOpen(false);\n    }\n  });\n  return [mergedOpen, mergedActivePickerIndex, firstTimeOpen, triggerOpen];\n}"]},"metadata":{},"sourceType":"module"}