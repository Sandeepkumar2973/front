{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionStart\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"];\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport TreeNode from './TreeNode';\nimport { getTreeNodeProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\n\nvar MotionTreeNode = function MotionTreeNode(_ref, ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      motion = _ref.motion,\n      motionNodes = _ref.motionNodes,\n      motionType = _ref.motionType,\n      onOriginMotionStart = _ref.onMotionStart,\n      onOriginMotionEnd = _ref.onMotionEnd,\n      active = _ref.active,\n      treeNodeRequiredProps = _ref.treeNodeRequiredProps,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useContext = React.useContext(TreeContext),\n      prefixCls = _React$useContext.prefixCls;\n\n  var motionedRef = React.useRef(false);\n\n  var onMotionEnd = function onMotionEnd() {\n    if (!motionedRef.current) {\n      onOriginMotionEnd();\n    }\n\n    motionedRef.current = true;\n  };\n\n  useEffect(function () {\n    if (motionNodes && motionType === 'hide' && visible) {\n      setVisible(false);\n    }\n  }, [motionNodes]);\n  var reruningEffectFlag = null;\n  useEffect(function () {\n    // Trigger motion only when patched\n    if (motionNodes) {\n      if (reruningEffectFlag === null) {\n        onOriginMotionStart();\n      } else {\n        clearTimeout(reruningEffectFlag);\n      }\n    }\n\n    return function () {\n      if (motionNodes) {\n        reruningEffectFlag = setTimeout(onMotionEnd, 0);\n      }\n    };\n  }, []);\n\n  if (motionNodes) {\n    return (\n      /*#__PURE__*/\n      React.createElement(CSSMotion, _extends({\n        ref: ref,\n        visible: visible\n      }, motion, {\n        motionAppear: motionType === 'show',\n        onAppearEnd: onMotionEnd,\n        onLeaveEnd: onMotionEnd\n      }), function (_ref2, motionRef) {\n        var motionClassName = _ref2.className,\n            motionStyle = _ref2.style;\n        return (\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            ref: motionRef,\n            className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n            style: motionStyle\n          }, motionNodes.map(function (treeNode) {\n            var restProps = _extends({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n                title = treeNode.title,\n                key = treeNode.key,\n                isStart = treeNode.isStart,\n                isEnd = treeNode.isEnd;\n\n            delete restProps.children;\n            var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n            return (\n              /*#__PURE__*/\n              React.createElement(TreeNode, _extends({}, restProps, treeNodeProps, {\n                title: title,\n                active: active,\n                data: treeNode.data,\n                key: key,\n                isStart: isStart,\n                isEnd: isEnd\n              }))\n            );\n          }))\n        );\n      })\n    );\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(TreeNode, _extends({\n      domRef: ref,\n      className: className,\n      style: style\n    }, props, {\n      active: active\n    }))\n  );\n};\n\nMotionTreeNode.displayName = 'MotionTreeNode';\nvar RefMotionTreeNode =\n/*#__PURE__*/\nReact.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/rc-tree/es/MotionTreeNode.js"],"names":["_objectDestructuringEmpty","_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","useEffect","classNames","CSSMotion","TreeNode","getTreeNodeProps","TreeContext","MotionTreeNode","_ref","ref","className","style","motion","motionNodes","motionType","onOriginMotionStart","onMotionStart","onOriginMotionEnd","onMotionEnd","active","treeNodeRequiredProps","props","_React$useState","useState","_React$useState2","visible","setVisible","_React$useContext","useContext","prefixCls","motionedRef","useRef","current","reruningEffectFlag","clearTimeout","setTimeout","createElement","motionAppear","onAppearEnd","onLeaveEnd","_ref2","motionRef","motionClassName","motionStyle","concat","map","treeNode","restProps","data","title","key","isStart","isEnd","children","treeNodeProps","domRef","displayName","RefMotionTreeNode","forwardRef"],"mappings":"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","sourcesContent":["import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionStart\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"];\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport TreeNode from './TreeNode';\nimport { getTreeNodeProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\nvar MotionTreeNode = function MotionTreeNode(_ref, ref) {\n  var className = _ref.className,\n    style = _ref.style,\n    motion = _ref.motion,\n    motionNodes = _ref.motionNodes,\n    motionType = _ref.motionType,\n    onOriginMotionStart = _ref.onMotionStart,\n    onOriginMotionEnd = _ref.onMotionEnd,\n    active = _ref.active,\n    treeNodeRequiredProps = _ref.treeNodeRequiredProps,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  var _React$useContext = React.useContext(TreeContext),\n    prefixCls = _React$useContext.prefixCls;\n  var motionedRef = React.useRef(false);\n  var onMotionEnd = function onMotionEnd() {\n    if (!motionedRef.current) {\n      onOriginMotionEnd();\n    }\n    motionedRef.current = true;\n  };\n  useEffect(function () {\n    if (motionNodes && motionType === 'hide' && visible) {\n      setVisible(false);\n    }\n  }, [motionNodes]);\n  var reruningEffectFlag = null;\n  useEffect(function () {\n    // Trigger motion only when patched\n    if (motionNodes) {\n      if (reruningEffectFlag === null) {\n        onOriginMotionStart();\n      } else {\n        clearTimeout(reruningEffectFlag);\n      }\n    }\n    return function () {\n      if (motionNodes) {\n        reruningEffectFlag = setTimeout(onMotionEnd, 0);\n      }\n    };\n  }, []);\n  if (motionNodes) {\n    return /*#__PURE__*/React.createElement(CSSMotion, _extends({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onAppearEnd: onMotionEnd,\n      onLeaveEnd: onMotionEnd\n    }), function (_ref2, motionRef) {\n      var motionClassName = _ref2.className,\n        motionStyle = _ref2.style;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var restProps = _extends({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n          title = treeNode.title,\n          key = treeNode.key,\n          isStart = treeNode.isStart,\n          isEnd = treeNode.isEnd;\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return /*#__PURE__*/React.createElement(TreeNode, _extends({}, restProps, treeNodeProps, {\n          title: title,\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n  return /*#__PURE__*/React.createElement(TreeNode, _extends({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n};\nMotionTreeNode.displayName = 'MotionTreeNode';\nvar RefMotionTreeNode = /*#__PURE__*/React.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;"]},"metadata":{},"sourceType":"module"}