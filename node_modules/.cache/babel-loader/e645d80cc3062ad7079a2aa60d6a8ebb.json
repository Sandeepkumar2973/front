{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport theme from '../../theme';\nimport { generateColor } from '../util';\n\nvar genPresetColor = function genPresetColor(list) {\n  return list.map(function (value) {\n    value.colors = value.colors.map(generateColor);\n    return value;\n  });\n};\n\nvar isBright = function isBright(value, bgColorToken) {\n  var _value$toRgb = value.toRgb(),\n      r = _value$toRgb.r,\n      g = _value$toRgb.g,\n      b = _value$toRgb.b,\n      a = _value$toRgb.a;\n\n  var hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\n\nvar ColorPresets = function ColorPresets(_ref) {\n  var prefixCls = _ref.prefixCls,\n      presets = _ref.presets,\n      color = _ref.value,\n      onChange = _ref.onChange;\n\n  var _useLocale = useLocale('ColorPicker'),\n      _useLocale2 = _slicedToArray(_useLocale, 1),\n      locale = _useLocale2[0];\n\n  var _theme$useToken = theme.useToken(),\n      colorBgElevated = _theme$useToken.token.colorBgElevated;\n\n  var _useMergedState = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 1),\n      presetsValue = _useMergedState2[0];\n\n  var colorPresetsPrefixCls = \"\".concat(prefixCls, \"-presets\");\n  var activeKeys = useMemo(function () {\n    return presetsValue.map(function (preset) {\n      return \"panel-\".concat(preset.label);\n    });\n  }, [presetsValue]);\n\n  var handleClick = function handleClick(colorValue) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n\n  var items = presetsValue.map(function (preset) {\n    var _a;\n\n    return {\n      key: \"panel-\".concat(preset.label),\n      label:\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-label\")\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children:\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-items\")\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map(function (presetColor) {\n        var _classNames;\n\n        return (\n          /*#__PURE__*/\n          React.createElement(ColorBlock, {\n            key: \"preset-\".concat(presetColor.toHexString()),\n            color: generateColor(presetColor).toRgbString(),\n            prefixCls: prefixCls,\n            className: classNames(\"\".concat(colorPresetsPrefixCls, \"-color\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(colorPresetsPrefixCls, \"-color-checked\"), presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString())), _defineProperty(_classNames, \"\".concat(colorPresetsPrefixCls, \"-color-bright\"), isBright(presetColor, colorBgElevated)), _classNames)),\n            onClick: function onClick() {\n              return handleClick(presetColor);\n            }\n          })\n        );\n      }) :\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-empty\")\n      }, locale.presetEmpty))\n    };\n  });\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: colorPresetsPrefixCls\n    },\n    /*#__PURE__*/\n    React.createElement(Collapse, {\n      defaultActiveKey: activeKeys,\n      ghost: true,\n      items: items\n    }))\n  );\n};\n\nexport default ColorPresets;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/color-picker/components/ColorPresets.js"],"names":["ColorBlock","Color","RcColor","classNames","useMergedState","React","useMemo","Collapse","useLocale","theme","generateColor","genPresetColor","list","map","value","colors","isBright","bgColorToken","toRgb","r","g","b","a","hsv","toRgbString","onBackground","toHsv","v","ColorPresets","_ref","prefixCls","presets","color","onChange","locale","useToken","colorBgElevated","token","postState","presetsValue","colorPresetsPrefixCls","activeKeys","preset","label","handleClick","colorValue","items","_a","key","createElement","className","children","Array","isArray","length","presetColor","toHexString","onClick","presetEmpty","defaultActiveKey","ghost"],"mappings":"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","sourcesContent":["import { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport theme from '../../theme';\nimport { generateColor } from '../util';\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\nconst isBright = (value, bgColorToken) => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  const hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\nconst ColorPresets = _ref => {\n  let {\n    prefixCls,\n    presets,\n    value: color,\n    onChange\n  } = _ref;\n  const [locale] = useLocale('ColorPicker');\n  const {\n    token: {\n      colorBgElevated\n    }\n  } = theme.useToken();\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = `${prefixCls}-presets`;\n  const activeKeys = useMemo(() => presetsValue.map(preset => `panel-${preset.label}`), [presetsValue]);\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n  const items = presetsValue.map(preset => {\n    var _a;\n    return {\n      key: `panel-${preset.label}`,\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-label`\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-items`\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map(presetColor => /*#__PURE__*/React.createElement(ColorBlock, {\n        key: `preset-${presetColor.toHexString()}`,\n        color: generateColor(presetColor).toRgbString(),\n        prefixCls: prefixCls,\n        className: classNames(`${colorPresetsPrefixCls}-color`, {\n          [`${colorPresetsPrefixCls}-color-checked`]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n          [`${colorPresetsPrefixCls}-color-bright`]: isBright(presetColor, colorBgElevated)\n        }),\n        onClick: () => handleClick(presetColor)\n      })) : /*#__PURE__*/React.createElement(\"span\", {\n        className: `${colorPresetsPrefixCls}-empty`\n      }, locale.presetEmpty))\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true,\n    items: items\n  }));\n};\nexport default ColorPresets;"]},"metadata":{},"sourceType":"module"}