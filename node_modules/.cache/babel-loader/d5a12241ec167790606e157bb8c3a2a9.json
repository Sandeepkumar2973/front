{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nconst Paragraph = props => {\n  const getWidth = index => {\n    const width = props.width,\n          _props$rows = props.rows,\n          rows = _props$rows === void 0 ? 2 : _props$rows;\n\n    if (Array.isArray(width)) {\n      return width[index];\n    } // last paragraph\n\n\n    if (rows - 1 === index) {\n      return width;\n    }\n\n    return undefined;\n  };\n\n  const prefixCls = props.prefixCls,\n        className = props.className,\n        style = props.style,\n        rows = props.rows;\n\n  const rowList = _toConsumableArray(Array(rows)).map((_, index) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index)\n    }\n  }));\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"ul\", {\n      className: classNames(prefixCls, className),\n      style: style\n    }, rowList)\n  );\n};\n\nexport default Paragraph;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/skeleton/Paragraph.js"],"names":["_toConsumableArray","classNames","React","Paragraph","props","getWidth","index","width","rows","Array","isArray","undefined","prefixCls","className","style","rowList","map","_","createElement","key"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA,UAEtBC,KAFsB,GAIpBH,KAJoB,CAEtBG,KAFsB;AAAA,wBAIpBH,KAJoB,CAGtBI,IAHsB;AAAA,UAGtBA,IAHsB,4BAGf,CAHe;;AAKxB,QAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACxB,aAAOA,KAAK,CAACD,KAAD,CAAZ;AACD,KAPuB,CAQxB;;;AACA,QAAIE,IAAI,GAAG,CAAP,KAAaF,KAAjB,EAAwB;AACtB,aAAOC,KAAP;AACD;;AACD,WAAOI,SAAP;AACD,GAbD;;AADyB,QAgBvBC,SAhBuB,GAoBrBR,KApBqB,CAgBvBQ,SAhBuB;AAAA,QAiBvBC,SAjBuB,GAoBrBT,KApBqB,CAiBvBS,SAjBuB;AAAA,QAkBvBC,KAlBuB,GAoBrBV,KApBqB,CAkBvBU,KAlBuB;AAAA,QAmBvBN,IAnBuB,GAoBrBJ,KApBqB,CAmBvBI,IAnBuB;;AAqBzB,QAAMO,OAAO,GAAGf,kBAAkB,CAACS,KAAK,CAACD,IAAD,CAAN,CAAlB,CAAgCQ,GAAhC,CAAoC,CAACC,CAAD,EAAIX,KAAJ;AACpD;AACA;AACAJ,EAAAA,KAAK,CAACgB,aAAN,CAAoB,IAApB,EAA0B;AACxBC,IAAAA,GAAG,EAAEb,KADmB;AAExBQ,IAAAA,KAAK,EAAE;AACLP,MAAAA,KAAK,EAAEF,QAAQ,CAACC,KAAD;AADV;AAFiB,GAA1B,CAHgB,CAAhB;;AASA;AAAO;AAAaJ,IAAAA,KAAK,CAACgB,aAAN,CAAoB,IAApB,EAA0B;AAC5CL,MAAAA,SAAS,EAAEZ,UAAU,CAACW,SAAD,EAAYC,SAAZ,CADuB;AAE5CC,MAAAA,KAAK,EAAEA;AAFqC,KAA1B,EAGjBC,OAHiB;AAApB;AAID,CAlCD;;AAmCA,eAAeZ,SAAf","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Paragraph = props => {\n  const getWidth = index => {\n    const {\n      width,\n      rows = 2\n    } = props;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(Array(rows)).map((_, index) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index)\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;"]},"metadata":{},"sourceType":"module"}