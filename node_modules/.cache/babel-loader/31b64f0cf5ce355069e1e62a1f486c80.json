{"ast":null,"code":"import * as React from 'react';\nimport { DescriptionsContext } from '.';\nimport Cell from './Cell';\n\nfunction renderCells(items, _ref, _ref2) {\n  let colon = _ref.colon,\n      prefixCls = _ref.prefixCls,\n      bordered = _ref.bordered;\n  let component = _ref2.component,\n      type = _ref2.type,\n      showLabel = _ref2.showLabel,\n      showContent = _ref2.showContent,\n      rootLabelStyle = _ref2.labelStyle,\n      rootContentStyle = _ref2.contentStyle;\n  return items.map((_ref3, index) => {\n    let _ref3$props = _ref3.props,\n        label = _ref3$props.label,\n        children = _ref3$props.children,\n        _ref3$props$prefixCls = _ref3$props.prefixCls,\n        itemPrefixCls = _ref3$props$prefixCls === void 0 ? prefixCls : _ref3$props$prefixCls,\n        className = _ref3$props.className,\n        style = _ref3$props.style,\n        labelStyle = _ref3$props.labelStyle,\n        contentStyle = _ref3$props.contentStyle,\n        _ref3$props$span = _ref3$props.span,\n        span = _ref3$props$span === void 0 ? 1 : _ref3$props$span,\n        key = _ref3.key;\n\n    if (typeof component === 'string') {\n      return (\n        /*#__PURE__*/\n        React.createElement(Cell, {\n          key: `${type}-${key || index}`,\n          className: className,\n          style: style,\n          labelStyle: Object.assign(Object.assign({}, rootLabelStyle), labelStyle),\n          contentStyle: Object.assign(Object.assign({}, rootContentStyle), contentStyle),\n          span: span,\n          colon: colon,\n          component: component,\n          itemPrefixCls: itemPrefixCls,\n          bordered: bordered,\n          label: showLabel ? label : null,\n          content: showContent ? children : null\n        })\n      );\n    }\n\n    return [\n    /*#__PURE__*/\n    React.createElement(Cell, {\n      key: `label-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }),\n    /*#__PURE__*/\n    React.createElement(Cell, {\n      key: `content-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\n\nconst Row = props => {\n  const descContext = React.useContext(DescriptionsContext);\n  const prefixCls = props.prefixCls,\n        vertical = props.vertical,\n        row = props.row,\n        index = props.index,\n        bordered = props.bordered;\n\n  if (vertical) {\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"tr\", {\n        key: `label-${index}`,\n        className: `${prefixCls}-row`\n      }, renderCells(row, props, Object.assign({\n        component: 'th',\n        type: 'label',\n        showLabel: true\n      }, descContext))),\n      /*#__PURE__*/\n      React.createElement(\"tr\", {\n        key: `content-${index}`,\n        className: `${prefixCls}-row`\n      }, renderCells(row, props, Object.assign({\n        component: 'td',\n        type: 'content',\n        showContent: true\n      }, descContext))))\n    );\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"tr\", {\n      key: index,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: bordered ? ['th', 'td'] : 'td',\n      type: 'item',\n      showLabel: true,\n      showContent: true\n    }, descContext)))\n  );\n};\n\nexport default Row;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/descriptions/Row.js"],"names":["React","DescriptionsContext","Cell","renderCells","items","_ref","_ref2","colon","prefixCls","bordered","component","type","showLabel","showContent","rootLabelStyle","labelStyle","rootContentStyle","contentStyle","map","_ref3","index","props","label","children","itemPrefixCls","className","style","span","key","createElement","Object","assign","content","Row","descContext","useContext","vertical","row","Fragment"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,GAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AAAA,MAErCC,KAFqC,GAKnCF,IALmC,CAErCE,KAFqC;AAAA,MAGrCC,SAHqC,GAKnCH,IALmC,CAGrCG,SAHqC;AAAA,MAIrCC,QAJqC,GAKnCJ,IALmC,CAIrCI,QAJqC;AAAA,MAOrCC,SAPqC,GAanCJ,KAbmC,CAOrCI,SAPqC;AAAA,MAQrCC,IARqC,GAanCL,KAbmC,CAQrCK,IARqC;AAAA,MASrCC,SATqC,GAanCN,KAbmC,CASrCM,SATqC;AAAA,MAUrCC,WAVqC,GAanCP,KAbmC,CAUrCO,WAVqC;AAAA,MAWzBC,cAXyB,GAanCR,KAbmC,CAWrCS,UAXqC;AAAA,MAYvBC,gBAZuB,GAanCV,KAbmC,CAYrCW,YAZqC;AAcvC,SAAOb,KAAK,CAACc,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAA,sBAa7BD,KAb6B,CAE/BE,KAF+B;AAAA,QAG7BC,KAH6B,eAG7BA,KAH6B;AAAA,QAI7BC,QAJ6B,eAI7BA,QAJ6B;AAAA,4CAK7Bf,SAL6B;AAAA,QAKlBgB,aALkB,sCAKFhB,SALE;AAAA,QAM7BiB,SAN6B,eAM7BA,SAN6B;AAAA,QAO7BC,KAP6B,eAO7BA,KAP6B;AAAA,QAQ7BX,UAR6B,eAQ7BA,UAR6B;AAAA,QAS7BE,YAT6B,eAS7BA,YAT6B;AAAA,uCAU7BU,IAV6B;AAAA,QAU7BA,IAV6B,iCAUtB,CAVsB;AAAA,QAY/BC,GAZ+B,GAa7BT,KAb6B,CAY/BS,GAZ+B;;AAcjC,QAAI,OAAOlB,SAAP,KAAqB,QAAzB,EAAmC;AACjC;AAAO;AAAaV,QAAAA,KAAK,CAAC6B,aAAN,CAAoB3B,IAApB,EAA0B;AAC5C0B,UAAAA,GAAG,EAAG,GAAEjB,IAAK,IAAGiB,GAAG,IAAIR,KAAM,EADe;AAE5CK,UAAAA,SAAS,EAAEA,SAFiC;AAG5CC,UAAAA,KAAK,EAAEA,KAHqC;AAI5CX,UAAAA,UAAU,EAAEe,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,cAAlB,CAAd,EAAiDC,UAAjD,CAJgC;AAK5CE,UAAAA,YAAY,EAAEa,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,gBAAlB,CAAd,EAAmDC,YAAnD,CAL8B;AAM5CU,UAAAA,IAAI,EAAEA,IANsC;AAO5CpB,UAAAA,KAAK,EAAEA,KAPqC;AAQ5CG,UAAAA,SAAS,EAAEA,SARiC;AAS5Cc,UAAAA,aAAa,EAAEA,aAT6B;AAU5Cf,UAAAA,QAAQ,EAAEA,QAVkC;AAW5Ca,UAAAA,KAAK,EAAEV,SAAS,GAAGU,KAAH,GAAW,IAXiB;AAY5CU,UAAAA,OAAO,EAAEnB,WAAW,GAAGU,QAAH,GAAc;AAZU,SAA1B;AAApB;AAcD;;AACD,WAAO;AAAC;AAAavB,IAAAA,KAAK,CAAC6B,aAAN,CAAoB3B,IAApB,EAA0B;AAC7C0B,MAAAA,GAAG,EAAG,SAAQA,GAAG,IAAIR,KAAM,EADkB;AAE7CK,MAAAA,SAAS,EAAEA,SAFkC;AAG7CC,MAAAA,KAAK,EAAEI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,cAAlB,CAAd,EAAiDY,KAAjD,CAAd,EAAuEX,UAAvE,CAHsC;AAI7CY,MAAAA,IAAI,EAAE,CAJuC;AAK7CpB,MAAAA,KAAK,EAAEA,KALsC;AAM7CG,MAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CANyB;AAO7Cc,MAAAA,aAAa,EAAEA,aAP8B;AAQ7Cf,MAAAA,QAAQ,EAAEA,QARmC;AAS7Ca,MAAAA,KAAK,EAAEA;AATsC,KAA1B,CAAd;AAUH;AAAatB,IAAAA,KAAK,CAAC6B,aAAN,CAAoB3B,IAApB,EAA0B;AACzC0B,MAAAA,GAAG,EAAG,WAAUA,GAAG,IAAIR,KAAM,EADY;AAEzCK,MAAAA,SAAS,EAAEA,SAF8B;AAGzCC,MAAAA,KAAK,EAAEI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,gBAAlB,CAAd,EAAmDU,KAAnD,CAAd,EAAyET,YAAzE,CAHkC;AAIzCU,MAAAA,IAAI,EAAEA,IAAI,GAAG,CAAP,GAAW,CAJwB;AAKzCjB,MAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CALqB;AAMzCc,MAAAA,aAAa,EAAEA,aAN0B;AAOzCf,MAAAA,QAAQ,EAAEA,QAP+B;AAQzCuB,MAAAA,OAAO,EAAET;AARgC,KAA1B,CAVV,CAAP;AAoBD,GAlDM,CAAP;AAmDD;;AACD,MAAMU,GAAG,GAAGZ,KAAK,IAAI;AACnB,QAAMa,WAAW,GAAGlC,KAAK,CAACmC,UAAN,CAAiBlC,mBAAjB,CAApB;AADmB,QAGjBO,SAHiB,GAQfa,KARe,CAGjBb,SAHiB;AAAA,QAIjB4B,QAJiB,GAQff,KARe,CAIjBe,QAJiB;AAAA,QAKjBC,GALiB,GAQfhB,KARe,CAKjBgB,GALiB;AAAA,QAMjBjB,KANiB,GAQfC,KARe,CAMjBD,KANiB;AAAA,QAOjBX,QAPiB,GAQfY,KARe,CAOjBZ,QAPiB;;AASnB,MAAI2B,QAAJ,EAAc;AACZ;AAAO;AAAapC,MAAAA,KAAK,CAAC6B,aAAN,CAAoB7B,KAAK,CAACsC,QAA1B,EAAoC,IAApC;AAA0C;AAAatC,MAAAA,KAAK,CAAC6B,aAAN,CAAoB,IAApB,EAA0B;AACnGD,QAAAA,GAAG,EAAG,SAAQR,KAAM,EAD+E;AAEnGK,QAAAA,SAAS,EAAG,GAAEjB,SAAU;AAF2E,OAA1B,EAGxEL,WAAW,CAACkC,GAAD,EAAMhB,KAAN,EAAaS,MAAM,CAACC,MAAP,CAAc;AACvCrB,QAAAA,SAAS,EAAE,IAD4B;AAEvCC,QAAAA,IAAI,EAAE,OAFiC;AAGvCC,QAAAA,SAAS,EAAE;AAH4B,OAAd,EAIxBsB,WAJwB,CAAb,CAH6D,CAAvD;AAOD;AAAalC,MAAAA,KAAK,CAAC6B,aAAN,CAAoB,IAApB,EAA0B;AACxDD,QAAAA,GAAG,EAAG,WAAUR,KAAM,EADkC;AAExDK,QAAAA,SAAS,EAAG,GAAEjB,SAAU;AAFgC,OAA1B,EAG7BL,WAAW,CAACkC,GAAD,EAAMhB,KAAN,EAAaS,MAAM,CAACC,MAAP,CAAc;AACvCrB,QAAAA,SAAS,EAAE,IAD4B;AAEvCC,QAAAA,IAAI,EAAE,SAFiC;AAGvCE,QAAAA,WAAW,EAAE;AAH0B,OAAd,EAIxBqB,WAJwB,CAAb,CAHkB,CAPZ;AAApB;AAeD;;AACD;AAAO;AAAalC,IAAAA,KAAK,CAAC6B,aAAN,CAAoB,IAApB,EAA0B;AAC5CD,MAAAA,GAAG,EAAER,KADuC;AAE5CK,MAAAA,SAAS,EAAG,GAAEjB,SAAU;AAFoB,KAA1B,EAGjBL,WAAW,CAACkC,GAAD,EAAMhB,KAAN,EAAaS,MAAM,CAACC,MAAP,CAAc;AACvCrB,MAAAA,SAAS,EAAED,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,CAAH,GAAkB,IADE;AAEvCE,MAAAA,IAAI,EAAE,MAFiC;AAGvCC,MAAAA,SAAS,EAAE,IAH4B;AAIvCC,MAAAA,WAAW,EAAE;AAJ0B,KAAd,EAKxBqB,WALwB,CAAb,CAHM;AAApB;AASD,CAnCD;;AAoCA,eAAeD,GAAf","sourcesContent":["import * as React from 'react';\nimport { DescriptionsContext } from '.';\nimport Cell from './Cell';\nfunction renderCells(items, _ref, _ref2) {\n  let {\n    colon,\n    prefixCls,\n    bordered\n  } = _ref;\n  let {\n    component,\n    type,\n    showLabel,\n    showContent,\n    labelStyle: rootLabelStyle,\n    contentStyle: rootContentStyle\n  } = _ref2;\n  return items.map((_ref3, index) => {\n    let {\n      props: {\n        label,\n        children,\n        prefixCls: itemPrefixCls = prefixCls,\n        className,\n        style,\n        labelStyle,\n        contentStyle,\n        span = 1\n      },\n      key\n    } = _ref3;\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${type}-${key || index}`,\n        className: className,\n        style: style,\n        labelStyle: Object.assign(Object.assign({}, rootLabelStyle), labelStyle),\n        contentStyle: Object.assign(Object.assign({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: `label-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: `content-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\nconst Row = props => {\n  const descContext = React.useContext(DescriptionsContext);\n  const {\n    prefixCls,\n    vertical,\n    row,\n    index,\n    bordered\n  } = props;\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: `label-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: `content-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: `${prefixCls}-row`\n  }, renderCells(row, props, Object.assign({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\nexport default Row;"]},"metadata":{},"sourceType":"module"}