{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Circle from './Circle';\nimport Line from './Line';\nimport Steps from './Steps';\nimport useStyle from './style';\nimport { getSize, getSuccessPercent, validProgress } from './utils';\nexport const ProgressTypes = ['line', 'circle', 'dashboard'];\nconst ProgressStatuses = ['normal', 'exception', 'active', 'success'];\nconst Progress =\n/*#__PURE__*/\nReact.forwardRef((props, ref) => {\n  const customizePrefixCls = props.prefixCls,\n        className = props.className,\n        rootClassName = props.rootClassName,\n        steps = props.steps,\n        strokeColor = props.strokeColor,\n        _props$percent = props.percent,\n        percent = _props$percent === void 0 ? 0 : _props$percent,\n        _props$size = props.size,\n        size = _props$size === void 0 ? 'default' : _props$size,\n        _props$showInfo = props.showInfo,\n        showInfo = _props$showInfo === void 0 ? true : _props$showInfo,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'line' : _props$type,\n        status = props.status,\n        format = props.format,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"steps\", \"strokeColor\", \"percent\", \"size\", \"showInfo\", \"type\", \"status\", \"format\"]);\n\n  const percentNumber = React.useMemo(() => {\n    var _a, _b;\n\n    const successPercent = getSuccessPercent(props);\n    return parseInt(successPercent !== undefined ? (_a = successPercent !== null && successPercent !== void 0 ? successPercent : 0) === null || _a === void 0 ? void 0 : _a.toString() : (_b = percent !== null && percent !== void 0 ? percent : 0) === null || _b === void 0 ? void 0 : _b.toString(), 10);\n  }, [percent, props.success, props.successPercent]);\n  const progressStatus = React.useMemo(() => {\n    if (!ProgressStatuses.includes(status) && percentNumber >= 100) {\n      return 'success';\n    }\n\n    return status || 'normal';\n  }, [status, percentNumber]);\n\n  const _React$useContext = React.useContext(ConfigContext),\n        getPrefixCls = _React$useContext.getPrefixCls,\n        direction = _React$useContext.direction;\n\n  const prefixCls = getPrefixCls('progress', customizePrefixCls);\n\n  const _useStyle = useStyle(prefixCls),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1];\n\n  const progressInfo = React.useMemo(() => {\n    if (!showInfo) {\n      return null;\n    }\n\n    const successPercent = getSuccessPercent(props);\n    let text;\n\n    const textFormatter = format || (number => `${number}%`);\n\n    const isLineType = type === 'line';\n\n    if (format || progressStatus !== 'exception' && progressStatus !== 'success') {\n      text = textFormatter(validProgress(percent), validProgress(successPercent));\n    } else if (progressStatus === 'exception') {\n      text = isLineType ?\n      /*#__PURE__*/\n      React.createElement(CloseCircleFilled, null) :\n      /*#__PURE__*/\n      React.createElement(CloseOutlined, null);\n    } else if (progressStatus === 'success') {\n      text = isLineType ?\n      /*#__PURE__*/\n      React.createElement(CheckCircleFilled, null) :\n      /*#__PURE__*/\n      React.createElement(CheckOutlined, null);\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: `${prefixCls}-text`,\n        title: typeof text === 'string' ? text : undefined\n      }, text)\n    );\n  }, [showInfo, percent, percentNumber, progressStatus, type, prefixCls, format]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('successPercent' in props), 'Progress', '`successPercent` is deprecated. Please use `success.percent` instead.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!('width' in props), 'Progress', '`width` is deprecated. Please use `size` instead.') : void 0;\n  }\n\n  const strokeColorNotArray = Array.isArray(strokeColor) ? strokeColor[0] : strokeColor;\n  const strokeColorNotGradient = typeof strokeColor === 'string' || Array.isArray(strokeColor) ? strokeColor : undefined;\n  let progress; // Render progress shape\n\n  if (type === 'line') {\n    progress = steps ?\n    /*#__PURE__*/\n    React.createElement(Steps, Object.assign({}, props, {\n      strokeColor: strokeColorNotGradient,\n      prefixCls: prefixCls,\n      steps: steps\n    }), progressInfo) :\n    /*#__PURE__*/\n    React.createElement(Line, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      direction: direction\n    }), progressInfo);\n  } else if (type === 'circle' || type === 'dashboard') {\n    progress =\n    /*#__PURE__*/\n    React.createElement(Circle, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      progressStatus: progressStatus\n    }), progressInfo);\n  }\n\n  const classString = classNames(prefixCls, {\n    [`${prefixCls}-inline-circle`]: type === 'circle' && getSize(size, 'circle')[0] <= 20,\n    [`${prefixCls}-${type === 'dashboard' && 'circle' || steps && 'steps' || type}`]: true,\n    [`${prefixCls}-status-${progressStatus}`]: true,\n    [`${prefixCls}-show-info`]: showInfo,\n    [`${prefixCls}-${size}`]: typeof size === 'string',\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: classString,\n    role: \"progressbar\",\n    \"aria-valuenow\": percentNumber\n  }, omit(restProps, ['trailColor', 'strokeWidth', 'width', 'gapDegree', 'gapPosition', 'strokeLinecap', 'success', 'successPercent'])), progress));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Progress.displayName = 'Progress';\n}\n\nexport default Progress;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/progress/progress.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckCircleFilled","CheckOutlined","CloseCircleFilled","CloseOutlined","classNames","omit","React","warning","ConfigContext","Circle","Line","Steps","useStyle","getSize","getSuccessPercent","validProgress","ProgressTypes","ProgressStatuses","Progress","forwardRef","props","ref","customizePrefixCls","prefixCls","className","rootClassName","steps","strokeColor","percent","size","showInfo","type","status","format","restProps","percentNumber","useMemo","_a","_b","successPercent","parseInt","undefined","toString","success","progressStatus","includes","useContext","getPrefixCls","direction","wrapSSR","hashId","progressInfo","text","textFormatter","number","isLineType","createElement","title","process","env","NODE_ENV","strokeColorNotArray","Array","isArray","strokeColorNotGradient","progress","assign","classString","role","displayName"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Circle from './Circle';\nimport Line from './Line';\nimport Steps from './Steps';\nimport useStyle from './style';\nimport { getSize, getSuccessPercent, validProgress } from './utils';\nexport const ProgressTypes = ['line', 'circle', 'dashboard'];\nconst ProgressStatuses = ['normal', 'exception', 'active', 'success'];\nconst Progress = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      steps,\n      strokeColor,\n      percent = 0,\n      size = 'default',\n      showInfo = true,\n      type = 'line',\n      status,\n      format\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"steps\", \"strokeColor\", \"percent\", \"size\", \"showInfo\", \"type\", \"status\", \"format\"]);\n  const percentNumber = React.useMemo(() => {\n    var _a, _b;\n    const successPercent = getSuccessPercent(props);\n    return parseInt(successPercent !== undefined ? (_a = successPercent !== null && successPercent !== void 0 ? successPercent : 0) === null || _a === void 0 ? void 0 : _a.toString() : (_b = percent !== null && percent !== void 0 ? percent : 0) === null || _b === void 0 ? void 0 : _b.toString(), 10);\n  }, [percent, props.success, props.successPercent]);\n  const progressStatus = React.useMemo(() => {\n    if (!ProgressStatuses.includes(status) && percentNumber >= 100) {\n      return 'success';\n    }\n    return status || 'normal';\n  }, [status, percentNumber]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('progress', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const progressInfo = React.useMemo(() => {\n    if (!showInfo) {\n      return null;\n    }\n    const successPercent = getSuccessPercent(props);\n    let text;\n    const textFormatter = format || (number => `${number}%`);\n    const isLineType = type === 'line';\n    if (format || progressStatus !== 'exception' && progressStatus !== 'success') {\n      text = textFormatter(validProgress(percent), validProgress(successPercent));\n    } else if (progressStatus === 'exception') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CloseCircleFilled, null) : /*#__PURE__*/React.createElement(CloseOutlined, null);\n    } else if (progressStatus === 'success') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CheckCircleFilled, null) : /*#__PURE__*/React.createElement(CheckOutlined, null);\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-text`,\n      title: typeof text === 'string' ? text : undefined\n    }, text);\n  }, [showInfo, percent, percentNumber, progressStatus, type, prefixCls, format]);\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('successPercent' in props), 'Progress', '`successPercent` is deprecated. Please use `success.percent` instead.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!('width' in props), 'Progress', '`width` is deprecated. Please use `size` instead.') : void 0;\n  }\n  const strokeColorNotArray = Array.isArray(strokeColor) ? strokeColor[0] : strokeColor;\n  const strokeColorNotGradient = typeof strokeColor === 'string' || Array.isArray(strokeColor) ? strokeColor : undefined;\n  let progress;\n  // Render progress shape\n  if (type === 'line') {\n    progress = steps ? /*#__PURE__*/React.createElement(Steps, Object.assign({}, props, {\n      strokeColor: strokeColorNotGradient,\n      prefixCls: prefixCls,\n      steps: steps\n    }), progressInfo) : /*#__PURE__*/React.createElement(Line, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      direction: direction\n    }), progressInfo);\n  } else if (type === 'circle' || type === 'dashboard') {\n    progress = /*#__PURE__*/React.createElement(Circle, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      progressStatus: progressStatus\n    }), progressInfo);\n  }\n  const classString = classNames(prefixCls, {\n    [`${prefixCls}-inline-circle`]: type === 'circle' && getSize(size, 'circle')[0] <= 20,\n    [`${prefixCls}-${type === 'dashboard' && 'circle' || steps && 'steps' || type}`]: true,\n    [`${prefixCls}-status-${progressStatus}`]: true,\n    [`${prefixCls}-show-info`]: showInfo,\n    [`${prefixCls}-${size}`]: typeof size === 'string',\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: classString,\n    role: \"progressbar\",\n    \"aria-valuenow\": percentNumber\n  }, omit(restProps, ['trailColor', 'strokeWidth', 'width', 'gapDegree', 'gapPosition', 'strokeLinecap', 'success', 'successPercent'])), progress));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Progress.displayName = 'Progress';\n}\nexport default Progress;"]},"metadata":{},"sourceType":"module"}