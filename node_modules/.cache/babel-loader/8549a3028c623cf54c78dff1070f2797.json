{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useRef, memo, useContext, useEffect, useCallback, useMemo } from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport FileTextOutlined from \"@ant-design/icons/es/icons/FileTextOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport FloatButton, { floatButtonPrefixCls } from './FloatButton';\nimport { ConfigContext } from '../config-provider';\nimport { FloatButtonGroupProvider } from './context';\nimport useStyle from './style';\n\nconst FloatButtonGroup = props => {\n  const customizePrefixCls = props.prefixCls,\n        className = props.className,\n        style = props.style,\n        _props$shape = props.shape,\n        shape = _props$shape === void 0 ? 'circle' : _props$shape,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'default' : _props$type,\n        _props$icon = props.icon,\n        icon = _props$icon === void 0 ?\n  /*#__PURE__*/\n  React.createElement(FileTextOutlined, null) : _props$icon,\n        _props$closeIcon = props.closeIcon,\n        closeIcon = _props$closeIcon === void 0 ?\n  /*#__PURE__*/\n  React.createElement(CloseOutlined, null) : _props$closeIcon,\n        description = props.description,\n        trigger = props.trigger,\n        children = props.children,\n        onOpenChange = props.onOpenChange;\n\n  const _useContext = useContext(ConfigContext),\n        direction = _useContext.direction,\n        getPrefixCls = _useContext.getPrefixCls;\n\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n\n  const _useStyle = useStyle(prefixCls),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1];\n\n  const groupPrefixCls = `${prefixCls}-group`;\n  const groupCls = classNames(groupPrefixCls, hashId, className, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl',\n    [`${groupPrefixCls}-${shape}`]: shape,\n    [`${groupPrefixCls}-${shape}-shadow`]: !trigger\n  });\n  const wrapperCls = classNames(hashId, `${groupPrefixCls}-wrap`);\n\n  const _useMergedState = useMergedState(false, {\n    value: props.open\n  }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        open = _useMergedState2[0],\n        setOpen = _useMergedState2[1];\n\n  const floatButtonGroupRef = useRef(null);\n  const floatButtonRef = useRef(null);\n  const hoverAction = useMemo(() => {\n    const hoverTypeAction = {\n      onMouseEnter() {\n        setOpen(true);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(true);\n      },\n\n      onMouseLeave() {\n        setOpen(false);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n      }\n\n    };\n    return trigger === 'hover' ? hoverTypeAction : {};\n  }, [trigger]);\n\n  const handleOpenChange = () => {\n    setOpen(prevState => {\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(!prevState);\n      return !prevState;\n    });\n  };\n\n  const onClick = useCallback(e => {\n    var _a, _b;\n\n    if ((_a = floatButtonGroupRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target)) {\n      if ((_b = floatButtonRef.current) === null || _b === void 0 ? void 0 : _b.contains(e.target)) {\n        handleOpenChange();\n      }\n\n      return;\n    }\n\n    setOpen(false);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n  }, [trigger]);\n  useEffect(() => {\n    if (trigger === 'click') {\n      document.addEventListener('click', onClick);\n      return () => {\n        document.removeEventListener('click', onClick);\n      };\n    }\n  }, [trigger]);\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(FloatButtonGroupProvider, {\n    value: shape\n  },\n  /*#__PURE__*/\n  React.createElement(\"div\", Object.assign({\n    ref: floatButtonGroupRef,\n    className: groupCls,\n    style: style\n  }, hoverAction), trigger && ['click', 'hover'].includes(trigger) ?\n  /*#__PURE__*/\n  React.createElement(React.Fragment, null,\n  /*#__PURE__*/\n  React.createElement(CSSMotion, {\n    visible: open,\n    motionName: `${groupPrefixCls}-wrap`\n  }, _ref => {\n    let motionClassName = _ref.className;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: classNames(motionClassName, wrapperCls)\n      }, children)\n    );\n  }),\n  /*#__PURE__*/\n  React.createElement(FloatButton, {\n    ref: floatButtonRef,\n    type: type,\n    shape: shape,\n    icon: open ? closeIcon : icon,\n    description: description\n  })) : children)));\n};\n\nexport default\n/*#__PURE__*/\nmemo(FloatButtonGroup);","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/float-button/FloatButtonGroup.js"],"names":["React","useRef","memo","useContext","useEffect","useCallback","useMemo","CloseOutlined","FileTextOutlined","classNames","CSSMotion","useMergedState","FloatButton","floatButtonPrefixCls","ConfigContext","FloatButtonGroupProvider","useStyle","FloatButtonGroup","props","customizePrefixCls","prefixCls","className","style","shape","type","icon","createElement","closeIcon","description","trigger","children","onOpenChange","direction","getPrefixCls","wrapSSR","hashId","groupPrefixCls","groupCls","wrapperCls","value","open","setOpen","floatButtonGroupRef","floatButtonRef","hoverAction","hoverTypeAction","onMouseEnter","onMouseLeave","handleOpenChange","prevState","onClick","e","_a","_b","current","contains","target","document","addEventListener","removeEventListener","Object","assign","ref","includes","Fragment","visible","motionName","_ref","motionClassName"],"mappings":"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","sourcesContent":["import React, { useRef, memo, useContext, useEffect, useCallback, useMemo } from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport FileTextOutlined from \"@ant-design/icons/es/icons/FileTextOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport FloatButton, { floatButtonPrefixCls } from './FloatButton';\nimport { ConfigContext } from '../config-provider';\nimport { FloatButtonGroupProvider } from './context';\nimport useStyle from './style';\nconst FloatButtonGroup = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    shape = 'circle',\n    type = 'default',\n    icon = /*#__PURE__*/React.createElement(FileTextOutlined, null),\n    closeIcon = /*#__PURE__*/React.createElement(CloseOutlined, null),\n    description,\n    trigger,\n    children,\n    onOpenChange\n  } = props;\n  const {\n    direction,\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const groupCls = classNames(groupPrefixCls, hashId, className, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl',\n    [`${groupPrefixCls}-${shape}`]: shape,\n    [`${groupPrefixCls}-${shape}-shadow`]: !trigger\n  });\n  const wrapperCls = classNames(hashId, `${groupPrefixCls}-wrap`);\n  const [open, setOpen] = useMergedState(false, {\n    value: props.open\n  });\n  const floatButtonGroupRef = useRef(null);\n  const floatButtonRef = useRef(null);\n  const hoverAction = useMemo(() => {\n    const hoverTypeAction = {\n      onMouseEnter() {\n        setOpen(true);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(true);\n      },\n      onMouseLeave() {\n        setOpen(false);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n      }\n    };\n    return trigger === 'hover' ? hoverTypeAction : {};\n  }, [trigger]);\n  const handleOpenChange = () => {\n    setOpen(prevState => {\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(!prevState);\n      return !prevState;\n    });\n  };\n  const onClick = useCallback(e => {\n    var _a, _b;\n    if ((_a = floatButtonGroupRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target)) {\n      if ((_b = floatButtonRef.current) === null || _b === void 0 ? void 0 : _b.contains(e.target)) {\n        handleOpenChange();\n      }\n      return;\n    }\n    setOpen(false);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n  }, [trigger]);\n  useEffect(() => {\n    if (trigger === 'click') {\n      document.addEventListener('click', onClick);\n      return () => {\n        document.removeEventListener('click', onClick);\n      };\n    }\n  }, [trigger]);\n  return wrapSSR( /*#__PURE__*/React.createElement(FloatButtonGroupProvider, {\n    value: shape\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: floatButtonGroupRef,\n    className: groupCls,\n    style: style\n  }, hoverAction), trigger && ['click', 'hover'].includes(trigger) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: open,\n    motionName: `${groupPrefixCls}-wrap`\n  }, _ref => {\n    let {\n      className: motionClassName\n    } = _ref;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(motionClassName, wrapperCls)\n    }, children);\n  }), /*#__PURE__*/React.createElement(FloatButton, {\n    ref: floatButtonRef,\n    type: type,\n    shape: shape,\n    icon: open ? closeIcon : icon,\n    description: description\n  })) : children)));\n};\nexport default /*#__PURE__*/memo(FloatButtonGroup);"]},"metadata":{},"sourceType":"module"}