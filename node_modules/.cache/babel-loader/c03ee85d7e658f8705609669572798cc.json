{"ast":null,"code":"import LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport CSSMotion from 'rc-motion';\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon =\n/*#__PURE__*/\nforwardRef((_ref, ref) => {\n  let prefixCls = _ref.prefixCls,\n      className = _ref.className,\n      style = _ref.style,\n      iconClassName = _ref.iconClassName;\n  const mergedIconCls = classNames(`${prefixCls}-loading-icon`, className);\n  return (\n    /*#__PURE__*/\n    React.createElement(IconWrapper, {\n      prefixCls: prefixCls,\n      className: mergedIconCls,\n      style: style,\n      ref: ref\n    },\n    /*#__PURE__*/\n    React.createElement(LoadingOutlined, {\n      className: iconClassName\n    }))\n  );\n});\n\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\n\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\n\nconst LoadingIcon = _ref2 => {\n  let prefixCls = _ref2.prefixCls,\n      loading = _ref2.loading,\n      existIcon = _ref2.existIcon,\n      className = _ref2.className,\n      style = _ref2.style;\n  const visible = !!loading;\n\n  if (existIcon) {\n    return (\n      /*#__PURE__*/\n      React.createElement(InnerLoadingIcon, {\n        prefixCls: prefixCls,\n        className: className,\n        style: style\n      })\n    );\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(CSSMotion, {\n      visible: visible,\n      // We do not really use this motionName\n      motionName: `${prefixCls}-loading-icon-motion`,\n      removeOnLeave: true,\n      onAppearStart: getCollapsedWidth,\n      onAppearActive: getRealWidth,\n      onEnterStart: getCollapsedWidth,\n      onEnterActive: getRealWidth,\n      onLeaveStart: getRealWidth,\n      onLeaveActive: getCollapsedWidth\n    }, (_ref3, ref) => {\n      let motionCls = _ref3.className,\n          motionStyle = _ref3.style;\n      return (\n        /*#__PURE__*/\n        React.createElement(InnerLoadingIcon, {\n          prefixCls: prefixCls,\n          className: className,\n          style: Object.assign(Object.assign({}, style), motionStyle),\n          ref: ref,\n          iconClassName: motionCls\n        })\n      );\n    })\n  );\n};\n\nexport default LoadingIcon;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/button/LoadingIcon.js"],"names":["LoadingOutlined","CSSMotion","React","forwardRef","classNames","IconWrapper","InnerLoadingIcon","_ref","ref","prefixCls","className","style","iconClassName","mergedIconCls","createElement","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","LoadingIcon","_ref2","loading","existIcon","visible","motionName","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","_ref3","motionCls","motionStyle","Object","assign"],"mappings":"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","sourcesContent":["import LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport CSSMotion from 'rc-motion';\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    prefixCls,\n    className,\n    style,\n    iconClassName\n  } = _ref;\n  const mergedIconCls = classNames(`${prefixCls}-loading-icon`, className);\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\nconst LoadingIcon = _ref2 => {\n  let {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style\n  } = _ref2;\n  const visible = !!loading;\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style\n    });\n  }\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: `${prefixCls}-loading-icon-motion`,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref3, ref) => {\n    let {\n      className: motionCls,\n      style: motionStyle\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: Object.assign(Object.assign({}, style), motionStyle),\n      ref: ref,\n      iconClassName: motionCls\n    });\n  });\n};\nexport default LoadingIcon;"]},"metadata":{},"sourceType":"module"}