{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal'; // =============================== Base ===============================\n\nconst genBaseStyle = token => {\n  const componentCls = token.componentCls,\n        lineHeight = token.lineHeight,\n        padding = token.padding,\n        paddingXS = token.paddingXS,\n        borderRadius = token.borderRadius,\n        borderRadiusXS = token.borderRadiusXS,\n        colorPrimary = token.colorPrimary,\n        colorText = token.colorText,\n        colorFill = token.colorFill,\n        indicatorHeight = token.indicatorHeight,\n        indicatorWidth = token.indicatorWidth,\n        boxShadowTertiary = token.boxShadowTertiary,\n        tourZIndexPopup = token.tourZIndexPopup,\n        fontSize = token.fontSize,\n        colorBgContainer = token.colorBgContainer,\n        fontWeightStrong = token.fontWeightStrong,\n        marginXS = token.marginXS,\n        colorTextLightSolid = token.colorTextLightSolid,\n        tourBorderRadius = token.tourBorderRadius,\n        colorWhite = token.colorWhite,\n        colorBgTextHover = token.colorBgTextHover,\n        tourCloseSize = token.tourCloseSize,\n        motionDurationSlow = token.motionDurationSlow,\n        antCls = token.antCls;\n  return [{\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      color: colorText,\n      position: 'absolute',\n      zIndex: tourZIndexPopup,\n      display: 'block',\n      visibility: 'visible',\n      fontSize,\n      lineHeight,\n      width: 520,\n      '--antd-arrow-background-color': colorBgContainer,\n      '&-pure': {\n        maxWidth: '100%',\n        position: 'relative'\n      },\n      [`&${componentCls}-hidden`]: {\n        display: 'none'\n      },\n      // ============================= panel content ============================\n      [`${componentCls}-content`]: {\n        position: 'relative'\n      },\n      [`${componentCls}-inner`]: {\n        textAlign: 'start',\n        textDecoration: 'none',\n        borderRadius: tourBorderRadius,\n        boxShadow: boxShadowTertiary,\n        position: 'relative',\n        backgroundColor: colorBgContainer,\n        border: 'none',\n        backgroundClip: 'padding-box',\n        [`${componentCls}-close`]: {\n          position: 'absolute',\n          top: padding,\n          insetInlineEnd: padding,\n          color: token.colorIcon,\n          outline: 'none',\n          width: tourCloseSize,\n          height: tourCloseSize,\n          borderRadius: token.borderRadiusSM,\n          transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '&:hover': {\n            color: token.colorIconHover,\n            backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n          }\n        },\n        [`${componentCls}-cover`]: {\n          textAlign: 'center',\n          padding: `${padding + tourCloseSize + paddingXS}px ${padding}px 0`,\n          img: {\n            width: '100%'\n          }\n        },\n        [`${componentCls}-header`]: {\n          padding: `${padding}px ${padding}px ${paddingXS}px`,\n          [`${componentCls}-title`]: {\n            lineHeight,\n            fontSize,\n            fontWeight: fontWeightStrong\n          }\n        },\n        [`${componentCls}-description`]: {\n          padding: `0 ${padding}px`,\n          lineHeight,\n          wordWrap: 'break-word'\n        },\n        [`${componentCls}-footer`]: {\n          padding: `${paddingXS}px ${padding}px ${padding}px`,\n          textAlign: 'end',\n          borderRadius: `0 0 ${borderRadiusXS}px ${borderRadiusXS}px`,\n          display: 'flex',\n          [`${componentCls}-indicators`]: {\n            display: 'inline-block',\n            [`${componentCls}-indicator`]: {\n              width: indicatorWidth,\n              height: indicatorHeight,\n              display: 'inline-block',\n              borderRadius: '50%',\n              background: colorFill,\n              '&:not(:last-child)': {\n                marginInlineEnd: indicatorHeight\n              },\n              '&-active': {\n                background: colorPrimary\n              }\n            }\n          },\n          [`${componentCls}-buttons`]: {\n            marginInlineStart: 'auto',\n            [`${antCls}-btn`]: {\n              marginInlineStart: marginXS\n            }\n          }\n        }\n      },\n      // =============================  primary type  ===========================\n      // `$` for panel, `&$` for pure panel\n      [`${componentCls}-primary, &${componentCls}-primary`]: {\n        '--antd-arrow-background-color': colorPrimary,\n        [`${componentCls}-inner`]: {\n          color: colorTextLightSolid,\n          textAlign: 'start',\n          textDecoration: 'none',\n          backgroundColor: colorPrimary,\n          borderRadius,\n          boxShadow: boxShadowTertiary,\n          [`${componentCls}-close`]: {\n            color: colorTextLightSolid\n          },\n          [`${componentCls}-indicators`]: {\n            [`${componentCls}-indicator`]: {\n              background: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              '&-active': {\n                background: colorTextLightSolid\n              }\n            }\n          },\n          [`${componentCls}-prev-btn`]: {\n            color: colorTextLightSolid,\n            borderColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n            backgroundColor: colorPrimary,\n            '&:hover': {\n              backgroundColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              borderColor: 'transparent'\n            }\n          },\n          [`${componentCls}-next-btn`]: {\n            color: colorPrimary,\n            borderColor: 'transparent',\n            background: colorWhite,\n            '&:hover': {\n              background: new TinyColor(colorBgTextHover).onBackground(colorWhite).toRgbString()\n            }\n          }\n        }\n      }\n    }),\n    // ============================= mask ===========================\n    [`${componentCls}-mask`]: {\n      [`${componentCls}-placeholder-animated`]: {\n        transition: `all ${motionDurationSlow}`\n      }\n    },\n    // =========== Limit left and right placement radius ==============\n    [['&-placement-left', '&-placement-leftTop', '&-placement-leftBottom', '&-placement-right', '&-placement-rightTop', '&-placement-rightBottom'].join(',')]: {\n      [`${componentCls}-inner`]: {\n        borderRadius: Math.min(tourBorderRadius, MAX_VERTICAL_CONTENT_RADIUS)\n      }\n    }\n  }, // ============================= Arrow ===========================\n  getArrowStyle(token, {\n    colorBg: 'var(--antd-arrow-background-color)',\n    contentRadius: tourBorderRadius,\n    limitVerticalRadius: true\n  })];\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Tour', token => {\n  const borderRadiusLG = token.borderRadiusLG,\n        fontSize = token.fontSize,\n        lineHeight = token.lineHeight;\n  const TourToken = mergeToken(token, {\n    tourZIndexPopup: token.zIndexPopupBase + 70,\n    indicatorWidth: 6,\n    indicatorHeight: 6,\n    tourBorderRadius: borderRadiusLG,\n    tourCloseSize: fontSize * lineHeight\n  });\n  return [genBaseStyle(TourToken)];\n});","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/tour/style/index.js"],"names":["TinyColor","resetComponent","getArrowStyle","MAX_VERTICAL_CONTENT_RADIUS","genComponentStyleHook","mergeToken","genBaseStyle","token","componentCls","lineHeight","padding","paddingXS","borderRadius","borderRadiusXS","colorPrimary","colorText","colorFill","indicatorHeight","indicatorWidth","boxShadowTertiary","tourZIndexPopup","fontSize","colorBgContainer","fontWeightStrong","marginXS","colorTextLightSolid","tourBorderRadius","colorWhite","colorBgTextHover","tourCloseSize","motionDurationSlow","antCls","Object","assign","color","position","zIndex","display","visibility","width","maxWidth","textAlign","textDecoration","boxShadow","backgroundColor","border","backgroundClip","top","insetInlineEnd","colorIcon","outline","height","borderRadiusSM","transition","motionDurationMid","alignItems","justifyContent","colorIconHover","wireframe","colorFillContent","img","fontWeight","wordWrap","background","marginInlineEnd","marginInlineStart","setAlpha","toRgbString","borderColor","onBackground","join","Math","min","colorBg","contentRadius","limitVerticalRadius","borderRadiusLG","TourToken","zIndexPopupBase"],"mappings":"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","sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    lineHeight,\n    padding,\n    paddingXS,\n    borderRadius,\n    borderRadiusXS,\n    colorPrimary,\n    colorText,\n    colorFill,\n    indicatorHeight,\n    indicatorWidth,\n    boxShadowTertiary,\n    tourZIndexPopup,\n    fontSize,\n    colorBgContainer,\n    fontWeightStrong,\n    marginXS,\n    colorTextLightSolid,\n    tourBorderRadius,\n    colorWhite,\n    colorBgTextHover,\n    tourCloseSize,\n    motionDurationSlow,\n    antCls\n  } = token;\n  return [{\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      color: colorText,\n      position: 'absolute',\n      zIndex: tourZIndexPopup,\n      display: 'block',\n      visibility: 'visible',\n      fontSize,\n      lineHeight,\n      width: 520,\n      '--antd-arrow-background-color': colorBgContainer,\n      '&-pure': {\n        maxWidth: '100%',\n        position: 'relative'\n      },\n      [`&${componentCls}-hidden`]: {\n        display: 'none'\n      },\n      // ============================= panel content ============================\n      [`${componentCls}-content`]: {\n        position: 'relative'\n      },\n      [`${componentCls}-inner`]: {\n        textAlign: 'start',\n        textDecoration: 'none',\n        borderRadius: tourBorderRadius,\n        boxShadow: boxShadowTertiary,\n        position: 'relative',\n        backgroundColor: colorBgContainer,\n        border: 'none',\n        backgroundClip: 'padding-box',\n        [`${componentCls}-close`]: {\n          position: 'absolute',\n          top: padding,\n          insetInlineEnd: padding,\n          color: token.colorIcon,\n          outline: 'none',\n          width: tourCloseSize,\n          height: tourCloseSize,\n          borderRadius: token.borderRadiusSM,\n          transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '&:hover': {\n            color: token.colorIconHover,\n            backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n          }\n        },\n        [`${componentCls}-cover`]: {\n          textAlign: 'center',\n          padding: `${padding + tourCloseSize + paddingXS}px ${padding}px 0`,\n          img: {\n            width: '100%'\n          }\n        },\n        [`${componentCls}-header`]: {\n          padding: `${padding}px ${padding}px ${paddingXS}px`,\n          [`${componentCls}-title`]: {\n            lineHeight,\n            fontSize,\n            fontWeight: fontWeightStrong\n          }\n        },\n        [`${componentCls}-description`]: {\n          padding: `0 ${padding}px`,\n          lineHeight,\n          wordWrap: 'break-word'\n        },\n        [`${componentCls}-footer`]: {\n          padding: `${paddingXS}px ${padding}px ${padding}px`,\n          textAlign: 'end',\n          borderRadius: `0 0 ${borderRadiusXS}px ${borderRadiusXS}px`,\n          display: 'flex',\n          [`${componentCls}-indicators`]: {\n            display: 'inline-block',\n            [`${componentCls}-indicator`]: {\n              width: indicatorWidth,\n              height: indicatorHeight,\n              display: 'inline-block',\n              borderRadius: '50%',\n              background: colorFill,\n              '&:not(:last-child)': {\n                marginInlineEnd: indicatorHeight\n              },\n              '&-active': {\n                background: colorPrimary\n              }\n            }\n          },\n          [`${componentCls}-buttons`]: {\n            marginInlineStart: 'auto',\n            [`${antCls}-btn`]: {\n              marginInlineStart: marginXS\n            }\n          }\n        }\n      },\n      // =============================  primary type  ===========================\n      // `$` for panel, `&$` for pure panel\n      [`${componentCls}-primary, &${componentCls}-primary`]: {\n        '--antd-arrow-background-color': colorPrimary,\n        [`${componentCls}-inner`]: {\n          color: colorTextLightSolid,\n          textAlign: 'start',\n          textDecoration: 'none',\n          backgroundColor: colorPrimary,\n          borderRadius,\n          boxShadow: boxShadowTertiary,\n          [`${componentCls}-close`]: {\n            color: colorTextLightSolid\n          },\n          [`${componentCls}-indicators`]: {\n            [`${componentCls}-indicator`]: {\n              background: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              '&-active': {\n                background: colorTextLightSolid\n              }\n            }\n          },\n          [`${componentCls}-prev-btn`]: {\n            color: colorTextLightSolid,\n            borderColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n            backgroundColor: colorPrimary,\n            '&:hover': {\n              backgroundColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              borderColor: 'transparent'\n            }\n          },\n          [`${componentCls}-next-btn`]: {\n            color: colorPrimary,\n            borderColor: 'transparent',\n            background: colorWhite,\n            '&:hover': {\n              background: new TinyColor(colorBgTextHover).onBackground(colorWhite).toRgbString()\n            }\n          }\n        }\n      }\n    }),\n    // ============================= mask ===========================\n    [`${componentCls}-mask`]: {\n      [`${componentCls}-placeholder-animated`]: {\n        transition: `all ${motionDurationSlow}`\n      }\n    },\n    // =========== Limit left and right placement radius ==============\n    [['&-placement-left', '&-placement-leftTop', '&-placement-leftBottom', '&-placement-right', '&-placement-rightTop', '&-placement-rightBottom'].join(',')]: {\n      [`${componentCls}-inner`]: {\n        borderRadius: Math.min(tourBorderRadius, MAX_VERTICAL_CONTENT_RADIUS)\n      }\n    }\n  },\n  // ============================= Arrow ===========================\n  getArrowStyle(token, {\n    colorBg: 'var(--antd-arrow-background-color)',\n    contentRadius: tourBorderRadius,\n    limitVerticalRadius: true\n  })];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tour', token => {\n  const {\n    borderRadiusLG,\n    fontSize,\n    lineHeight\n  } = token;\n  const TourToken = mergeToken(token, {\n    tourZIndexPopup: token.zIndexPopupBase + 70,\n    indicatorWidth: 6,\n    indicatorHeight: 6,\n    tourBorderRadius: borderRadiusLG,\n    tourCloseSize: fontSize * lineHeight\n  });\n  return [genBaseStyle(TourToken)];\n});"]},"metadata":{},"sourceType":"module"}