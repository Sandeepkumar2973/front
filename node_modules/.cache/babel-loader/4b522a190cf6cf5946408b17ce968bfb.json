{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { ReloadOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport { QRCodeCanvas, QRCodeSVG } from 'qrcode.react';\nimport React, { useContext } from 'react';\nimport warning from '../_util/warning';\nimport Button from '../button';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport Spin from '../spin';\nimport theme from '../theme';\nimport useStyle from './style/index';\nvar useToken = theme.useToken;\n\nvar QRCode = function QRCode(props) {\n  var value = props.value,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'canvas' : _props$type,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? '' : _props$icon,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 160 : _props$size,\n      _props$iconSize = props.iconSize,\n      iconSize = _props$iconSize === void 0 ? 40 : _props$iconSize,\n      _props$color = props.color,\n      color = _props$color === void 0 ? '#000' : _props$color,\n      _props$errorLevel = props.errorLevel,\n      errorLevel = _props$errorLevel === void 0 ? 'M' : _props$errorLevel,\n      _props$status = props.status,\n      status = _props$status === void 0 ? 'active' : _props$status,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      onRefresh = props.onRefresh,\n      style = props.style,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      customizePrefixCls = props.prefixCls,\n      _props$bgColor = props.bgColor,\n      bgColor = _props$bgColor === void 0 ? 'transparent' : _props$bgColor;\n\n  var _useContext = useContext(ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token;\n\n  var imageSettings = {\n    src: icon,\n    x: undefined,\n    y: undefined,\n    height: iconSize,\n    width: iconSize,\n    excavate: true\n  };\n  var qrCodeProps = {\n    value: value,\n    size: size - (token.paddingSM + token.lineWidth) * 2,\n    level: errorLevel,\n    bgColor: bgColor,\n    fgColor: color,\n    imageSettings: icon ? imageSettings : undefined\n  };\n\n  var _useLocale = useLocale('QRCode'),\n      _useLocale2 = _slicedToArray(_useLocale, 1),\n      locale = _useLocale2[0];\n\n  if (!value) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'QRCode', 'need to receive `value` props') : void 0;\n    }\n\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n\n  var cls = classNames(prefixCls, className, rootClassName, hashId, _defineProperty({}, \"\".concat(prefixCls, \"-borderless\"), !bordered));\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size,\n      backgroundColor: bgColor\n    }),\n    className: cls\n  }, status !== 'active' &&\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-mask\")\n  }, status === 'loading' &&\n  /*#__PURE__*/\n  React.createElement(Spin, null), status === 'expired' &&\n  /*#__PURE__*/\n  React.createElement(React.Fragment, null,\n  /*#__PURE__*/\n  React.createElement(\"p\", {\n    className: \"\".concat(prefixCls, \"-expired\")\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh &&\n  /*#__PURE__*/\n  React.createElement(Button, {\n    type: \"link\",\n    icon:\n    /*#__PURE__*/\n    React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh))), type === 'canvas' ?\n  /*#__PURE__*/\n  React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps)) :\n  /*#__PURE__*/\n  React.createElement(QRCodeSVG, Object.assign({}, qrCodeProps))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\n\nexport default QRCode;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/qrcode/index.js"],"names":["ReloadOutlined","classNames","QRCodeCanvas","QRCodeSVG","React","useContext","warning","Button","ConfigContext","useLocale","Spin","theme","useStyle","useToken","QRCode","props","value","type","icon","size","iconSize","color","errorLevel","status","bordered","onRefresh","style","className","rootClassName","customizePrefixCls","prefixCls","bgColor","getPrefixCls","wrapSSR","hashId","token","imageSettings","src","x","undefined","y","height","width","excavate","qrCodeProps","paddingSM","lineWidth","level","fgColor","locale","process","env","NODE_ENV","cls","createElement","Object","assign","backgroundColor","Fragment","expired","onClick","refresh","displayName"],"mappings":"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","sourcesContent":["import { ReloadOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport { QRCodeCanvas, QRCodeSVG } from 'qrcode.react';\nimport React, { useContext } from 'react';\nimport warning from '../_util/warning';\nimport Button from '../button';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport Spin from '../spin';\nimport theme from '../theme';\nimport useStyle from './style/index';\nconst {\n  useToken\n} = theme;\nconst QRCode = props => {\n  const {\n    value,\n    type = 'canvas',\n    icon = '',\n    size = 160,\n    iconSize = 40,\n    color = '#000',\n    errorLevel = 'M',\n    status = 'active',\n    bordered = true,\n    onRefresh,\n    style,\n    className,\n    rootClassName,\n    prefixCls: customizePrefixCls,\n    bgColor = 'transparent'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const {\n    token\n  } = useToken();\n  const imageSettings = {\n    src: icon,\n    x: undefined,\n    y: undefined,\n    height: iconSize,\n    width: iconSize,\n    excavate: true\n  };\n  const qrCodeProps = {\n    value,\n    size: size - (token.paddingSM + token.lineWidth) * 2,\n    level: errorLevel,\n    bgColor,\n    fgColor: color,\n    imageSettings: icon ? imageSettings : undefined\n  };\n  const [locale] = useLocale('QRCode');\n  if (!value) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'QRCode', 'need to receive `value` props') : void 0;\n    }\n    return null;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n  const cls = classNames(prefixCls, className, rootClassName, hashId, {\n    [`${prefixCls}-borderless`]: !bordered\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size,\n      backgroundColor: bgColor\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-mask`\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh))), type === 'canvas' ? /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps)) : /*#__PURE__*/React.createElement(QRCodeSVG, Object.assign({}, qrCodeProps))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\nexport default QRCode;"]},"metadata":{},"sourceType":"module"}