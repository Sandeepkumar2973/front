{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\n\nconst SkeletonButton = props => {\n  const customizePrefixCls = props.prefixCls,\n        className = props.className,\n        rootClassName = props.rootClassName,\n        active = props.active,\n        _props$block = props.block,\n        block = _props$block === void 0 ? false : _props$block,\n        _props$size = props.size,\n        size = _props$size === void 0 ? 'default' : _props$size;\n\n  const _React$useContext = React.useContext(ConfigContext),\n        getPrefixCls = _React$useContext.getPrefixCls;\n\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n  const _useStyle = useStyle(prefixCls),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1];\n\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: cls\n  },\n  /*#__PURE__*/\n  React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\n\nexport default SkeletonButton;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/skeleton/Button.js"],"names":["classNames","omit","React","ConfigContext","Element","useStyle","SkeletonButton","props","customizePrefixCls","prefixCls","className","rootClassName","active","block","size","useContext","getPrefixCls","wrapSSR","hashId","otherProps","cls","createElement","Object","assign"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AACA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA,QAEjBC,kBAFiB,GAQ1BD,KAR0B,CAE5BE,SAF4B;AAAA,QAG5BC,SAH4B,GAQ1BH,KAR0B,CAG5BG,SAH4B;AAAA,QAI5BC,aAJ4B,GAQ1BJ,KAR0B,CAI5BI,aAJ4B;AAAA,QAK5BC,MAL4B,GAQ1BL,KAR0B,CAK5BK,MAL4B;AAAA,uBAQ1BL,KAR0B,CAM5BM,KAN4B;AAAA,QAM5BA,KAN4B,6BAMpB,KANoB;AAAA,sBAQ1BN,KAR0B,CAO5BO,IAP4B;AAAA,QAO5BA,IAP4B,4BAOrB,SAPqB;;AAAA,4BAW1BZ,KAAK,CAACa,UAAN,CAAiBZ,aAAjB,CAX0B;AAAA,QAU5Ba,YAV4B,qBAU5BA,YAV4B;;AAY9B,QAAMP,SAAS,GAAGO,YAAY,CAAC,UAAD,EAAaR,kBAAb,CAA9B;;AAZ8B,oBAaJH,QAAQ,CAACI,SAAD,CAbJ;AAAA;AAAA,QAavBQ,OAbuB;AAAA,QAadC,MAbc;;AAc9B,QAAMC,UAAU,GAAGlB,IAAI,CAACM,KAAD,EAAQ,CAAC,WAAD,CAAR,CAAvB;AACA,QAAMa,GAAG,GAAGpB,UAAU,CAACS,SAAD,EAAa,GAAEA,SAAU,UAAzB,EAAoC;AACxD,KAAE,GAAEA,SAAU,SAAd,GAAyBG,MAD+B;AAExD,KAAE,GAAEH,SAAU,QAAd,GAAwBI;AAFgC,GAApC,EAGnBH,SAHmB,EAGRC,aAHQ,EAGOO,MAHP,CAAtB;AAIA,SAAOD,OAAO;AAAE;AAAaf,EAAAA,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACtDX,IAAAA,SAAS,EAAEU;AAD2C,GAA3B;AAE1B;AAAalB,EAAAA,KAAK,CAACmB,aAAN,CAAoBjB,OAApB,EAA6BkB,MAAM,CAACC,MAAP,CAAc;AACzDd,IAAAA,SAAS,EAAG,GAAEA,SAAU,SADiC;AAEzDK,IAAAA,IAAI,EAAEA;AAFmD,GAAd,EAG1CK,UAH0C,CAA7B,CAFa,CAAf,CAAd;AAMD,CAzBD;;AA0BA,eAAeb,cAAf","sourcesContent":["import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonButton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block = false,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonButton;"]},"metadata":{},"sourceType":"module"}