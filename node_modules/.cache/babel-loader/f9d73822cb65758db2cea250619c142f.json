{"ast":null,"code":"import classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\n\nconst SubMenu = props => {\n  var _a;\n\n  const popupClassName = props.popupClassName,\n        icon = props.icon,\n        title = props.title,\n        customTheme = props.theme;\n  const context = React.useContext(MenuContext);\n  const prefixCls = context.prefixCls,\n        inlineCollapsed = context.inlineCollapsed,\n        contextTheme = context.theme;\n  const parentPath = useFullPath();\n  let titleNode;\n\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ?\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: `${prefixCls}-inline-collapsed-noicon`\n    }, title.charAt(0)) :\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    const titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode =\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', `${prefixCls}-item-icon`)\n    }), titleIsSpan ? title :\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title));\n  }\n\n  const contextValue = React.useMemo(() => Object.assign(Object.assign({}, context), {\n    firstLevel: false\n  }), [context]);\n  return (\n    /*#__PURE__*/\n    React.createElement(MenuContext.Provider, {\n      value: contextValue\n    },\n    /*#__PURE__*/\n    React.createElement(RcSubMenu, Object.assign({}, omit(props, ['icon']), {\n      title: titleNode,\n      popupClassName: classNames(prefixCls, popupClassName, `${prefixCls}-${customTheme || contextTheme}`)\n    })))\n  );\n};\n\nexport default SubMenu;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/menu/SubMenu.js"],"names":["classNames","SubMenu","RcSubMenu","useFullPath","omit","React","cloneElement","isValidElement","MenuContext","props","_a","popupClassName","icon","title","customTheme","theme","context","useContext","prefixCls","inlineCollapsed","contextTheme","parentPath","titleNode","length","createElement","className","charAt","titleIsSpan","type","Fragment","contextValue","useMemo","Object","assign","firstLevel","Provider","value"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\nconst SubMenu = props => {\n  var _a;\n  const {\n    popupClassName,\n    icon,\n    title,\n    theme: customTheme\n  } = props;\n  const context = React.useContext(MenuContext);\n  const {\n    prefixCls,\n    inlineCollapsed,\n    theme: contextTheme\n  } = context;\n  const parentPath = useFullPath();\n  let titleNode;\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-inline-collapsed-noicon`\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    const titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', `${prefixCls}-item-icon`)\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title));\n  }\n  const contextValue = React.useMemo(() => Object.assign(Object.assign({}, context), {\n    firstLevel: false\n  }), [context]);\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, Object.assign({}, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, popupClassName, `${prefixCls}-${customTheme || contextTheme}`)\n  })));\n};\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}