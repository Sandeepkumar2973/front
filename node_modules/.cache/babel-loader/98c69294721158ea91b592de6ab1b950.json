{"ast":null,"code":"import CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport SearchOutlined from \"@ant-design/icons/es/icons/SearchOutlined\";\nimport * as React from 'react';\nexport default function getIcons(_ref) {\n  var suffixIcon = _ref.suffixIcon,\n      clearIcon = _ref.clearIcon,\n      menuItemSelectedIcon = _ref.menuItemSelectedIcon,\n      removeIcon = _ref.removeIcon,\n      loading = _ref.loading,\n      multiple = _ref.multiple,\n      hasFeedback = _ref.hasFeedback,\n      prefixCls = _ref.prefixCls,\n      showArrow = _ref.showArrow,\n      feedbackIcon = _ref.feedbackIcon; // Clear Icon\n\n  var mergedClearIcon = clearIcon !== null && clearIcon !== void 0 ? clearIcon :\n  /*#__PURE__*/\n  React.createElement(CloseCircleFilled, null); // Validation Feedback Icon\n\n  var getSuffixIconNode = function getSuffixIconNode(arrowIcon) {\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null, showArrow !== false && arrowIcon, hasFeedback && feedbackIcon)\n    );\n  }; // Arrow item icon\n\n\n  var mergedSuffixIcon = null;\n\n  if (suffixIcon !== undefined) {\n    mergedSuffixIcon = getSuffixIconNode(suffixIcon);\n  } else if (loading) {\n    mergedSuffixIcon = getSuffixIconNode(\n    /*#__PURE__*/\n    React.createElement(LoadingOutlined, {\n      spin: true\n    }));\n  } else {\n    var iconCls = \"\".concat(prefixCls, \"-suffix\");\n\n    mergedSuffixIcon = function mergedSuffixIcon(_ref2) {\n      var open = _ref2.open,\n          showSearch = _ref2.showSearch;\n\n      if (open && showSearch) {\n        return getSuffixIconNode(\n        /*#__PURE__*/\n        React.createElement(SearchOutlined, {\n          className: iconCls\n        }));\n      }\n\n      return getSuffixIconNode(\n      /*#__PURE__*/\n      React.createElement(DownOutlined, {\n        className: iconCls\n      }));\n    };\n  } // Checked item icon\n\n\n  var mergedItemIcon = null;\n\n  if (menuItemSelectedIcon !== undefined) {\n    mergedItemIcon = menuItemSelectedIcon;\n  } else if (multiple) {\n    mergedItemIcon =\n    /*#__PURE__*/\n    React.createElement(CheckOutlined, null);\n  } else {\n    mergedItemIcon = null;\n  }\n\n  var mergedRemoveIcon = null;\n\n  if (removeIcon !== undefined) {\n    mergedRemoveIcon = removeIcon;\n  } else {\n    mergedRemoveIcon =\n    /*#__PURE__*/\n    React.createElement(CloseOutlined, null);\n  }\n\n  return {\n    clearIcon: mergedClearIcon,\n    suffixIcon: mergedSuffixIcon,\n    itemIcon: mergedItemIcon,\n    removeIcon: mergedRemoveIcon\n  };\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/select/utils/iconUtil.js"],"names":["CheckOutlined","CloseCircleFilled","CloseOutlined","DownOutlined","LoadingOutlined","SearchOutlined","React","getIcons","_ref","suffixIcon","clearIcon","menuItemSelectedIcon","removeIcon","loading","multiple","hasFeedback","prefixCls","showArrow","feedbackIcon","mergedClearIcon","createElement","getSuffixIconNode","arrowIcon","Fragment","mergedSuffixIcon","undefined","spin","iconCls","_ref2","open","showSearch","className","mergedItemIcon","mergedRemoveIcon","itemIcon"],"mappings":"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","sourcesContent":["import CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport SearchOutlined from \"@ant-design/icons/es/icons/SearchOutlined\";\nimport * as React from 'react';\nexport default function getIcons(_ref) {\n  let {\n    suffixIcon,\n    clearIcon,\n    menuItemSelectedIcon,\n    removeIcon,\n    loading,\n    multiple,\n    hasFeedback,\n    prefixCls,\n    showArrow,\n    feedbackIcon\n  } = _ref;\n  // Clear Icon\n  const mergedClearIcon = clearIcon !== null && clearIcon !== void 0 ? clearIcon : /*#__PURE__*/React.createElement(CloseCircleFilled, null);\n  // Validation Feedback Icon\n  const getSuffixIconNode = arrowIcon => /*#__PURE__*/React.createElement(React.Fragment, null, showArrow !== false && arrowIcon, hasFeedback && feedbackIcon);\n  // Arrow item icon\n  let mergedSuffixIcon = null;\n  if (suffixIcon !== undefined) {\n    mergedSuffixIcon = getSuffixIconNode(suffixIcon);\n  } else if (loading) {\n    mergedSuffixIcon = getSuffixIconNode( /*#__PURE__*/React.createElement(LoadingOutlined, {\n      spin: true\n    }));\n  } else {\n    const iconCls = `${prefixCls}-suffix`;\n    mergedSuffixIcon = _ref2 => {\n      let {\n        open,\n        showSearch\n      } = _ref2;\n      if (open && showSearch) {\n        return getSuffixIconNode( /*#__PURE__*/React.createElement(SearchOutlined, {\n          className: iconCls\n        }));\n      }\n      return getSuffixIconNode( /*#__PURE__*/React.createElement(DownOutlined, {\n        className: iconCls\n      }));\n    };\n  }\n  // Checked item icon\n  let mergedItemIcon = null;\n  if (menuItemSelectedIcon !== undefined) {\n    mergedItemIcon = menuItemSelectedIcon;\n  } else if (multiple) {\n    mergedItemIcon = /*#__PURE__*/React.createElement(CheckOutlined, null);\n  } else {\n    mergedItemIcon = null;\n  }\n  let mergedRemoveIcon = null;\n  if (removeIcon !== undefined) {\n    mergedRemoveIcon = removeIcon;\n  } else {\n    mergedRemoveIcon = /*#__PURE__*/React.createElement(CloseOutlined, null);\n  }\n  return {\n    clearIcon: mergedClearIcon,\n    suffixIcon: mergedSuffixIcon,\n    itemIcon: mergedItemIcon,\n    removeIcon: mergedRemoveIcon\n  };\n}"]},"metadata":{},"sourceType":"module"}