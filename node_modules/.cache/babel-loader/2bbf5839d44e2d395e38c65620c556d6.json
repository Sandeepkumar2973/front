{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { useLayoutEffect } from 'react';\n/**\n * returns the merged type of a step or the default type.\n */\n\nconst useMergedType = _ref => {\n  let defaultType = _ref.defaultType,\n      _ref$steps = _ref.steps,\n      steps = _ref$steps === void 0 ? [] : _ref$steps,\n      current = _ref.current,\n      defaultCurrent = _ref.defaultCurrent;\n\n  var _a;\n\n  const _useMergedState = useMergedState(defaultCurrent, {\n    value: current\n  }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        innerCurrent = _useMergedState2[0],\n        updateInnerCurrent = _useMergedState2[1];\n\n  useLayoutEffect(() => {\n    if (current === undefined) return;\n    updateInnerCurrent(current);\n  }, [current]);\n  const innerType = typeof innerCurrent === 'number' ? (_a = steps[innerCurrent]) === null || _a === void 0 ? void 0 : _a.type : defaultType;\n  const currentMergedType = innerType !== null && innerType !== void 0 ? innerType : defaultType;\n  return {\n    currentMergedType,\n    updateInnerCurrent\n  };\n};\n\nexport default useMergedType;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/tour/useMergedType.js"],"names":["useMergedState","useLayoutEffect","useMergedType","_ref","defaultType","steps","current","defaultCurrent","_a","value","innerCurrent","updateInnerCurrent","undefined","innerType","type","currentMergedType"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA;;;;AAGA,MAAMC,aAAa,GAAGC,IAAI,IAAI;AAAA,MAE1BC,WAF0B,GAMxBD,IANwB,CAE1BC,WAF0B;AAAA,mBAMxBD,IANwB,CAG1BE,KAH0B;AAAA,MAG1BA,KAH0B,2BAGlB,EAHkB;AAAA,MAI1BC,OAJ0B,GAMxBH,IANwB,CAI1BG,OAJ0B;AAAA,MAK1BC,cAL0B,GAMxBJ,IANwB,CAK1BI,cAL0B;;AAO5B,MAAIC,EAAJ;;AAP4B,0BAQeR,cAAc,CAACO,cAAD,EAAiB;AACxEE,IAAAA,KAAK,EAAEH;AADiE,GAAjB,CAR7B;AAAA;AAAA,QAQrBI,YARqB;AAAA,QAQPC,kBARO;;AAW5BV,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIK,OAAO,KAAKM,SAAhB,EAA2B;AAC3BD,IAAAA,kBAAkB,CAACL,OAAD,CAAlB;AACD,GAHc,EAGZ,CAACA,OAAD,CAHY,CAAf;AAIA,QAAMO,SAAS,GAAG,OAAOH,YAAP,KAAwB,QAAxB,GAAmC,CAACF,EAAE,GAAGH,KAAK,CAACK,YAAD,CAAX,MAA+B,IAA/B,IAAuCF,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACM,IAAtG,GAA6GV,WAA/H;AACA,QAAMW,iBAAiB,GAAGF,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6CA,SAA7C,GAAyDT,WAAnF;AACA,SAAO;AACLW,IAAAA,iBADK;AAELJ,IAAAA;AAFK,GAAP;AAID,CArBD;;AAsBA,eAAeT,aAAf","sourcesContent":["import useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { useLayoutEffect } from 'react';\n/**\n * returns the merged type of a step or the default type.\n */\nconst useMergedType = _ref => {\n  let {\n    defaultType,\n    steps = [],\n    current,\n    defaultCurrent\n  } = _ref;\n  var _a;\n  const [innerCurrent, updateInnerCurrent] = useMergedState(defaultCurrent, {\n    value: current\n  });\n  useLayoutEffect(() => {\n    if (current === undefined) return;\n    updateInnerCurrent(current);\n  }, [current]);\n  const innerType = typeof innerCurrent === 'number' ? (_a = steps[innerCurrent]) === null || _a === void 0 ? void 0 : _a.type : defaultType;\n  const currentMergedType = innerType !== null && innerType !== void 0 ? innerType : defaultType;\n  return {\n    currentMergedType,\n    updateInnerCurrent\n  };\n};\nexport default useMergedType;"]},"metadata":{},"sourceType":"module"}