{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Input from '../../input';\nimport { generateColor, toHexFormat } from '../util';\nconst hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\n\nconst isHexString = hex => hexReg.test(`#${hex}`);\n\nconst ColorHexInput = _ref => {\n  let prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      onChange = _ref.onChange;\n  const colorHexInputPrefixCls = `${prefixCls}-hex-input`;\n\n  const _useState = useState(value === null || value === void 0 ? void 0 : value.toHex()),\n        _useState2 = _slicedToArray(_useState, 2),\n        hexValue = _useState2[0],\n        setHexValue = _useState2[1]; // Update step value\n\n\n  useEffect(() => {\n    const hex = value === null || value === void 0 ? void 0 : value.toHex();\n\n    if (isHexString(hex) && value) {\n      setHexValue(toHexFormat(hex));\n    }\n  }, [value]);\n\n  const handleHexChange = e => {\n    const originValue = e.target.value;\n    setHexValue(toHexFormat(originValue));\n\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Input, {\n      className: colorHexInputPrefixCls,\n      value: hexValue === null || hexValue === void 0 ? void 0 : hexValue.toUpperCase(),\n      prefix: \"#\",\n      onChange: handleHexChange,\n      size: \"small\"\n    })\n  );\n};\n\nexport default ColorHexInput;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/color-picker/components/ColorHexInput.js"],"names":["React","useEffect","useState","Input","generateColor","toHexFormat","hexReg","isHexString","hex","test","ColorHexInput","_ref","prefixCls","value","onChange","colorHexInputPrefixCls","toHex","hexValue","setHexValue","handleHexChange","e","originValue","target","createElement","className","toUpperCase","prefix","size"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,MAAMC,MAAM,GAAG,kCAAf;;AACA,MAAMC,WAAW,GAAGC,GAAG,IAAIF,MAAM,CAACG,IAAP,CAAa,IAAGD,GAAI,EAApB,CAA3B;;AACA,MAAME,aAAa,GAAGC,IAAI,IAAI;AAAA,MAE1BC,SAF0B,GAKxBD,IALwB,CAE1BC,SAF0B;AAAA,MAG1BC,KAH0B,GAKxBF,IALwB,CAG1BE,KAH0B;AAAA,MAI1BC,QAJ0B,GAKxBH,IALwB,CAI1BG,QAJ0B;AAM5B,QAAMC,sBAAsB,GAAI,GAAEH,SAAU,YAA5C;;AAN4B,oBAOIV,QAAQ,CAACW,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACG,KAAN,EAA/C,CAPZ;AAAA;AAAA,QAOrBC,QAPqB;AAAA,QAOXC,WAPW,kBAQ5B;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,GAAG,GAAGK,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACG,KAAN,EAA1D;;AACA,QAAIT,WAAW,CAACC,GAAD,CAAX,IAAoBK,KAAxB,EAA+B;AAC7BK,MAAAA,WAAW,CAACb,WAAW,CAACG,GAAD,CAAZ,CAAX;AACD;AACF,GALQ,EAKN,CAACK,KAAD,CALM,CAAT;;AAMA,QAAMM,eAAe,GAAGC,CAAC,IAAI;AAC3B,UAAMC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAAST,KAA7B;AACAK,IAAAA,WAAW,CAACb,WAAW,CAACgB,WAAD,CAAZ,CAAX;;AACA,QAAId,WAAW,CAACF,WAAW,CAACgB,WAAD,EAAc,IAAd,CAAZ,CAAf,EAAiD;AAC/CP,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACV,aAAa,CAACiB,WAAD,CAAd,CAA5D;AACD;AACF,GAND;;AAOA;AAAO;AAAarB,IAAAA,KAAK,CAACuB,aAAN,CAAoBpB,KAApB,EAA2B;AAC7CqB,MAAAA,SAAS,EAAET,sBADkC;AAE7CF,MAAAA,KAAK,EAAEI,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACQ,WAAT,EAFd;AAG7CC,MAAAA,MAAM,EAAE,GAHqC;AAI7CZ,MAAAA,QAAQ,EAAEK,eAJmC;AAK7CQ,MAAAA,IAAI,EAAE;AALuC,KAA3B;AAApB;AAOD,CA7BD;;AA8BA,eAAejB,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Input from '../../input';\nimport { generateColor, toHexFormat } from '../util';\nconst hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\nconst isHexString = hex => hexReg.test(`#${hex}`);\nconst ColorHexInput = _ref => {\n  let {\n    prefixCls,\n    value,\n    onChange\n  } = _ref;\n  const colorHexInputPrefixCls = `${prefixCls}-hex-input`;\n  const [hexValue, setHexValue] = useState(value === null || value === void 0 ? void 0 : value.toHex());\n  // Update step value\n  useEffect(() => {\n    const hex = value === null || value === void 0 ? void 0 : value.toHex();\n    if (isHexString(hex) && value) {\n      setHexValue(toHexFormat(hex));\n    }\n  }, [value]);\n  const handleHexChange = e => {\n    const originValue = e.target.value;\n    setHexValue(toHexFormat(originValue));\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue === null || hexValue === void 0 ? void 0 : hexValue.toUpperCase(),\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\nexport default ColorHexInput;"]},"metadata":{},"sourceType":"module"}