{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { Button, Group } from '../radio';\nimport Select from '../select';\nconst YearSelectOffset = 10;\nconst YearSelectTotal = 20;\n\nfunction YearSelect(props) {\n  const fullscreen = props.fullscreen,\n        validRange = props.validRange,\n        generateConfig = props.generateConfig,\n        locale = props.locale,\n        prefixCls = props.prefixCls,\n        value = props.value,\n        onChange = props.onChange,\n        divRef = props.divRef;\n  const year = generateConfig.getYear(value || generateConfig.getNow());\n  let start = year - YearSelectOffset;\n  let end = start + YearSelectTotal;\n\n  if (validRange) {\n    start = generateConfig.getYear(validRange[0]);\n    end = generateConfig.getYear(validRange[1]) + 1;\n  }\n\n  const suffix = locale && locale.year === '年' ? '年' : '';\n  const options = [];\n\n  for (let index = start; index < end; index++) {\n    options.push({\n      label: `${index}${suffix}`,\n      value: index\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Select, {\n      size: fullscreen ? undefined : 'small',\n      options: options,\n      value: year,\n      className: `${prefixCls}-year-select`,\n      onChange: numYear => {\n        let newDate = generateConfig.setYear(value, numYear);\n\n        if (validRange) {\n          const _validRange = _slicedToArray(validRange, 2),\n                startDate = _validRange[0],\n                endDate = _validRange[1];\n\n          const newYear = generateConfig.getYear(newDate);\n          const newMonth = generateConfig.getMonth(newDate);\n\n          if (newYear === generateConfig.getYear(endDate) && newMonth > generateConfig.getMonth(endDate)) {\n            newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n          }\n\n          if (newYear === generateConfig.getYear(startDate) && newMonth < generateConfig.getMonth(startDate)) {\n            newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n          }\n        }\n\n        onChange(newDate);\n      },\n      getPopupContainer: () => divRef.current\n    })\n  );\n}\n\nfunction MonthSelect(props) {\n  const prefixCls = props.prefixCls,\n        fullscreen = props.fullscreen,\n        validRange = props.validRange,\n        value = props.value,\n        generateConfig = props.generateConfig,\n        locale = props.locale,\n        onChange = props.onChange,\n        divRef = props.divRef;\n  const month = generateConfig.getMonth(value || generateConfig.getNow());\n  let start = 0;\n  let end = 11;\n\n  if (validRange) {\n    const _validRange2 = _slicedToArray(validRange, 2),\n          rangeStart = _validRange2[0],\n          rangeEnd = _validRange2[1];\n\n    const currentYear = generateConfig.getYear(value);\n\n    if (generateConfig.getYear(rangeEnd) === currentYear) {\n      end = generateConfig.getMonth(rangeEnd);\n    }\n\n    if (generateConfig.getYear(rangeStart) === currentYear) {\n      start = generateConfig.getMonth(rangeStart);\n    }\n  }\n\n  const months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n  const options = [];\n\n  for (let index = start; index <= end; index += 1) {\n    options.push({\n      label: months[index],\n      value: index\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Select, {\n      size: fullscreen ? undefined : 'small',\n      className: `${prefixCls}-month-select`,\n      value: month,\n      options: options,\n      onChange: newMonth => {\n        onChange(generateConfig.setMonth(value, newMonth));\n      },\n      getPopupContainer: () => divRef.current\n    })\n  );\n}\n\nfunction ModeSwitch(props) {\n  const prefixCls = props.prefixCls,\n        locale = props.locale,\n        mode = props.mode,\n        fullscreen = props.fullscreen,\n        onModeChange = props.onModeChange;\n  return (\n    /*#__PURE__*/\n    React.createElement(Group, {\n      onChange: _ref => {\n        let value = _ref.target.value;\n        onModeChange(value);\n      },\n      value: mode,\n      size: fullscreen ? undefined : 'small',\n      className: `${prefixCls}-mode-switch`\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      value: \"month\"\n    }, locale.month),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      value: \"year\"\n    }, locale.year))\n  );\n}\n\nfunction CalendarHeader(props) {\n  const prefixCls = props.prefixCls,\n        fullscreen = props.fullscreen,\n        mode = props.mode,\n        onChange = props.onChange,\n        onModeChange = props.onModeChange;\n  const divRef = React.useRef(null);\n  const formItemInputContext = useContext(FormItemInputContext);\n  const mergedFormItemInputContext = useMemo(() => Object.assign(Object.assign({}, formItemInputContext), {\n    isFormItemInput: false\n  }), [formItemInputContext]);\n  const sharedProps = Object.assign(Object.assign({}, props), {\n    fullscreen,\n    divRef\n  });\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: `${prefixCls}-header`,\n      ref: divRef\n    },\n    /*#__PURE__*/\n    React.createElement(FormItemInputContext.Provider, {\n      value: mergedFormItemInputContext\n    },\n    /*#__PURE__*/\n    React.createElement(YearSelect, Object.assign({}, sharedProps, {\n      onChange: v => {\n        onChange(v, 'year');\n      }\n    })), mode === 'month' &&\n    /*#__PURE__*/\n    React.createElement(MonthSelect, Object.assign({}, sharedProps, {\n      onChange: v => {\n        onChange(v, 'month');\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(ModeSwitch, Object.assign({}, sharedProps, {\n      onModeChange: onModeChange\n    })))\n  );\n}\n\nexport default CalendarHeader;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/calendar/Header.js"],"names":["React","useContext","useMemo","FormItemInputContext","Button","Group","Select","YearSelectOffset","YearSelectTotal","YearSelect","props","fullscreen","validRange","generateConfig","locale","prefixCls","value","onChange","divRef","year","getYear","getNow","start","end","suffix","options","index","push","label","createElement","size","undefined","className","numYear","newDate","setYear","startDate","endDate","newYear","newMonth","getMonth","setMonth","getPopupContainer","current","MonthSelect","month","rangeStart","rangeEnd","currentYear","months","shortMonths","getShortMonths","ModeSwitch","mode","onModeChange","_ref","target","CalendarHeader","useRef","formItemInputContext","mergedFormItemInputContext","Object","assign","isFormItemInput","sharedProps","ref","Provider","v"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { Button, Group } from '../radio';\nimport Select from '../select';\nconst YearSelectOffset = 10;\nconst YearSelectTotal = 20;\nfunction YearSelect(props) {\n  const {\n    fullscreen,\n    validRange,\n    generateConfig,\n    locale,\n    prefixCls,\n    value,\n    onChange,\n    divRef\n  } = props;\n  const year = generateConfig.getYear(value || generateConfig.getNow());\n  let start = year - YearSelectOffset;\n  let end = start + YearSelectTotal;\n  if (validRange) {\n    start = generateConfig.getYear(validRange[0]);\n    end = generateConfig.getYear(validRange[1]) + 1;\n  }\n  const suffix = locale && locale.year === '年' ? '年' : '';\n  const options = [];\n  for (let index = start; index < end; index++) {\n    options.push({\n      label: `${index}${suffix}`,\n      value: index\n    });\n  }\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    options: options,\n    value: year,\n    className: `${prefixCls}-year-select`,\n    onChange: numYear => {\n      let newDate = generateConfig.setYear(value, numYear);\n      if (validRange) {\n        const [startDate, endDate] = validRange;\n        const newYear = generateConfig.getYear(newDate);\n        const newMonth = generateConfig.getMonth(newDate);\n        if (newYear === generateConfig.getYear(endDate) && newMonth > generateConfig.getMonth(endDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n        }\n        if (newYear === generateConfig.getYear(startDate) && newMonth < generateConfig.getMonth(startDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n        }\n      }\n      onChange(newDate);\n    },\n    getPopupContainer: () => divRef.current\n  });\n}\nfunction MonthSelect(props) {\n  const {\n    prefixCls,\n    fullscreen,\n    validRange,\n    value,\n    generateConfig,\n    locale,\n    onChange,\n    divRef\n  } = props;\n  const month = generateConfig.getMonth(value || generateConfig.getNow());\n  let start = 0;\n  let end = 11;\n  if (validRange) {\n    const [rangeStart, rangeEnd] = validRange;\n    const currentYear = generateConfig.getYear(value);\n    if (generateConfig.getYear(rangeEnd) === currentYear) {\n      end = generateConfig.getMonth(rangeEnd);\n    }\n    if (generateConfig.getYear(rangeStart) === currentYear) {\n      start = generateConfig.getMonth(rangeStart);\n    }\n  }\n  const months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n  const options = [];\n  for (let index = start; index <= end; index += 1) {\n    options.push({\n      label: months[index],\n      value: index\n    });\n  }\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    className: `${prefixCls}-month-select`,\n    value: month,\n    options: options,\n    onChange: newMonth => {\n      onChange(generateConfig.setMonth(value, newMonth));\n    },\n    getPopupContainer: () => divRef.current\n  });\n}\nfunction ModeSwitch(props) {\n  const {\n    prefixCls,\n    locale,\n    mode,\n    fullscreen,\n    onModeChange\n  } = props;\n  return /*#__PURE__*/React.createElement(Group, {\n    onChange: _ref => {\n      let {\n        target: {\n          value\n        }\n      } = _ref;\n      onModeChange(value);\n    },\n    value: mode,\n    size: fullscreen ? undefined : 'small',\n    className: `${prefixCls}-mode-switch`\n  }, /*#__PURE__*/React.createElement(Button, {\n    value: \"month\"\n  }, locale.month), /*#__PURE__*/React.createElement(Button, {\n    value: \"year\"\n  }, locale.year));\n}\nfunction CalendarHeader(props) {\n  const {\n    prefixCls,\n    fullscreen,\n    mode,\n    onChange,\n    onModeChange\n  } = props;\n  const divRef = React.useRef(null);\n  const formItemInputContext = useContext(FormItemInputContext);\n  const mergedFormItemInputContext = useMemo(() => Object.assign(Object.assign({}, formItemInputContext), {\n    isFormItemInput: false\n  }), [formItemInputContext]);\n  const sharedProps = Object.assign(Object.assign({}, props), {\n    fullscreen,\n    divRef\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-header`,\n    ref: divRef\n  }, /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: mergedFormItemInputContext\n  }, /*#__PURE__*/React.createElement(YearSelect, Object.assign({}, sharedProps, {\n    onChange: v => {\n      onChange(v, 'year');\n    }\n  })), mode === 'month' && /*#__PURE__*/React.createElement(MonthSelect, Object.assign({}, sharedProps, {\n    onChange: v => {\n      onChange(v, 'month');\n    }\n  }))), /*#__PURE__*/React.createElement(ModeSwitch, Object.assign({}, sharedProps, {\n    onModeChange: onModeChange\n  })));\n}\nexport default CalendarHeader;"]},"metadata":{},"sourceType":"module"}