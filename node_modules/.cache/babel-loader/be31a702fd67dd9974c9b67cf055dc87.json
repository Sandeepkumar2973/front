{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport RcTooltip from 'rc-tooltip';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { getTransitionName } from '../_util/motion';\nimport getPlacements from '../_util/placements';\nimport { cloneElement, isFragment, isValidElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport { NoCompactStyle } from '../space/Compact';\nimport theme from '../theme';\nimport PurePanel from './PurePanel';\nimport useStyle from './style';\nimport { parseColor } from './util';\nconst useToken = theme.useToken;\n\nconst splitObject = (obj, keys) => {\n  const picked = {};\n  const omitted = Object.assign({}, obj);\n  keys.forEach(key => {\n    if (obj && key in obj) {\n      picked[key] = obj[key];\n      delete omitted[key];\n    }\n  });\n  return {\n    picked,\n    omitted\n  };\n}; // Fix Tooltip won't hide at disabled button\n// mouse events don't trigger at disabled button in Chrome\n// https://github.com/react-component/tooltip/issues/18\n\n\nfunction getDisabledCompatibleChildren(element, prefixCls) {\n  const elementType = element.type;\n\n  if ((elementType.__ANT_BUTTON === true || element.type === 'button') && element.props.disabled || elementType.__ANT_SWITCH === true && (element.props.disabled || element.props.loading) || elementType.__ANT_RADIO === true && element.props.disabled) {\n    // Pick some layout related style properties up to span\n    // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n    const _splitObject = splitObject(element.props.style, ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),\n          picked = _splitObject.picked,\n          omitted = _splitObject.omitted;\n\n    const spanStyle = Object.assign(Object.assign({\n      display: 'inline-block'\n    }, picked), {\n      cursor: 'not-allowed',\n      width: element.props.block ? '100%' : undefined\n    });\n    const buttonStyle = Object.assign(Object.assign({}, omitted), {\n      pointerEvents: 'none'\n    });\n    const child = cloneElement(element, {\n      style: buttonStyle,\n      className: null\n    });\n    return (\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        style: spanStyle,\n        className: classNames(element.props.className, `${prefixCls}-disabled-compatible-wrapper`)\n      }, child)\n    );\n  }\n\n  return element;\n}\n\nconst Tooltip =\n/*#__PURE__*/\nReact.forwardRef((props, ref) => {\n  var _a, _b;\n\n  const customizePrefixCls = props.prefixCls,\n        openClassName = props.openClassName,\n        getTooltipContainer = props.getTooltipContainer,\n        overlayClassName = props.overlayClassName,\n        color = props.color,\n        overlayInnerStyle = props.overlayInnerStyle,\n        children = props.children,\n        afterOpenChange = props.afterOpenChange,\n        afterVisibleChange = props.afterVisibleChange,\n        destroyTooltipOnHide = props.destroyTooltipOnHide,\n        _props$arrow = props.arrow,\n        arrow = _props$arrow === void 0 ? true : _props$arrow,\n        title = props.title,\n        overlay = props.overlay,\n        builtinPlacements = props.builtinPlacements,\n        _props$arrowPointAtCe = props.arrowPointAtCenter,\n        arrowPointAtCenter = _props$arrowPointAtCe === void 0 ? false : _props$arrowPointAtCe,\n        _props$autoAdjustOver = props.autoAdjustOverflow,\n        autoAdjustOverflow = _props$autoAdjustOver === void 0 ? true : _props$autoAdjustOver;\n  const mergedShowArrow = !!arrow;\n\n  const _useToken = useToken(),\n        token = _useToken.token;\n\n  const _React$useContext = React.useContext(ConfigContext),\n        getContextPopupContainer = _React$useContext.getPopupContainer,\n        getPrefixCls = _React$useContext.getPrefixCls,\n        direction = _React$useContext.direction; // ============================== Ref ===============================\n\n\n  const tooltipRef = React.useRef(null);\n\n  const forceAlign = () => {\n    var _a;\n\n    (_a = tooltipRef.current) === null || _a === void 0 ? void 0 : _a.forceAlign();\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    forceAlign,\n    forcePopupAlign: () => {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Tooltip', '`forcePopupAlign` is align to `forceAlign` instead.') : void 0;\n      forceAlign();\n    }\n  })); // ============================== Warn ==============================\n\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['defaultVisible', 'defaultOpen'], ['onVisibleChange', 'onOpenChange'], ['afterVisibleChange', 'afterOpenChange'], ['arrowPointAtCenter', 'arrow']].forEach(_ref => {\n      let _ref2 = _slicedToArray(_ref, 2),\n          deprecatedName = _ref2[0],\n          newName = _ref2[1];\n\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Tooltip', `\\`${deprecatedName}\\` is deprecated, please use \\`${newName}\\` instead.`) : void 0;\n    });\n    process.env.NODE_ENV !== \"production\" ? warning(!destroyTooltipOnHide || typeof destroyTooltipOnHide === 'boolean', 'Tooltip', '`destroyTooltipOnHide` no need config `keepParent` anymore. Please use `boolean` value directly.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!arrow || typeof arrow === 'boolean' || !('arrowPointAtCenter' in arrow), 'Tooltip', '`arrowPointAtCenter` in `arrow` is deprecated, please use `pointAtCenter` instead.') : void 0;\n  } // ============================== Open ==============================\n\n\n  const _useMergedState = useMergedState(false, {\n    value: (_a = props.open) !== null && _a !== void 0 ? _a : props.visible,\n    defaultValue: (_b = props.defaultOpen) !== null && _b !== void 0 ? _b : props.defaultVisible\n  }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        open = _useMergedState2[0],\n        setOpen = _useMergedState2[1];\n\n  const noTitle = !title && !overlay && title !== 0; // overlay for old version compatibility\n\n  const onOpenChange = vis => {\n    var _a, _b;\n\n    setOpen(noTitle ? false : vis);\n\n    if (!noTitle) {\n      (_a = props.onOpenChange) === null || _a === void 0 ? void 0 : _a.call(props, vis);\n      (_b = props.onVisibleChange) === null || _b === void 0 ? void 0 : _b.call(props, vis);\n    }\n  };\n\n  const tooltipPlacements = React.useMemo(() => {\n    var _a, _b;\n\n    let mergedArrowPointAtCenter = arrowPointAtCenter;\n\n    if (typeof arrow === 'object') {\n      mergedArrowPointAtCenter = (_b = (_a = arrow.pointAtCenter) !== null && _a !== void 0 ? _a : arrow.arrowPointAtCenter) !== null && _b !== void 0 ? _b : arrowPointAtCenter;\n    }\n\n    return builtinPlacements || getPlacements({\n      arrowPointAtCenter: mergedArrowPointAtCenter,\n      autoAdjustOverflow,\n      arrowWidth: mergedShowArrow ? token.sizePopupArrow : 0,\n      borderRadius: token.borderRadius,\n      offset: token.marginXXS,\n      visibleFirst: true\n    });\n  }, [arrowPointAtCenter, arrow, builtinPlacements, token]);\n  const memoOverlay = React.useMemo(() => {\n    if (title === 0) {\n      return title;\n    }\n\n    return overlay || title || '';\n  }, [overlay, title]);\n  const memoOverlayWrapper =\n  /*#__PURE__*/\n  React.createElement(NoCompactStyle, null, typeof memoOverlay === 'function' ? memoOverlay() : memoOverlay);\n\n  const getPopupContainer = props.getPopupContainer,\n        _props$placement = props.placement,\n        placement = _props$placement === void 0 ? 'top' : _props$placement,\n        _props$mouseEnterDela = props.mouseEnterDelay,\n        mouseEnterDelay = _props$mouseEnterDela === void 0 ? 0.1 : _props$mouseEnterDela,\n        _props$mouseLeaveDela = props.mouseLeaveDelay,\n        mouseLeaveDelay = _props$mouseLeaveDela === void 0 ? 0.1 : _props$mouseLeaveDela,\n        overlayStyle = props.overlayStyle,\n        rootClassName = props.rootClassName,\n        otherProps = __rest(props, [\"getPopupContainer\", \"placement\", \"mouseEnterDelay\", \"mouseLeaveDelay\", \"overlayStyle\", \"rootClassName\"]);\n\n  const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const injectFromPopover = props['data-popover-inject'];\n  let tempOpen = open; // Hide tooltip when there is no title\n\n  if (!('open' in props) && !('visible' in props) && noTitle) {\n    tempOpen = false;\n  } // ============================= Render =============================\n\n\n  const child = getDisabledCompatibleChildren(isValidElement(children) && !isFragment(children) ? children :\n  /*#__PURE__*/\n  React.createElement(\"span\", null, children), prefixCls);\n  const childProps = child.props;\n  const childCls = !childProps.className || typeof childProps.className === 'string' ? classNames(childProps.className, {\n    [openClassName || `${prefixCls}-open`]: true\n  }) : childProps.className; // Style\n\n  const _useStyle = useStyle(prefixCls, !injectFromPopover),\n        _useStyle2 = _slicedToArray(_useStyle, 2),\n        wrapSSR = _useStyle2[0],\n        hashId = _useStyle2[1]; // Color\n\n\n  const colorInfo = parseColor(prefixCls, color);\n  const formattedOverlayInnerStyle = Object.assign(Object.assign({}, overlayInnerStyle), colorInfo.overlayStyle);\n  const arrowContentStyle = colorInfo.arrowStyle;\n  const customOverlayClassName = classNames(overlayClassName, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, colorInfo.className, rootClassName, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  React.createElement(RcTooltip, Object.assign({}, otherProps, {\n    showArrow: mergedShowArrow,\n    placement: placement,\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    prefixCls: prefixCls,\n    overlayClassName: customOverlayClassName,\n    overlayStyle: Object.assign(Object.assign({}, arrowContentStyle), overlayStyle),\n    getTooltipContainer: getPopupContainer || getTooltipContainer || getContextPopupContainer,\n    ref: tooltipRef,\n    builtinPlacements: tooltipPlacements,\n    overlay: memoOverlayWrapper,\n    visible: tempOpen,\n    onVisibleChange: onOpenChange,\n    afterVisibleChange: afterOpenChange !== null && afterOpenChange !== void 0 ? afterOpenChange : afterVisibleChange,\n    overlayInnerStyle: formattedOverlayInnerStyle,\n    arrowContent:\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: `${prefixCls}-arrow-content`\n    }),\n    motion: {\n      motionName: getTransitionName(rootPrefixCls, 'zoom-big-fast', props.transitionName),\n      motionDeadline: 1000\n    },\n    destroyTooltipOnHide: !!destroyTooltipOnHide\n  }), tempOpen ? cloneElement(child, {\n    className: childCls\n  }) : child));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Tooltip.displayName = 'Tooltip';\n}\n\nTooltip._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default Tooltip;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/tooltip/index.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","RcTooltip","useMergedState","React","getTransitionName","getPlacements","cloneElement","isFragment","isValidElement","warning","ConfigContext","NoCompactStyle","theme","PurePanel","useStyle","parseColor","useToken","splitObject","obj","keys","picked","omitted","assign","forEach","key","getDisabledCompatibleChildren","element","prefixCls","elementType","type","__ANT_BUTTON","props","disabled","__ANT_SWITCH","loading","__ANT_RADIO","style","spanStyle","display","cursor","width","block","undefined","buttonStyle","pointerEvents","child","className","createElement","Tooltip","forwardRef","ref","_a","_b","customizePrefixCls","openClassName","getTooltipContainer","overlayClassName","color","overlayInnerStyle","children","afterOpenChange","afterVisibleChange","destroyTooltipOnHide","arrow","title","overlay","builtinPlacements","arrowPointAtCenter","autoAdjustOverflow","mergedShowArrow","token","useContext","getContextPopupContainer","getPopupContainer","getPrefixCls","direction","tooltipRef","useRef","forceAlign","current","useImperativeHandle","forcePopupAlign","process","env","NODE_ENV","_ref","deprecatedName","newName","value","open","visible","defaultValue","defaultOpen","defaultVisible","setOpen","noTitle","onOpenChange","vis","onVisibleChange","tooltipPlacements","useMemo","mergedArrowPointAtCenter","pointAtCenter","arrowWidth","sizePopupArrow","borderRadius","offset","marginXXS","visibleFirst","memoOverlay","memoOverlayWrapper","placement","mouseEnterDelay","mouseLeaveDelay","overlayStyle","rootClassName","otherProps","rootPrefixCls","injectFromPopover","tempOpen","childProps","childCls","wrapSSR","hashId","colorInfo","formattedOverlayInnerStyle","arrowContentStyle","arrowStyle","customOverlayClassName","showArrow","arrowContent","motion","motionName","transitionName","motionDeadline","displayName","_InternalPanelDoNotUseOrYouWillBeFired"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport RcTooltip from 'rc-tooltip';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { getTransitionName } from '../_util/motion';\nimport getPlacements from '../_util/placements';\nimport { cloneElement, isFragment, isValidElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport { NoCompactStyle } from '../space/Compact';\nimport theme from '../theme';\nimport PurePanel from './PurePanel';\nimport useStyle from './style';\nimport { parseColor } from './util';\nconst {\n  useToken\n} = theme;\nconst splitObject = (obj, keys) => {\n  const picked = {};\n  const omitted = Object.assign({}, obj);\n  keys.forEach(key => {\n    if (obj && key in obj) {\n      picked[key] = obj[key];\n      delete omitted[key];\n    }\n  });\n  return {\n    picked,\n    omitted\n  };\n};\n// Fix Tooltip won't hide at disabled button\n// mouse events don't trigger at disabled button in Chrome\n// https://github.com/react-component/tooltip/issues/18\nfunction getDisabledCompatibleChildren(element, prefixCls) {\n  const elementType = element.type;\n  if ((elementType.__ANT_BUTTON === true || element.type === 'button') && element.props.disabled || elementType.__ANT_SWITCH === true && (element.props.disabled || element.props.loading) || elementType.__ANT_RADIO === true && element.props.disabled) {\n    // Pick some layout related style properties up to span\n    // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n    const {\n      picked,\n      omitted\n    } = splitObject(element.props.style, ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']);\n    const spanStyle = Object.assign(Object.assign({\n      display: 'inline-block'\n    }, picked), {\n      cursor: 'not-allowed',\n      width: element.props.block ? '100%' : undefined\n    });\n    const buttonStyle = Object.assign(Object.assign({}, omitted), {\n      pointerEvents: 'none'\n    });\n    const child = cloneElement(element, {\n      style: buttonStyle,\n      className: null\n    });\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: spanStyle,\n      className: classNames(element.props.className, `${prefixCls}-disabled-compatible-wrapper`)\n    }, child);\n  }\n  return element;\n}\nconst Tooltip = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    prefixCls: customizePrefixCls,\n    openClassName,\n    getTooltipContainer,\n    overlayClassName,\n    color,\n    overlayInnerStyle,\n    children,\n    afterOpenChange,\n    afterVisibleChange,\n    destroyTooltipOnHide,\n    arrow = true,\n    title,\n    overlay,\n    builtinPlacements,\n    arrowPointAtCenter = false,\n    autoAdjustOverflow = true\n  } = props;\n  const mergedShowArrow = !!arrow;\n  const {\n    token\n  } = useToken();\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  // ============================== Ref ===============================\n  const tooltipRef = React.useRef(null);\n  const forceAlign = () => {\n    var _a;\n    (_a = tooltipRef.current) === null || _a === void 0 ? void 0 : _a.forceAlign();\n  };\n  React.useImperativeHandle(ref, () => ({\n    forceAlign,\n    forcePopupAlign: () => {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Tooltip', '`forcePopupAlign` is align to `forceAlign` instead.') : void 0;\n      forceAlign();\n    }\n  }));\n  // ============================== Warn ==============================\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['defaultVisible', 'defaultOpen'], ['onVisibleChange', 'onOpenChange'], ['afterVisibleChange', 'afterOpenChange'], ['arrowPointAtCenter', 'arrow']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Tooltip', `\\`${deprecatedName}\\` is deprecated, please use \\`${newName}\\` instead.`) : void 0;\n    });\n    process.env.NODE_ENV !== \"production\" ? warning(!destroyTooltipOnHide || typeof destroyTooltipOnHide === 'boolean', 'Tooltip', '`destroyTooltipOnHide` no need config `keepParent` anymore. Please use `boolean` value directly.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!arrow || typeof arrow === 'boolean' || !('arrowPointAtCenter' in arrow), 'Tooltip', '`arrowPointAtCenter` in `arrow` is deprecated, please use `pointAtCenter` instead.') : void 0;\n  }\n  // ============================== Open ==============================\n  const [open, setOpen] = useMergedState(false, {\n    value: (_a = props.open) !== null && _a !== void 0 ? _a : props.visible,\n    defaultValue: (_b = props.defaultOpen) !== null && _b !== void 0 ? _b : props.defaultVisible\n  });\n  const noTitle = !title && !overlay && title !== 0; // overlay for old version compatibility\n  const onOpenChange = vis => {\n    var _a, _b;\n    setOpen(noTitle ? false : vis);\n    if (!noTitle) {\n      (_a = props.onOpenChange) === null || _a === void 0 ? void 0 : _a.call(props, vis);\n      (_b = props.onVisibleChange) === null || _b === void 0 ? void 0 : _b.call(props, vis);\n    }\n  };\n  const tooltipPlacements = React.useMemo(() => {\n    var _a, _b;\n    let mergedArrowPointAtCenter = arrowPointAtCenter;\n    if (typeof arrow === 'object') {\n      mergedArrowPointAtCenter = (_b = (_a = arrow.pointAtCenter) !== null && _a !== void 0 ? _a : arrow.arrowPointAtCenter) !== null && _b !== void 0 ? _b : arrowPointAtCenter;\n    }\n    return builtinPlacements || getPlacements({\n      arrowPointAtCenter: mergedArrowPointAtCenter,\n      autoAdjustOverflow,\n      arrowWidth: mergedShowArrow ? token.sizePopupArrow : 0,\n      borderRadius: token.borderRadius,\n      offset: token.marginXXS,\n      visibleFirst: true\n    });\n  }, [arrowPointAtCenter, arrow, builtinPlacements, token]);\n  const memoOverlay = React.useMemo(() => {\n    if (title === 0) {\n      return title;\n    }\n    return overlay || title || '';\n  }, [overlay, title]);\n  const memoOverlayWrapper = /*#__PURE__*/React.createElement(NoCompactStyle, null, typeof memoOverlay === 'function' ? memoOverlay() : memoOverlay);\n  const {\n      getPopupContainer,\n      placement = 'top',\n      mouseEnterDelay = 0.1,\n      mouseLeaveDelay = 0.1,\n      overlayStyle,\n      rootClassName\n    } = props,\n    otherProps = __rest(props, [\"getPopupContainer\", \"placement\", \"mouseEnterDelay\", \"mouseLeaveDelay\", \"overlayStyle\", \"rootClassName\"]);\n  const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const injectFromPopover = props['data-popover-inject'];\n  let tempOpen = open;\n  // Hide tooltip when there is no title\n  if (!('open' in props) && !('visible' in props) && noTitle) {\n    tempOpen = false;\n  }\n  // ============================= Render =============================\n  const child = getDisabledCompatibleChildren(isValidElement(children) && !isFragment(children) ? children : /*#__PURE__*/React.createElement(\"span\", null, children), prefixCls);\n  const childProps = child.props;\n  const childCls = !childProps.className || typeof childProps.className === 'string' ? classNames(childProps.className, {\n    [openClassName || `${prefixCls}-open`]: true\n  }) : childProps.className;\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls, !injectFromPopover);\n  // Color\n  const colorInfo = parseColor(prefixCls, color);\n  const formattedOverlayInnerStyle = Object.assign(Object.assign({}, overlayInnerStyle), colorInfo.overlayStyle);\n  const arrowContentStyle = colorInfo.arrowStyle;\n  const customOverlayClassName = classNames(overlayClassName, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, colorInfo.className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTooltip, Object.assign({}, otherProps, {\n    showArrow: mergedShowArrow,\n    placement: placement,\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    prefixCls: prefixCls,\n    overlayClassName: customOverlayClassName,\n    overlayStyle: Object.assign(Object.assign({}, arrowContentStyle), overlayStyle),\n    getTooltipContainer: getPopupContainer || getTooltipContainer || getContextPopupContainer,\n    ref: tooltipRef,\n    builtinPlacements: tooltipPlacements,\n    overlay: memoOverlayWrapper,\n    visible: tempOpen,\n    onVisibleChange: onOpenChange,\n    afterVisibleChange: afterOpenChange !== null && afterOpenChange !== void 0 ? afterOpenChange : afterVisibleChange,\n    overlayInnerStyle: formattedOverlayInnerStyle,\n    arrowContent: /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-arrow-content`\n    }),\n    motion: {\n      motionName: getTransitionName(rootPrefixCls, 'zoom-big-fast', props.transitionName),\n      motionDeadline: 1000\n    },\n    destroyTooltipOnHide: !!destroyTooltipOnHide\n  }), tempOpen ? cloneElement(child, {\n    className: childCls\n  }) : child));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Tooltip.displayName = 'Tooltip';\n}\nTooltip._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}