{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nimport ColorSteppers from './ColorSteppers';\n\nvar ColorRgbInput = function ColorRgbInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      onChange = _ref.onChange;\n  var colorRgbInputPrefixCls = \"\".concat(prefixCls, \"-rgb-input\");\n\n  var _useState = useState(generateColor(value || '#000')),\n      _useState2 = _slicedToArray(_useState, 2),\n      rgbValue = _useState2[0],\n      setRgbValue = _useState2[1]; // Update step value\n\n\n  useEffect(function () {\n    if (value) {\n      setRgbValue(value);\n    }\n  }, [value]);\n\n  var handleRgbChange = function handleRgbChange(step, type) {\n    var rgb = rgbValue.toRgb();\n    rgb[type] = step || 0;\n    var genColor = generateColor(rgb);\n\n    if (!value) {\n      setRgbValue(genColor);\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: colorRgbInputPrefixCls\n    },\n    /*#__PURE__*/\n    React.createElement(ColorSteppers, {\n      max: 255,\n      min: 0,\n      value: Number(rgbValue.toRgb().r),\n      prefixCls: prefixCls,\n      className: colorRgbInputPrefixCls,\n      onChange: function onChange(step) {\n        return handleRgbChange(Number(step), 'r');\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(ColorSteppers, {\n      max: 255,\n      min: 0,\n      value: Number(rgbValue.toRgb().g),\n      prefixCls: prefixCls,\n      className: colorRgbInputPrefixCls,\n      onChange: function onChange(step) {\n        return handleRgbChange(Number(step), 'g');\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(ColorSteppers, {\n      max: 255,\n      min: 0,\n      value: Number(rgbValue.toRgb().b),\n      prefixCls: prefixCls,\n      className: colorRgbInputPrefixCls,\n      onChange: function onChange(step) {\n        return handleRgbChange(Number(step), 'b');\n      }\n    }))\n  );\n};\n\nexport default ColorRgbInput;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/node_modules/antd/es/color-picker/components/ColorRgbInput.js"],"names":["React","useEffect","useState","generateColor","ColorSteppers","ColorRgbInput","_ref","prefixCls","value","onChange","colorRgbInputPrefixCls","rgbValue","setRgbValue","handleRgbChange","step","type","rgb","toRgb","genColor","createElement","className","max","min","Number","r","g","b"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nimport ColorSteppers from './ColorSteppers';\nconst ColorRgbInput = _ref => {\n  let {\n    prefixCls,\n    value,\n    onChange\n  } = _ref;\n  const colorRgbInputPrefixCls = `${prefixCls}-rgb-input`;\n  const [rgbValue, setRgbValue] = useState(generateColor(value || '#000'));\n  // Update step value\n  useEffect(() => {\n    if (value) {\n      setRgbValue(value);\n    }\n  }, [value]);\n  const handleRgbChange = (step, type) => {\n    const rgb = rgbValue.toRgb();\n    rgb[type] = step || 0;\n    const genColor = generateColor(rgb);\n    if (!value) {\n      setRgbValue(genColor);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorRgbInputPrefixCls\n  }, /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().r),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: step => handleRgbChange(Number(step), 'r')\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().g),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: step => handleRgbChange(Number(step), 'g')\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().b),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: step => handleRgbChange(Number(step), 'b')\n  }));\n};\nexport default ColorRgbInput;"]},"metadata":{},"sourceType":"module"}