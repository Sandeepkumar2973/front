{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\New folder\\\\portfolio\\\\react-portfolio-master\\\\src\\\\components\\\\contact\\\\contact.js\";\nimport React from \"react\";\nimport { Button, Form, Input, message } from 'antd';\nimport axios from 'axios';\n\nconst Contact = () => {\n  //api wrk\n  const onfinishHandler = async values => {\n    // console.log(values)\n    try {\n      const res = await axios.post('http://localhost:8080/api/user/register', values);\n\n      if (res.data.success) {\n        message.success('Message sent for sandeep !');\n      } else {\n        message.error(res.data.message);\n      }\n    } catch (error) {\n      console.log(error);\n      message.error('somthing went wrong');\n    }\n  }; //api wrk\n\n\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  /* eslint-disable no-template-curly-in-string */\n\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!',\n      number: '${label} is not a valid number!'\n    }\n  };\n  /* eslint-enable no-template-curly-in-string */\n\n  return React.createElement(\"div\", {\n    className: \"box\",\n    id: \"contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    name: \"nest-messages\",\n    onFinish: onfinishHandler,\n    style: {\n      maxWidth: 600,\n      texAlign: centre\n    },\n    validateMessages: validateMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: \"name\",\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      type: 'email'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"mobile\",\n    label: \"Mobile\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"message\",\n    label: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    wrapperCol: _objectSpread({}, layout.wrapperCol, {\n      offset: 8\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/New folder/portfolio/react-portfolio-master/src/components/contact/contact.js"],"names":["React","Button","Form","Input","message","axios","Contact","onfinishHandler","values","res","post","data","success","error","console","log","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","maxWidth","texAlign","centre","type","offset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, Input, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Contact = () =>{\r\n\r\n    //api wrk\r\n    const onfinishHandler = async(values)=>{\r\n\r\n        // console.log(values)\r\n        try {\r\n            const res = await axios.post('http://localhost:8080/api/user/register', values);\r\n            if(res.data.success){\r\n                message.success('Message sent for sandeep !')\r\n            }else{\r\n                message.error(res.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            message.error('somthing went wrong')\r\n        }\r\n    };\r\n\r\n    //api wrk\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n      };\r\n      \r\n      /* eslint-disable no-template-curly-in-string */\r\n      const validateMessages = {\r\n        required: '${label} is required!',\r\n        types: {\r\n          email: '${label} is not a valid email!',\r\n          number: '${label} is not a valid number!',\r\n        },\r\n       \r\n      };\r\n      /* eslint-enable no-template-curly-in-string */\r\n      \r\n    \r\n    return(\r\n      <div className=\"box\" id='contact'>\r\n\r\n        <Form\r\n            {...layout}\r\n            name=\"nest-messages\"\r\n            onFinish={onfinishHandler}\r\n            style={{ maxWidth: 600 , texAlign:centre}}\r\n            validateMessages={validateMessages}\r\n        >\r\n            <Form.Item name= 'name'label=\"Name\" rules={[{ required: true }]}>\r\n            <Input />\r\n            </Form.Item>\r\n            <Form.Item name='email' label=\"Email\" rules={[{ type: 'email' }]}>\r\n            <Input />\r\n            </Form.Item>\r\n            <Form.Item name= 'mobile' label=\"Mobile\" rules={[{  required: true}]}>\r\n            <Input />\r\n            </Form.Item>            \r\n            <Form.Item name='message' label=\"Message\">\r\n            <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>\r\n    )\r\n}\r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}